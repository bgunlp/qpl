id,nested_qpl,dict_qpl,yaml_qpl
e968c73bf4c0d4b6fa12af529a4c949f561b0a51ef8510f0029c9dee84948ba4,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ singer ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
de71b4f79c1ad3c71f523f6436acef9f69f5ca098b441f5055416ac23bf9bb75,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ singer ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
e394ac9df4f6eff3fff54c2cd85d37190b1ae1f4e30dd63e1577150115b277d3,"Sort OrderBy [ Age DESC ] Output [ Name , Country , Age ]
  In: Scan Table [ singer ] Output [ Name , Country , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age DESC ]"", ""output"": ""Name , Country , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Name , Country , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Country , Age
  table: singer
id: '#2'
operation: Sort
output: Name , Country , Age
predicate: OrderBy [ Age DESC ]
"
b67ff822c24588338ffb03a8d5dfa10d171e0b5e7187fc901ceb178b9e60260e,"Sort OrderBy [ Age DESC ] Output [ Name , Country , Age ]
  In: Scan Table [ singer ] Output [ Name , Country , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age DESC ]"", ""output"": ""Name , Country , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Name , Country , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Country , Age
  table: singer
id: '#2'
operation: Sort
output: Name , Country , Age
predicate: OrderBy [ Age DESC ]
"
53334ecd19e94f941108a87084020b87e9f5c41dc547b09d9aae53339cc69b0d,"Aggregate Output [ MIN(Age) AS Min_Age , AVG(Age) AS Avg_Age , MAX(Age) AS Max_Age ]
  In: Scan Table [ singer ] Predicate [ Country = 'France' ] Output [ Country , Age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Age) AS Min_Age , AVG(Age) AS Avg_Age , MAX(Age) AS Max_Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Country = 'France' ]"", ""output"": ""Country , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country , Age
  predicate: Predicate [ Country = 'France' ]
  table: singer
id: '#2'
operation: Aggregate
output: MIN(Age) AS Min_Age , AVG(Age) AS Avg_Age , MAX(Age) AS Max_Age
"
2c9124545e4b80beca6be6f312295f8cefc9dacdef86c65bcb177ccb138f723b,"Aggregate Output [ MIN(Age) AS Min_Age , AVG(Age) AS Avg_Age , MAX(Age) AS Max_Age ]
  In: Scan Table [ singer ] Predicate [ Country = 'France' ] Output [ Country , Age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Age) AS Min_Age , AVG(Age) AS Avg_Age , MAX(Age) AS Max_Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Country = 'France' ]"", ""output"": ""Country , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country , Age
  predicate: Predicate [ Country = 'France' ]
  table: singer
id: '#2'
operation: Aggregate
output: MIN(Age) AS Min_Age , AVG(Age) AS Avg_Age , MAX(Age) AS Max_Age
"
950b12210f92f7fe8accf0f9ee01cdde5d5eddbb4ee55d11c62f35fcbd04a945,"TopSort Rows [ 1 ] OrderBy [ Age ASC ] Output [ Song_Name , Song_release_year , Age ]
  In: Scan Table [ singer ] Output [ Song_Name , Song_release_year , Age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Age ASC ]"", ""output"": ""Song_Name , Song_release_year , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Song_Name , Song_release_year , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Song_Name , Song_release_year , Age
  table: singer
id: '#2'
operation: TopSort
output: Song_Name , Song_release_year , Age
predicate: Rows [ 1 ] OrderBy [ Age ASC ]
"
4f7180a6789311e9ad1d037c95fcb731331d0639d72e703d6dd5e1c58b5c24d8,"TopSort Rows [ 1 ] OrderBy [ Age ASC ] Output [ Song_Name , Song_release_year , Age ]
  In: Scan Table [ singer ] Output [ Song_Name , Song_release_year , Age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Age ASC ]"", ""output"": ""Song_Name , Song_release_year , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Song_Name , Song_release_year , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Song_Name , Song_release_year , Age
  table: singer
id: '#2'
operation: TopSort
output: Song_Name , Song_release_year , Age
predicate: Rows [ 1 ] OrderBy [ Age ASC ]
"
510cd2705d653711d8a98af4c2f583205aad0b5adf2325464970f860083224cd,Scan Table [ singer ] Predicate [ Age > 20 ] Distinct [ true ] Output [ Country ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Age > 20 ] Distinct [ true ]"", ""output"": ""Country""}","id: '#1'
operation: Scan Table
output: Country
predicate: Predicate [ Age > 20 ] Distinct [ true ]
table: singer
"
caaf4a80c883edab18f4e7e85da3f3348e643534f21bcb95b97ba3db14647a8d,Scan Table [ singer ] Predicate [ Age > 20 ] Distinct [ true ] Output [ Country ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Age > 20 ] Distinct [ true ]"", ""output"": ""Country""}","id: '#1'
operation: Scan Table
output: Country
predicate: Predicate [ Age > 20 ] Distinct [ true ]
table: singer
"
eafbe8022e6e84b49effffba29e56d289b5d1e4c269a3c3933fb377ba09b6cb9,"Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
  In: Scan Table [ singer ] Output [ Country ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Country""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Country
predicate: GroupBy [ Country ]
"
e8e546b0d9e9fefa4c5f113010413fe3e77ee7f4f56456dc19a3d3ddb8314793,"Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
  In: Scan Table [ singer ] Output [ Country ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Country""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Country
predicate: GroupBy [ Country ]
"
b622b7727c2f59b8d9162a06af9d125c7b91f2b7cad4d9ba976a52a14dcbd86b,"Join Predicate [ T.Age > B.Avg_Age ] Output [ T.Song_Name ]
  In: Scan Table [ singer ] Output [ Song_Name , Age ]
  In: Aggregate Output [ AVG(Age) AS Avg_Age ]
    In: Scan Table [ singer ] Output [ Age ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Age > #2.Avg_Age ]"", ""output"": ""#3.Song_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Age) AS Avg_Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Age""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Song_Name , Age""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Age
    table: singer
  id: '#2'
  operation: Aggregate
  output: AVG(Age) AS Avg_Age
- id: '#3'
  operation: Scan Table
  output: Song_Name , Age
  table: singer
id: '#4'
operation: Join
output: '#3.Song_Name'
predicate: 'Predicate [ #3.Age > #2.Avg_Age ]'
"
bc82973d8a4f671f6ef6a3b4e3a994c811d7f72d0410a6437d4195f8c5b8a0ce,"Join Predicate [ T.Age > B.Avg_Age ] Output [ T.Song_Name ]
  In: Scan Table [ singer ] Output [ Song_Name , Age ]
  In: Aggregate Output [ AVG(Age) AS Avg_Age ]
    In: Scan Table [ singer ] Output [ Age ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Age > #2.Avg_Age ]"", ""output"": ""#3.Song_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Age) AS Avg_Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Age""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Song_Name , Age""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Age
    table: singer
  id: '#2'
  operation: Aggregate
  output: AVG(Age) AS Avg_Age
- id: '#3'
  operation: Scan Table
  output: Song_Name , Age
  table: singer
id: '#4'
operation: Join
output: '#3.Song_Name'
predicate: 'Predicate [ #3.Age > #2.Avg_Age ]'
"
702b793672d277ed4c482f92123e570d1e078e384702f2391b7b7bde241442cd,"Scan Table [ stadium ] Predicate [ Capacity >= 5000 AND Capacity <= 10000 ] Output [ Name , Location , Capacity ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""predicate"": ""Predicate [ Capacity >= 5000 AND Capacity <= 10000 ]"", ""output"": ""Name , Location , Capacity""}","id: '#1'
operation: Scan Table
output: Name , Location , Capacity
predicate: Predicate [ Capacity >= 5000 AND Capacity <= 10000 ]
table: stadium
"
03d124ae45b4ce58b2dcbf28e5bd3e207107ab62ee5a796cf67d278f03da5991,"Scan Table [ stadium ] Predicate [ Capacity >= 5000 AND Capacity <= 10000 ] Output [ Name , Location , Capacity ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""predicate"": ""Predicate [ Capacity >= 5000 AND Capacity <= 10000 ]"", ""output"": ""Name , Location , Capacity""}","id: '#1'
operation: Scan Table
output: Name , Location , Capacity
predicate: Predicate [ Capacity >= 5000 AND Capacity <= 10000 ]
table: stadium
"
9d0778eb0707002333a0bf777d868b7a14384e4a6da008beda575d4c56628f95,"Aggregate GroupBy [ Average ] Output [ Average , MAX(Capacity) AS Max_Capacity ]
  In: Scan Table [ stadium ] Output [ Average , Capacity ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Average ]"", ""output"": ""Average , MAX(Capacity) AS Max_Capacity"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Average , Capacity""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Average , Capacity
  table: stadium
id: '#2'
operation: Aggregate
output: Average , MAX(Capacity) AS Max_Capacity
predicate: GroupBy [ Average ]
"
b9856abd94006487ca31911b34964cc7e41c7ac610e84c761ed5d107e75be80b,"Aggregate Output [ MAX(Capacity) AS Max_Capacity , AVG(Capacity) AS Avg_Capacity ]
  In: Scan Table [ stadium ] Output [ Capacity ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Capacity) AS Max_Capacity , AVG(Capacity) AS Avg_Capacity"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Capacity""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Capacity
  table: stadium
id: '#2'
operation: Aggregate
output: MAX(Capacity) AS Max_Capacity , AVG(Capacity) AS Avg_Capacity
"
f2d22804f55d8c9889b17e685d05553725cce3ad4a081019ff11f72de7e9c8f1,"TopSort Rows [ 1 ] OrderBy [ Average DESC ] Output [ Name , Average , Capacity ]
  In: Scan Table [ stadium ] Output [ Name , Average , Capacity ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Average DESC ]"", ""output"": ""Name , Average , Capacity"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Average , Capacity""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Average , Capacity
  table: stadium
id: '#2'
operation: TopSort
output: Name , Average , Capacity
predicate: Rows [ 1 ] OrderBy [ Average DESC ]
"
567783c3df80bd4ff5f729ab5c7b8fc416c10a71799c470a6d2c3beb6ed5fcc9,"TopSort Rows [ 1 ] OrderBy [ Average DESC ] Output [ Name , Average , Capacity ]
  In: Scan Table [ stadium ] Output [ Name , Average , Capacity ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Average DESC ]"", ""output"": ""Name , Average , Capacity"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Average , Capacity""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Average , Capacity
  table: stadium
id: '#2'
operation: TopSort
output: Name , Average , Capacity
predicate: Rows [ 1 ] OrderBy [ Average DESC ]
"
b8c847904e750fe4416bc380d732457def4ae381a28aa719d6a951f5fc9d7fad,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ concert ] Predicate [ Year = 2014 OR Year = 2015 ] Output [ Year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 OR Year = 2015 ]"", ""output"": ""Year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year
  predicate: Predicate [ Year = 2014 OR Year = 2015 ]
  table: concert
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
c3d09bbd5ef44b3e809bb09034af2f560f4d623215e8376b9b7c125a7a724849,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ concert ] Predicate [ Year = 2014 OR Year = 2015 ] Output [ Year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 OR Year = 2015 ]"", ""output"": ""Year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year
  predicate: Predicate [ Year = 2014 OR Year = 2015 ]
  table: concert
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
dcd57f330d2deb88d06e3aa786b8bad819dc63de5e9110d4fbb94cbab2d57c1f,"Aggregate GroupBy [ Stadium_ID ] Output [ Name , countstar AS Count_Star ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ B.Stadium_ID , T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Stadium_ID ]
    In: Scan Table [ concert ] Output [ Stadium_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Stadium_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Stadium_ID = #2.Stadium_ID ]"", ""output"": ""#1.Stadium_ID , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Stadium_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Stadium_ID
    table: concert
  - id: '#2'
    operation: Scan Table
    output: Name , Stadium_ID
    table: stadium
  id: '#3'
  operation: Join
  output: '#1.Stadium_ID , #2.Name'
  predicate: 'Predicate [ #1.Stadium_ID = #2.Stadium_ID ]'
id: '#4'
operation: Aggregate
output: Name , countstar AS Count_Star
predicate: GroupBy [ Stadium_ID ]
"
d011124ee39b8a8168783bbde992cc343aa3b925ea416d5262d1d21b8276ec93,"Aggregate GroupBy [ Stadium_ID ] Output [ Name , countstar AS Count_Star ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ B.Stadium_ID , T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Stadium_ID ]
    In: Scan Table [ concert ] Output [ Stadium_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Stadium_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Stadium_ID = #2.Stadium_ID ]"", ""output"": ""#1.Stadium_ID , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Stadium_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Stadium_ID
    table: concert
  - id: '#2'
    operation: Scan Table
    output: Name , Stadium_ID
    table: stadium
  id: '#3'
  operation: Join
  output: '#1.Stadium_ID , #2.Name'
  predicate: 'Predicate [ #1.Stadium_ID = #2.Stadium_ID ]'
id: '#4'
operation: Aggregate
output: Name , countstar AS Count_Star
predicate: GroupBy [ Stadium_ID ]
"
1b4ff28beddb2e20b5b98772dc08dc31b033b25d3bb666da28b6bfc81b517174,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Capacity , Name ]
  In: Aggregate GroupBy [ Stadium_ID ] Output [ Capacity , Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ T.Stadium_ID , T.Capacity , T.Name ]
      In: Scan Table [ stadium ] Output [ Capacity , Stadium_ID , Name ]
      In: Scan Table [ concert ] Predicate [ Year >= 2014 ] Output [ Year , Stadium_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Capacity , Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Stadium_ID ]"", ""output"": ""Capacity , Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Stadium_ID = #2.Stadium_ID ]"", ""output"": ""#2.Stadium_ID , #2.Capacity , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year >= 2014 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Capacity , Stadium_ID , Name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Year , Stadium_ID
      predicate: Predicate [ Year >= 2014 ]
      table: concert
    - id: '#2'
      operation: Scan Table
      output: Capacity , Stadium_ID , Name
      table: stadium
    id: '#3'
    operation: Join
    output: '#2.Stadium_ID , #2.Capacity , #2.Name'
    predicate: 'Predicate [ #1.Stadium_ID = #2.Stadium_ID ]'
  id: '#4'
  operation: Aggregate
  output: Capacity , Name , countstar AS Count_Star
  predicate: GroupBy [ Stadium_ID ]
id: '#5'
operation: TopSort
output: Count_Star , Capacity , Name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
6b4498103b5d61a19827ce25667aea3019ce7675511bd6745692252c786e1437,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Capacity , Name ]
  In: Aggregate GroupBy [ Stadium_ID ] Output [ Capacity , Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ T.Stadium_ID , T.Capacity , T.Name ]
      In: Scan Table [ stadium ] Output [ Capacity , Stadium_ID , Name ]
      In: Scan Table [ concert ] Predicate [ Year > 2013 ] Output [ Year , Stadium_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Capacity , Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Stadium_ID ]"", ""output"": ""Capacity , Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Stadium_ID = #2.Stadium_ID ]"", ""output"": ""#2.Stadium_ID , #2.Capacity , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year > 2013 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Capacity , Stadium_ID , Name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Year , Stadium_ID
      predicate: Predicate [ Year > 2013 ]
      table: concert
    - id: '#2'
      operation: Scan Table
      output: Capacity , Stadium_ID , Name
      table: stadium
    id: '#3'
    operation: Join
    output: '#2.Stadium_ID , #2.Capacity , #2.Name'
    predicate: 'Predicate [ #1.Stadium_ID = #2.Stadium_ID ]'
  id: '#4'
  operation: Aggregate
  output: Capacity , Name , countstar AS Count_Star
  predicate: GroupBy [ Stadium_ID ]
id: '#5'
operation: TopSort
output: Count_Star , Capacity , Name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
aa6bf7301371f2cff46a9c496cf9c22dbbb4cb140dfc89f2ac109fd69c17017a,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Year , Count_Star ]
  In: Aggregate GroupBy [ Year ] Output [ Year , countstar AS Count_Star ]
    In: Scan Table [ concert ] Output [ Year ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Year , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Year ]"", ""output"": ""Year , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Year""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Year
    table: concert
  id: '#2'
  operation: Aggregate
  output: Year , countstar AS Count_Star
  predicate: GroupBy [ Year ]
id: '#3'
operation: TopSort
output: Year , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
8314cff444da4190f678444cf54af0f671ea099bf1fd89b5c3d7fd8992206b6e,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Year , Count_Star ]
  In: Aggregate GroupBy [ Year ] Output [ Year , countstar AS Count_Star ]
    In: Scan Table [ concert ] Output [ Year ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Year , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Year ]"", ""output"": ""Year , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Year""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Year
    table: concert
  id: '#2'
  operation: Aggregate
  output: Year , countstar AS Count_Star
  predicate: GroupBy [ Year ]
id: '#3'
operation: TopSort
output: Year , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
a2ffbc395f534bbcc3f680bff6c1171efc495cd5e4a165fd980fb0040bac4623,"Except Predicate [ T.Stadium_ID IS NULL OR B.Stadium_ID = T.Stadium_ID ] Output [ B.Name ]
  In: Scan Table [ concert ] Output [ Stadium_ID ]
  In: Scan Table [ stadium ] Output [ Name , Stadium_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Stadium_ID IS NULL OR #1.Stadium_ID = #2.Stadium_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Stadium_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Stadium_ID
  table: stadium
- id: '#2'
  operation: Scan Table
  output: Stadium_ID
  table: concert
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Stadium_ID IS NULL OR #1.Stadium_ID = #2.Stadium_ID ]'
"
9891f13461359514e80f559cbff62c2204692fb32e2b850d48f587e0a2f068b0,"Except Predicate [ T.Stadium_ID IS NULL OR B.Stadium_ID = T.Stadium_ID ] Output [ B.Name ]
  In: Scan Table [ concert ] Output [ Stadium_ID ]
  In: Scan Table [ stadium ] Output [ Name , Stadium_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Stadium_ID IS NULL OR #1.Stadium_ID = #2.Stadium_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Stadium_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Stadium_ID
  table: stadium
- id: '#2'
  operation: Scan Table
  output: Stadium_ID
  table: concert
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Stadium_ID IS NULL OR #1.Stadium_ID = #2.Stadium_ID ]'
"
66e090db2c6354463561fac293917d6c63cedb67424cde7983e0d0e45c06013f,"Intersect Predicate [ B.Country = T.Country ] Output [ B.Country ]
  In: Scan Table [ singer ] Predicate [ Age < 30 ] Output [ Country , Age ]
  In: Scan Table [ singer ] Predicate [ Age > 40 ] Distinct [ true ] Output [ Country , Age ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Country = #2.Country ]"", ""output"": ""#1.Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Age > 40 ] Distinct [ true ]"", ""output"": ""Country , Age""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Age < 30 ]"", ""output"": ""Country , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country , Age
  predicate: Predicate [ Age > 40 ] Distinct [ true ]
  table: singer
- id: '#2'
  operation: Scan Table
  output: Country , Age
  predicate: Predicate [ Age < 30 ]
  table: singer
id: '#3'
operation: Intersect
output: '#1.Country'
predicate: 'Predicate [ #1.Country = #2.Country ]'
"
6461e8c73ff28757df50984fd488bc500623f7b97be11073ca02266be64c7ea5,"Except Predicate [ B.Name = T.Name ] Output [ B.Name ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Stadium_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2014 ] Output [ Year , Stadium_ID ]
  In: Scan Table [ stadium ] Distinct [ true ] Output [ Name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Name = #4.Name ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Name""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Stadium_ID = #3.Stadium_ID ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Stadium_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name
  predicate: Distinct [ true ]
  table: stadium
- children:
  - id: '#2'
    operation: Scan Table
    output: Year , Stadium_ID
    predicate: Predicate [ Year = 2014 ]
    table: concert
  - id: '#3'
    operation: Scan Table
    output: Name , Stadium_ID
    table: stadium
  id: '#4'
  operation: Join
  output: '#3.Name'
  predicate: 'Predicate [ #2.Stadium_ID = #3.Stadium_ID ]'
id: '#5'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #1.Name = #4.Name ]'
"
e216cdd1ff98c38427880127f0d408f230492aace2ab20e4d7e13def209ba0cf,"Except Predicate [ B.Name = T.Name ] Output [ B.Name ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Stadium_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2014 ] Output [ Year , Stadium_ID ]
  In: Scan Table [ stadium ] Distinct [ true ] Output [ Name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Name = #4.Name ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Name""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Stadium_ID = #3.Stadium_ID ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Stadium_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name
  predicate: Distinct [ true ]
  table: stadium
- children:
  - id: '#2'
    operation: Scan Table
    output: Year , Stadium_ID
    predicate: Predicate [ Year = 2014 ]
    table: concert
  - id: '#3'
    operation: Scan Table
    output: Name , Stadium_ID
    table: stadium
  id: '#4'
  operation: Join
  output: '#3.Name'
  predicate: 'Predicate [ #2.Stadium_ID = #3.Stadium_ID ]'
id: '#5'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #1.Name = #4.Name ]'
"
b6618cc926b5b8cc6e09139cb718b03092808549394e8287aafb2b9044c491bf,"Join Predicate [ B.concert_ID = T.concert_ID ] Output [ T.Theme , B.Count_Star , T.concert_Name ]
  In: Scan Table [ concert ] Output [ Theme , concert_Name , concert_ID ]
  In: Aggregate GroupBy [ concert_ID ] Output [ countstar AS Count_Star , concert_ID ]
    In: Scan Table [ singer_in_concert ] Output [ concert_ID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.concert_ID = #3.concert_ID ]"", ""output"": ""#3.Theme , #2.Count_Star , #3.concert_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ concert_ID ]"", ""output"": ""countstar AS Count_Star , concert_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer_in_concert"", ""output"": ""concert_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Theme , concert_Name , concert_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: concert_ID
    table: singer_in_concert
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , concert_ID
  predicate: GroupBy [ concert_ID ]
- id: '#3'
  operation: Scan Table
  output: Theme , concert_Name , concert_ID
  table: concert
id: '#4'
operation: Join
output: '#3.Theme , #2.Count_Star , #3.concert_Name'
predicate: 'Predicate [ #2.concert_ID = #3.concert_ID ]'
"
7acbdc4f7c108ce2c675170ef55882c7b9871fe3b5c8dbfee26a6f757a027492,"Join Predicate [ B.concert_ID = T.concert_ID ] Output [ T.Theme , B.Count_Star , T.concert_Name ]
  In: Scan Table [ concert ] Output [ Theme , concert_Name , concert_ID ]
  In: Aggregate GroupBy [ concert_ID ] Output [ countstar AS Count_Star , concert_ID ]
    In: Scan Table [ singer_in_concert ] Output [ concert_ID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.concert_ID = #3.concert_ID ]"", ""output"": ""#3.Theme , #2.Count_Star , #3.concert_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ concert_ID ]"", ""output"": ""countstar AS Count_Star , concert_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer_in_concert"", ""output"": ""concert_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Theme , concert_Name , concert_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: concert_ID
    table: singer_in_concert
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , concert_ID
  predicate: GroupBy [ concert_ID ]
- id: '#3'
  operation: Scan Table
  output: Theme , concert_Name , concert_ID
  table: concert
id: '#4'
operation: Join
output: '#3.Theme , #2.Count_Star , #3.concert_Name'
predicate: 'Predicate [ #2.concert_ID = #3.concert_ID ]'
"
8dcbaac89354f86302d6a16bc620ce64674b57a5369eb808b45bf41afe1560de,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ T.Name , B.Count_Star ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]
  In: Aggregate GroupBy [ Singer_ID ] Output [ Singer_ID , countstar AS Count_Star ]
    In: Scan Table [ singer_in_concert ] Output [ Singer_ID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Singer_ID = #3.Singer_ID ]"", ""output"": ""#3.Name , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Singer_ID ]"", ""output"": ""Singer_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer_in_concert"", ""output"": ""Singer_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Singer_ID
    table: singer_in_concert
  id: '#2'
  operation: Aggregate
  output: Singer_ID , countstar AS Count_Star
  predicate: GroupBy [ Singer_ID ]
- id: '#3'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
id: '#4'
operation: Join
output: '#3.Name , #2.Count_Star'
predicate: 'Predicate [ #2.Singer_ID = #3.Singer_ID ]'
"
3b794e094e7479a816e8818a7514d0e91bc737440da6b6c76c26a0f6041aab68,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ T.Name , B.Count_Star ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]
  In: Aggregate GroupBy [ Singer_ID ] Output [ Singer_ID , countstar AS Count_Star ]
    In: Scan Table [ singer_in_concert ] Output [ Singer_ID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Singer_ID = #3.Singer_ID ]"", ""output"": ""#3.Name , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Singer_ID ]"", ""output"": ""Singer_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer_in_concert"", ""output"": ""Singer_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Singer_ID
    table: singer_in_concert
  id: '#2'
  operation: Aggregate
  output: Singer_ID , countstar AS Count_Star
  predicate: GroupBy [ Singer_ID ]
- id: '#3'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
id: '#4'
operation: Join
output: '#3.Name , #2.Count_Star'
predicate: 'Predicate [ #2.Singer_ID = #3.Singer_ID ]'
"
e0e10dd96631c9a039a0f6b68747d5eef73a3e9e37063de7381bdd2b09913603,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ T.Name ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]
  In: Join Predicate [ B.concert_ID = T.concert_ID ] Output [ T.Singer_ID ]
    In: Scan Table [ singer_in_concert ] Output [ Singer_ID , concert_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2014 ] Output [ Year , concert_ID ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Singer_ID = #4.Singer_ID ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.concert_ID = #2.concert_ID ]"", ""output"": ""#2.Singer_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 ]"", ""output"": ""Year , concert_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer_in_concert"", ""output"": ""Singer_ID , concert_ID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Year , concert_ID
    predicate: Predicate [ Year = 2014 ]
    table: concert
  - id: '#2'
    operation: Scan Table
    output: Singer_ID , concert_ID
    table: singer_in_concert
  id: '#3'
  operation: Join
  output: '#2.Singer_ID'
  predicate: 'Predicate [ #1.concert_ID = #2.concert_ID ]'
- id: '#4'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
id: '#5'
operation: Join
output: '#4.Name'
predicate: 'Predicate [ #3.Singer_ID = #4.Singer_ID ]'
"
647d2db94feaabbbdd3eecac3a26c557b1fb2a27a9e69a1f852d55b418ac6428,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ T.Name ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]
  In: Join Predicate [ B.concert_ID = T.concert_ID ] Output [ T.Singer_ID ]
    In: Scan Table [ singer_in_concert ] Output [ Singer_ID , concert_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2014 ] Output [ Year , concert_ID ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Singer_ID = #4.Singer_ID ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.concert_ID = #2.concert_ID ]"", ""output"": ""#2.Singer_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 ]"", ""output"": ""Year , concert_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer_in_concert"", ""output"": ""Singer_ID , concert_ID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Year , concert_ID
    predicate: Predicate [ Year = 2014 ]
    table: concert
  - id: '#2'
    operation: Scan Table
    output: Singer_ID , concert_ID
    table: singer_in_concert
  id: '#3'
  operation: Join
  output: '#2.Singer_ID'
  predicate: 'Predicate [ #1.concert_ID = #2.concert_ID ]'
- id: '#4'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
id: '#5'
operation: Join
output: '#4.Name'
predicate: 'Predicate [ #3.Singer_ID = #4.Singer_ID ]'
"
b2572fa21c59deecda02eba022c89a012ca1699008c53c14477974811d2ab2b7,"Scan Table [ singer ] Predicate [ Song_Name like '%Hey%' ] Output [ Name , Song_Name , Country ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Song_Name like '%Hey%' ]"", ""output"": ""Name , Song_Name , Country""}","id: '#1'
operation: Scan Table
output: Name , Song_Name , Country
predicate: Predicate [ Song_Name like '%Hey%' ]
table: singer
"
ffae8b56f4857f97c781656cf84ccfa69b2b5afec94b6ada88e32db83cf75a0d,"Scan Table [ singer ] Predicate [ Song_Name like '%Hey%' ] Output [ Name , Song_Name , Country ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Song_Name like '%Hey%' ]"", ""output"": ""Name , Song_Name , Country""}","id: '#1'
operation: Scan Table
output: Name , Song_Name , Country
predicate: Predicate [ Song_Name like '%Hey%' ]
table: singer
"
41d3e92c786b0b23ab2969a8beed1284689a19b42473d98e6fdd654c6b4f7a2a,"Intersect Predicate [ B.Name = T.Name ] Output [ B.Name , B.Location ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ T.Location , T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Location , Stadium_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2015 ] Output [ Year , Stadium_ID ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Distinct [ true ] Output [ T.Location , T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Location , Stadium_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2014 ] Output [ Year , Stadium_ID ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.Name = #6.Name ]"", ""output"": ""#3.Name , #3.Location"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Stadium_ID = #2.Stadium_ID ] Distinct [ true ]"", ""output"": ""#2.Location , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Location , Stadium_ID""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Stadium_ID = #5.Stadium_ID ]"", ""output"": ""#5.Location , #5.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2015 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Location , Stadium_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Year , Stadium_ID
    predicate: Predicate [ Year = 2014 ]
    table: concert
  - id: '#2'
    operation: Scan Table
    output: Name , Location , Stadium_ID
    table: stadium
  id: '#3'
  operation: Join
  output: '#2.Location , #2.Name'
  predicate: 'Predicate [ #1.Stadium_ID = #2.Stadium_ID ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Year , Stadium_ID
    predicate: Predicate [ Year = 2015 ]
    table: concert
  - id: '#5'
    operation: Scan Table
    output: Name , Location , Stadium_ID
    table: stadium
  id: '#6'
  operation: Join
  output: '#5.Location , #5.Name'
  predicate: 'Predicate [ #4.Stadium_ID = #5.Stadium_ID ]'
id: '#7'
operation: Intersect
output: '#3.Name , #3.Location'
predicate: 'Predicate [ #3.Name = #6.Name ]'
"
e12cf91c771fa037e6783e5800ff94968bc131b55bf15a098ff231834fa087d0,"Intersect Predicate [ B.Name = T.Name ] Output [ B.Name , B.Location ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ T.Location , T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Location , Stadium_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2015 ] Output [ Year , Stadium_ID ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Distinct [ true ] Output [ T.Location , T.Name ]
    In: Scan Table [ stadium ] Output [ Name , Location , Stadium_ID ]
    In: Scan Table [ concert ] Predicate [ Year = 2014 ] Output [ Year , Stadium_ID ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.Name = #6.Name ]"", ""output"": ""#3.Name , #3.Location"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Stadium_ID = #2.Stadium_ID ] Distinct [ true ]"", ""output"": ""#2.Location , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2014 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Location , Stadium_ID""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Stadium_ID = #5.Stadium_ID ]"", ""output"": ""#5.Location , #5.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""predicate"": ""Predicate [ Year = 2015 ]"", ""output"": ""Year , Stadium_ID""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Name , Location , Stadium_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Year , Stadium_ID
    predicate: Predicate [ Year = 2014 ]
    table: concert
  - id: '#2'
    operation: Scan Table
    output: Name , Location , Stadium_ID
    table: stadium
  id: '#3'
  operation: Join
  output: '#2.Location , #2.Name'
  predicate: 'Predicate [ #1.Stadium_ID = #2.Stadium_ID ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Year , Stadium_ID
    predicate: Predicate [ Year = 2015 ]
    table: concert
  - id: '#5'
    operation: Scan Table
    output: Name , Location , Stadium_ID
    table: stadium
  id: '#6'
  operation: Join
  output: '#5.Location , #5.Name'
  predicate: 'Predicate [ #4.Stadium_ID = #5.Stadium_ID ]'
id: '#7'
operation: Intersect
output: '#3.Name , #3.Location'
predicate: 'Predicate [ #3.Name = #6.Name ]'
"
42d93c17d3b56bb252b66f63ab587d51a87c7c5714ad70b39b5c3bc9b6206343,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ B.Capacity , B.Stadium_ID ]
    In: Scan Table [ concert ] Output [ Stadium_ID ]
    In: TopSort Rows [ 1 ] OrderBy [ Capacity DESC ] Output [ Capacity , Stadium_ID ]
      In: Scan Table [ stadium ] Output [ Capacity , Stadium_ID ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Stadium_ID = #3.Stadium_ID ]"", ""output"": ""#2.Capacity , #2.Stadium_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Capacity DESC ]"", ""output"": ""Capacity , Stadium_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Capacity , Stadium_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Stadium_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Capacity , Stadium_ID
      table: stadium
    id: '#2'
    operation: TopSort
    output: Capacity , Stadium_ID
    predicate: Rows [ 1 ] OrderBy [ Capacity DESC ]
  - id: '#3'
    operation: Scan Table
    output: Stadium_ID
    table: concert
  id: '#4'
  operation: Join
  output: '#2.Capacity , #2.Stadium_ID'
  predicate: 'Predicate [ #2.Stadium_ID = #3.Stadium_ID ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
d96c4aa465d4471e493741e9b5bd593cb4cee234edcbb652473be660899b21cf,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Stadium_ID = T.Stadium_ID ] Output [ B.Capacity , B.Stadium_ID ]
    In: Scan Table [ concert ] Output [ Stadium_ID ]
    In: TopSort Rows [ 1 ] OrderBy [ Capacity DESC ] Output [ Capacity , Stadium_ID ]
      In: Scan Table [ stadium ] Output [ Capacity , Stadium_ID ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Stadium_ID = #3.Stadium_ID ]"", ""output"": ""#2.Capacity , #2.Stadium_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Capacity DESC ]"", ""output"": ""Capacity , Stadium_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""stadium"", ""output"": ""Capacity , Stadium_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""concert"", ""output"": ""Stadium_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Capacity , Stadium_ID
      table: stadium
    id: '#2'
    operation: TopSort
    output: Capacity , Stadium_ID
    predicate: Rows [ 1 ] OrderBy [ Capacity DESC ]
  - id: '#3'
    operation: Scan Table
    output: Stadium_ID
    table: concert
  id: '#4'
  operation: Join
  output: '#2.Capacity , #2.Stadium_ID'
  predicate: 'Predicate [ #2.Stadium_ID = #3.Stadium_ID ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
11f48bff71b58facc88ca7563664da98e0dda72f64e9130e8c18ead0c00c7bc8,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Pets ] Predicate [ weight > 10.0 ] Output [ weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ weight > 10.0 ]"", ""output"": ""weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: weight
  predicate: Predicate [ weight > 10.0 ]
  table: Pets
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b2964fe5bd1fd23fa2bcdde07996f8745f21fd16c8c9228fced51de099028872,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Pets ] Predicate [ weight > 10.0 ] Output [ weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ weight > 10.0 ]"", ""output"": ""weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: weight
  predicate: Predicate [ weight > 10.0 ]
  table: Pets
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
cbc8c9742f9ae63285f58dd8ef3664a68b1c4c9ca8cbd40a5b1fec608cd59749,"TopSort Rows [ 1 ] OrderBy [ pet_age ASC ] Output [ weight , pet_age ]
  In: Scan Table [ Pets ] Output [ weight , pet_age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ pet_age ASC ]"", ""output"": ""weight , pet_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""weight , pet_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: weight , pet_age
  table: Pets
id: '#2'
operation: TopSort
output: weight , pet_age
predicate: Rows [ 1 ] OrderBy [ pet_age ASC ]
"
126dcbf655e9d0632f315fe6f8ed028a2c9578c87310dbb69752079828e3552c,"TopSort Rows [ 1 ] OrderBy [ pet_age ASC ] Output [ weight , pet_age ]
  In: Scan Table [ Pets ] Output [ weight , pet_age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ pet_age ASC ]"", ""output"": ""weight , pet_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""weight , pet_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: weight , pet_age
  table: Pets
id: '#2'
operation: TopSort
output: weight , pet_age
predicate: Rows [ 1 ] OrderBy [ pet_age ASC ]
"
c5a692afde2f7670bc43c3d670e2d9235236da86cfd5f2e53f5c8b520a96a5a3,"Aggregate GroupBy [ PetType ] Output [ PetType , MAX(weight) AS Max_weight ]
  In: Scan Table [ Pets ] Output [ PetType , weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ PetType ]"", ""output"": ""PetType , MAX(weight) AS Max_weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , weight
  table: Pets
id: '#2'
operation: Aggregate
output: PetType , MAX(weight) AS Max_weight
predicate: GroupBy [ PetType ]
"
dbf216d50046bffe3525bbf214859163bbb25370ba59b212e66125d6db158dd4,"Aggregate GroupBy [ PetType ] Output [ PetType , MAX(weight) AS Max_weight ]
  In: Scan Table [ Pets ] Output [ PetType , weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ PetType ]"", ""output"": ""PetType , MAX(weight) AS Max_weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , weight
  table: Pets
id: '#2'
operation: Aggregate
output: PetType , MAX(weight) AS Max_weight
predicate: GroupBy [ PetType ]
"
92e4d4fbc8091177b07c249b6d37d5ae85675b91bec3b9f0ad37339fbf223c48,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ B.StuID ]
    In: Scan Table [ Student ] Predicate [ Age > 20 ] Output [ StuID , Age ]
    In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.StuID = #2.StuID ]"", ""output"": ""#1.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""predicate"": ""Predicate [ Age > 20 ]"", ""output"": ""StuID , Age""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: StuID
    table: Has_Pet
  - id: '#2'
    operation: Scan Table
    output: StuID , Age
    predicate: Predicate [ Age > 20 ]
    table: Student
  id: '#3'
  operation: Join
  output: '#1.StuID'
  predicate: 'Predicate [ #1.StuID = #2.StuID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
025e0f3fdad5dd9c427fe7336fda1a25861b44bd961230fd0d51ebfe02eae5d6,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ B.StuID ]
    In: Scan Table [ Student ] Predicate [ Age > 20 ] Output [ StuID , Age ]
    In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.StuID = #2.StuID ]"", ""output"": ""#1.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""predicate"": ""Predicate [ Age > 20 ]"", ""output"": ""StuID , Age""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: StuID
    table: Has_Pet
  - id: '#2'
    operation: Scan Table
    output: StuID , Age
    predicate: Predicate [ Age > 20 ]
    table: Student
  id: '#3'
  operation: Join
  output: '#1.StuID'
  predicate: 'Predicate [ #1.StuID = #2.StuID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
80c3435a30611055d27a8c5e7b6cb75d19f7ffd652eb663fe6b6cb388ab74697,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ B.StuID ]
    In: Scan Table [ Student ] Predicate [ Sex = 'F' ] Output [ StuID , Sex ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'dog' ] Output [ PetType , PetID ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ]"", ""output"": ""#3.StuID"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""predicate"": ""Predicate [ Sex = 'F' ]"", ""output"": ""StuID , Sex""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'dog' ]
      table: Pets
    - id: '#2'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#3'
    operation: Join
    output: '#2.StuID'
    predicate: 'Predicate [ #1.PetID = #2.PetID ]'
  - id: '#4'
    operation: Scan Table
    output: StuID , Sex
    predicate: Predicate [ Sex = 'F' ]
    table: Student
  id: '#5'
  operation: Join
  output: '#3.StuID'
  predicate: 'Predicate [ #3.StuID = #4.StuID ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
d0add8ef7ebdb8bb0c8c3c4c33b8775c08dde1c736f9ad1398a7cbddcafa4776,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ B.StuID ]
    In: Scan Table [ Student ] Predicate [ Sex = 'F' ] Output [ StuID , Sex ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'dog' ] Output [ PetType , PetID ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ]"", ""output"": ""#3.StuID"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""predicate"": ""Predicate [ Sex = 'F' ]"", ""output"": ""StuID , Sex""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'dog' ]
      table: Pets
    - id: '#2'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#3'
    operation: Join
    output: '#2.StuID'
    predicate: 'Predicate [ #1.PetID = #2.PetID ]'
  - id: '#4'
    operation: Scan Table
    output: StuID , Sex
    predicate: Predicate [ Sex = 'F' ]
    table: Student
  id: '#5'
  operation: Join
  output: '#3.StuID'
  predicate: 'Predicate [ #3.StuID = #4.StuID ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
2a006605914d62ef4da26c68c384d0d57d1cb62ea9722f1a6f3676efc0c57456,"Aggregate Output [ COUNT(DISTINCT PetType) AS Count_Dist_PetType ]
  In: Scan Table [ Pets ] Distinct [ true ] Output [ PetType ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT PetType) AS Count_Dist_PetType"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Distinct [ true ]"", ""output"": ""PetType""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType
  predicate: Distinct [ true ]
  table: Pets
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT PetType) AS Count_Dist_PetType
"
964ffeff8f8a7b60a06ed97e9100a6c16331a8a237ac29efec1b336be3eeca13,"Aggregate Output [ COUNT(DISTINCT PetType) AS Count_Dist_PetType ]
  In: Scan Table [ Pets ] Distinct [ true ] Output [ PetType ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT PetType) AS Count_Dist_PetType"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Distinct [ true ]"", ""output"": ""PetType""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType
  predicate: Distinct [ true ]
  table: Pets
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT PetType) AS Count_Dist_PetType
"
f188a37bade4eaee7d3ab43541a2979675922644d5338853df3bf004604a9d03,"Join Predicate [ B.StuID = T.StuID ] Distinct [ true ] Output [ T.Fname ]
  In: Scan Table [ Student ] Output [ StuID , Fname ]
  In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
    In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
    In: Scan Table [ Pets ] Predicate [ PetType = 'cat' OR PetType = 'dog' ] Output [ PetType , PetID ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]"", ""output"": ""#4.Fname"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' OR PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: PetType , PetID
    predicate: Predicate [ PetType = 'cat' OR PetType = 'dog' ]
    table: Pets
  - id: '#2'
    operation: Scan Table
    output: StuID , PetID
    table: Has_Pet
  id: '#3'
  operation: Join
  output: '#2.StuID'
  predicate: 'Predicate [ #1.PetID = #2.PetID ]'
- id: '#4'
  operation: Scan Table
  output: StuID , Fname
  table: Student
id: '#5'
operation: Join
output: '#4.Fname'
predicate: 'Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]'
"
8257705ad9837960caf1153fa275f73bdb5e7c98cbbd9bd8f4d35ef3843d7e21,"Join Predicate [ B.StuID = T.StuID ] Distinct [ true ] Output [ T.Fname ]
  In: Scan Table [ Student ] Output [ StuID , Fname ]
  In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
    In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
    In: Scan Table [ Pets ] Predicate [ PetType = 'cat' OR PetType = 'dog' ] Output [ PetType , PetID ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]"", ""output"": ""#4.Fname"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' OR PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: PetType , PetID
    predicate: Predicate [ PetType = 'cat' OR PetType = 'dog' ]
    table: Pets
  - id: '#2'
    operation: Scan Table
    output: StuID , PetID
    table: Has_Pet
  id: '#3'
  operation: Join
  output: '#2.StuID'
  predicate: 'Predicate [ #1.PetID = #2.PetID ]'
- id: '#4'
  operation: Scan Table
  output: StuID , Fname
  table: Student
id: '#5'
operation: Join
output: '#4.Fname'
predicate: 'Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]'
"
1e89d560ac01a52205cd8edb1ad7d22d0084f87bb2d16c76405f82f6eed14cf0,"Intersect Predicate [ B.Fname = T.Fname ] Output [ B.Fname ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ T.Fname ]
    In: Scan Table [ Student ] Output [ StuID , Fname ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'dog' ] Output [ PetType , PetID ]
  In: Join Predicate [ B.StuID = T.StuID ] Distinct [ true ] Output [ T.Fname ]
    In: Scan Table [ Student ] Output [ StuID , Fname ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]","{""id"": ""#11"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.Fname = #10.Fname ]"", ""output"": ""#5.Fname"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]"", ""output"": ""#4.Fname"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname""}]}, {""id"": ""#10"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #8.StuID = #9.StuID ]"", ""output"": ""#9.Fname"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.PetID = #7.PetID ]"", ""output"": ""#7.StuID"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#9"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#2'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#3'
    operation: Join
    output: '#2.StuID'
    predicate: 'Predicate [ #1.PetID = #2.PetID ]'
  - id: '#4'
    operation: Scan Table
    output: StuID , Fname
    table: Student
  id: '#5'
  operation: Join
  output: '#4.Fname'
  predicate: 'Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]'
- children:
  - children:
    - id: '#6'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'dog' ]
      table: Pets
    - id: '#7'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#8'
    operation: Join
    output: '#7.StuID'
    predicate: 'Predicate [ #6.PetID = #7.PetID ]'
  - id: '#9'
    operation: Scan Table
    output: StuID , Fname
    table: Student
  id: '#10'
  operation: Join
  output: '#9.Fname'
  predicate: 'Predicate [ #8.StuID = #9.StuID ]'
id: '#11'
operation: Intersect
output: '#5.Fname'
predicate: 'Predicate [ #5.Fname = #10.Fname ]'
"
18410d6eea9eaaa4ded15500a3cfd28e14e048a9c0b11d9c6c27f1ebd20ba32c,"Intersect Predicate [ B.Fname = T.Fname ] Output [ B.Fname ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ T.Fname ]
    In: Scan Table [ Student ] Output [ StuID , Fname ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'dog' ] Output [ PetType , PetID ]
  In: Join Predicate [ B.StuID = T.StuID ] Distinct [ true ] Output [ T.Fname ]
    In: Scan Table [ Student ] Output [ StuID , Fname ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]","{""id"": ""#11"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.Fname = #10.Fname ]"", ""output"": ""#5.Fname"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]"", ""output"": ""#4.Fname"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname""}]}, {""id"": ""#10"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #8.StuID = #9.StuID ]"", ""output"": ""#9.Fname"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.PetID = #7.PetID ]"", ""output"": ""#7.StuID"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#9"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#2'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#3'
    operation: Join
    output: '#2.StuID'
    predicate: 'Predicate [ #1.PetID = #2.PetID ]'
  - id: '#4'
    operation: Scan Table
    output: StuID , Fname
    table: Student
  id: '#5'
  operation: Join
  output: '#4.Fname'
  predicate: 'Predicate [ #3.StuID = #4.StuID ] Distinct [ true ]'
- children:
  - children:
    - id: '#6'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'dog' ]
      table: Pets
    - id: '#7'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#8'
    operation: Join
    output: '#7.StuID'
    predicate: 'Predicate [ #6.PetID = #7.PetID ]'
  - id: '#9'
    operation: Scan Table
    output: StuID , Fname
    table: Student
  id: '#10'
  operation: Join
  output: '#9.Fname'
  predicate: 'Predicate [ #8.StuID = #9.StuID ]'
id: '#11'
operation: Intersect
output: '#5.Fname'
predicate: 'Predicate [ #5.Fname = #10.Fname ]'
"
b231dc84cc5a3164c7790160a3d477c445f337f31d5eb74b92fa01a38341a47c,"Except Predicate [ B.StuID = T.StuID ] Output [ B.Major , B.Age ]
  In: Intersect Predicate [ T.StuID = B.StuID ] Output [ B.StuID ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]
    In: Scan Table [ Student ] Output [ StuID ]
  In: Scan Table [ Student ] Output [ StuID , Major , Age ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.StuID = #6.StuID ]"", ""output"": ""#1.Major , #1.Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Major , Age""}, {""id"": ""#6"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.StuID = #2.StuID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.PetID = #4.PetID ]"", ""output"": ""#4.StuID"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID , Major , Age
  table: Student
- children:
  - id: '#2'
    operation: Scan Table
    output: StuID
    table: Student
  - children:
    - id: '#3'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#4'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#5'
    operation: Join
    output: '#4.StuID'
    predicate: 'Predicate [ #3.PetID = #4.PetID ]'
  id: '#6'
  operation: Intersect
  output: '#2.StuID'
  predicate: 'Predicate [ #5.StuID = #2.StuID ]'
id: '#7'
operation: Except
output: '#1.Major , #1.Age'
predicate: 'Predicate [ #1.StuID = #6.StuID ]'
"
8532df23cc7ba7610e55c027c11135e66dc3952524392a8ea9873a347c0e18b8,"Except Predicate [ B.StuID = T.StuID ] Output [ B.Major , B.Age ]
  In: Intersect Predicate [ T.StuID = B.StuID ] Output [ B.StuID ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]
    In: Scan Table [ Student ] Output [ StuID ]
  In: Scan Table [ Student ] Output [ StuID , Major , Age ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.StuID = #6.StuID ]"", ""output"": ""#1.Major , #1.Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Major , Age""}, {""id"": ""#6"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.StuID = #2.StuID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.PetID = #4.PetID ]"", ""output"": ""#4.StuID"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID , Major , Age
  table: Student
- children:
  - id: '#2'
    operation: Scan Table
    output: StuID
    table: Student
  - children:
    - id: '#3'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#4'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#5'
    operation: Join
    output: '#4.StuID'
    predicate: 'Predicate [ #3.PetID = #4.PetID ]'
  id: '#6'
  operation: Intersect
  output: '#2.StuID'
  predicate: 'Predicate [ #5.StuID = #2.StuID ]'
id: '#7'
operation: Except
output: '#1.Major , #1.Age'
predicate: 'Predicate [ #1.StuID = #6.StuID ]'
"
2ae88df2c4162c1fe98dc4ae1452e2b0dfd06263c9a682b94df0f969d32a241f,"Except Predicate [ B.StuID = T.StuID ] Output [ B.StuID ]
  In: Intersect Predicate [ T.StuID = B.StuID ] Output [ B.StuID ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]
    In: Scan Table [ Student ] Output [ StuID ]
  In: Scan Table [ Student ] Output [ StuID ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.StuID = #6.StuID ]"", ""output"": ""#1.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#6"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.StuID = #2.StuID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.PetID = #4.PetID ]"", ""output"": ""#4.StuID"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID
  table: Student
- children:
  - id: '#2'
    operation: Scan Table
    output: StuID
    table: Student
  - children:
    - id: '#3'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#4'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#5'
    operation: Join
    output: '#4.StuID'
    predicate: 'Predicate [ #3.PetID = #4.PetID ]'
  id: '#6'
  operation: Intersect
  output: '#2.StuID'
  predicate: 'Predicate [ #5.StuID = #2.StuID ]'
id: '#7'
operation: Except
output: '#1.StuID'
predicate: 'Predicate [ #1.StuID = #6.StuID ]'
"
e24d36718f19f2c01300c0eb31b9ef1c7049290a48400f756e3898c3de1ba7cd,"Except Predicate [ B.StuID = T.StuID ] Output [ B.StuID ]
  In: Intersect Predicate [ T.StuID = B.StuID ] Output [ B.StuID ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]
    In: Scan Table [ Student ] Output [ StuID ]
  In: Scan Table [ Student ] Output [ StuID ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.StuID = #6.StuID ]"", ""output"": ""#1.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#6"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.StuID = #2.StuID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.PetID = #4.PetID ]"", ""output"": ""#4.StuID"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID
  table: Student
- children:
  - id: '#2'
    operation: Scan Table
    output: StuID
    table: Student
  - children:
    - id: '#3'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#4'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#5'
    operation: Join
    output: '#4.StuID'
    predicate: 'Predicate [ #3.PetID = #4.PetID ]'
  id: '#6'
  operation: Intersect
  output: '#2.StuID'
  predicate: 'Predicate [ #5.StuID = #2.StuID ]'
id: '#7'
operation: Except
output: '#1.StuID'
predicate: 'Predicate [ #1.StuID = #6.StuID ]'
"
5c3b7fe9487dc73740aedb8cf7af43aa29068d1db0bd2ceb247e499df33f354c,"Except Predicate [ B.StuID = T.StuID ] Output [ B.Age , B.Fname ]
  In: Intersect Predicate [ T.StuID = B.StuID ] Output [ B.StuID ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]
    In: Scan Table [ Student ] Output [ StuID ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ T.Fname , T.StuID , T.Age ]
    In: Scan Table [ Student ] Output [ StuID , Fname , Age ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'dog' ] Output [ PetType , PetID ]","{""id"": ""#11"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #5.StuID = #10.StuID ]"", ""output"": ""#5.Age , #5.Fname"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ]"", ""output"": ""#4.Fname , #4.StuID , #4.Age"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname , Age""}]}, {""id"": ""#10"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #9.StuID = #6.StuID ]"", ""output"": ""#6.StuID"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#9"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #7.PetID = #8.PetID ]"", ""output"": ""#8.StuID"", ""children"": [{""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#8"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'dog' ]
      table: Pets
    - id: '#2'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#3'
    operation: Join
    output: '#2.StuID'
    predicate: 'Predicate [ #1.PetID = #2.PetID ]'
  - id: '#4'
    operation: Scan Table
    output: StuID , Fname , Age
    table: Student
  id: '#5'
  operation: Join
  output: '#4.Fname , #4.StuID , #4.Age'
  predicate: 'Predicate [ #3.StuID = #4.StuID ]'
- children:
  - id: '#6'
    operation: Scan Table
    output: StuID
    table: Student
  - children:
    - id: '#7'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#8'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#9'
    operation: Join
    output: '#8.StuID'
    predicate: 'Predicate [ #7.PetID = #8.PetID ]'
  id: '#10'
  operation: Intersect
  output: '#6.StuID'
  predicate: 'Predicate [ #9.StuID = #6.StuID ]'
id: '#11'
operation: Except
output: '#5.Age , #5.Fname'
predicate: 'Predicate [ #5.StuID = #10.StuID ]'
"
28003ee356dcce5bec7b0a6b0ac8b51f30bc4cfa2b0b8310e8dd3fb0007706b7,"Except Predicate [ B.StuID = T.StuID ] Output [ B.Age , B.Fname ]
  In: Intersect Predicate [ T.StuID = B.StuID ] Output [ B.StuID ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'cat' ] Output [ PetType , PetID ]
    In: Scan Table [ Student ] Output [ StuID ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ T.Fname , T.StuID , T.Age ]
    In: Scan Table [ Student ] Output [ StuID , Fname , Age ]
    In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
      In: Scan Table [ Pets ] Predicate [ PetType = 'dog' ] Output [ PetType , PetID ]","{""id"": ""#11"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #5.StuID = #10.StuID ]"", ""output"": ""#5.Age , #5.Fname"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ]"", ""output"": ""#4.Fname , #4.StuID , #4.Age"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'dog' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname , Age""}]}, {""id"": ""#10"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #9.StuID = #6.StuID ]"", ""output"": ""#6.StuID"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}, {""id"": ""#9"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #7.PetID = #8.PetID ]"", ""output"": ""#8.StuID"", ""children"": [{""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ PetType = 'cat' ]"", ""output"": ""PetType , PetID""}, {""id"": ""#8"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'dog' ]
      table: Pets
    - id: '#2'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#3'
    operation: Join
    output: '#2.StuID'
    predicate: 'Predicate [ #1.PetID = #2.PetID ]'
  - id: '#4'
    operation: Scan Table
    output: StuID , Fname , Age
    table: Student
  id: '#5'
  operation: Join
  output: '#4.Fname , #4.StuID , #4.Age'
  predicate: 'Predicate [ #3.StuID = #4.StuID ]'
- children:
  - id: '#6'
    operation: Scan Table
    output: StuID
    table: Student
  - children:
    - id: '#7'
      operation: Scan Table
      output: PetType , PetID
      predicate: Predicate [ PetType = 'cat' ]
      table: Pets
    - id: '#8'
      operation: Scan Table
      output: StuID , PetID
      table: Has_Pet
    id: '#9'
    operation: Join
    output: '#8.StuID'
    predicate: 'Predicate [ #7.PetID = #8.PetID ]'
  id: '#10'
  operation: Intersect
  output: '#6.StuID'
  predicate: 'Predicate [ #9.StuID = #6.StuID ]'
id: '#11'
operation: Except
output: '#5.Age , #5.Fname'
predicate: 'Predicate [ #5.StuID = #10.StuID ]'
"
fe924a806ef085407a4c416512b5a8145323d4427e751f280efeb70d1bc2c1cf,"TopSort Rows [ 1 ] OrderBy [ pet_age ASC ] Output [ PetType , weight , pet_age ]
  In: Scan Table [ Pets ] Output [ PetType , weight , pet_age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ pet_age ASC ]"", ""output"": ""PetType , weight , pet_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , weight , pet_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , weight , pet_age
  table: Pets
id: '#2'
operation: TopSort
output: PetType , weight , pet_age
predicate: Rows [ 1 ] OrderBy [ pet_age ASC ]
"
4aaffeb328aed243160907dfc6c6886143ddfb519b5bdddd61990f46ad20f2a1,"TopSort Rows [ 1 ] OrderBy [ pet_age ASC ] Output [ PetType , weight , pet_age ]
  In: Scan Table [ Pets ] Output [ PetType , weight , pet_age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ pet_age ASC ]"", ""output"": ""PetType , weight , pet_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , weight , pet_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , weight , pet_age
  table: Pets
id: '#2'
operation: TopSort
output: PetType , weight , pet_age
predicate: Rows [ 1 ] OrderBy [ pet_age ASC ]
"
d8a40ee798a91a25e6fb481a445890439fc51d9a7674fac4b8bba65179b56c41,"Scan Table [ Pets ] Predicate [ pet_age > 1 ] Output [ weight , PetID , pet_age ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ pet_age > 1 ]"", ""output"": ""weight , PetID , pet_age""}","id: '#1'
operation: Scan Table
output: weight , PetID , pet_age
predicate: Predicate [ pet_age > 1 ]
table: Pets
"
d55de3ff73f29e284106d565743be9d15c6776d3c50766545ca8af24e2fff9e4,"Scan Table [ Pets ] Predicate [ pet_age > 1 ] Output [ weight , PetID , pet_age ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ pet_age > 1 ]"", ""output"": ""weight , PetID , pet_age""}","id: '#1'
operation: Scan Table
output: weight , PetID , pet_age
predicate: Predicate [ pet_age > 1 ]
table: Pets
"
14675f95b778f27a99a45c1da9ba1a4976478bf0be82d56d97978b9952346a78,"Aggregate GroupBy [ PetType ] Output [ PetType , AVG(pet_age) AS Avg_pet_age , MAX(pet_age) AS Max_pet_age ]
  In: Scan Table [ Pets ] Output [ PetType , pet_age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ PetType ]"", ""output"": ""PetType , AVG(pet_age) AS Avg_pet_age , MAX(pet_age) AS Max_pet_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , pet_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , pet_age
  table: Pets
id: '#2'
operation: Aggregate
output: PetType , AVG(pet_age) AS Avg_pet_age , MAX(pet_age) AS Max_pet_age
predicate: GroupBy [ PetType ]
"
e627d88639a10d9d3ab45b0ed4ded75eb7a6be53aa1884abb1b57143a09899af,"Aggregate GroupBy [ PetType ] Output [ PetType , AVG(pet_age) AS Avg_pet_age , MAX(pet_age) AS Max_pet_age ]
  In: Scan Table [ Pets ] Output [ PetType , pet_age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ PetType ]"", ""output"": ""PetType , AVG(pet_age) AS Avg_pet_age , MAX(pet_age) AS Max_pet_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , pet_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , pet_age
  table: Pets
id: '#2'
operation: Aggregate
output: PetType , AVG(pet_age) AS Avg_pet_age , MAX(pet_age) AS Max_pet_age
predicate: GroupBy [ PetType ]
"
1358270cfa743c906e3f59a8ee2e396a495b714ff53cab341c222aa87d9924c2,"Aggregate GroupBy [ PetType ] Output [ PetType , AVG(weight) AS Avg_weight ]
  In: Scan Table [ Pets ] Output [ PetType , weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ PetType ]"", ""output"": ""PetType , AVG(weight) AS Avg_weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , weight
  table: Pets
id: '#2'
operation: Aggregate
output: PetType , AVG(weight) AS Avg_weight
predicate: GroupBy [ PetType ]
"
5481005a8259bb52b06468461cad920f76cbbd9d0c5d8f0b587715fe6a11b912,"Aggregate GroupBy [ PetType ] Output [ PetType , AVG(weight) AS Avg_weight ]
  In: Scan Table [ Pets ] Output [ PetType , weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ PetType ]"", ""output"": ""PetType , AVG(weight) AS Avg_weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""output"": ""PetType , weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: PetType , weight
  table: Pets
id: '#2'
operation: Aggregate
output: PetType , AVG(weight) AS Avg_weight
predicate: GroupBy [ PetType ]
"
f169ba7a72e220db320e37e251c8cb9711d7acc0bee315013137bf2271abee10,"Join Predicate [ B.StuID = T.StuID ] Distinct [ true ] Output [ T.Age , T.Fname ]
  In: Scan Table [ Student ] Output [ StuID , Fname , Age ]
  In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.StuID = #2.StuID ] Distinct [ true ]"", ""output"": ""#2.Age , #2.Fname"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID
  table: Has_Pet
- id: '#2'
  operation: Scan Table
  output: StuID , Fname , Age
  table: Student
id: '#3'
operation: Join
output: '#2.Age , #2.Fname'
predicate: 'Predicate [ #1.StuID = #2.StuID ] Distinct [ true ]'
"
0e930a583ef614f6f0b41fb786e062d289fc26ba0edd412723f27bf935248a70,"Join Predicate [ B.StuID = T.StuID ] Distinct [ true ] Output [ T.Age , T.Fname ]
  In: Scan Table [ Student ] Output [ StuID , Fname , Age ]
  In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.StuID = #2.StuID ] Distinct [ true ]"", ""output"": ""#2.Age , #2.Fname"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Fname , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID
  table: Has_Pet
- id: '#2'
  operation: Scan Table
  output: StuID , Fname , Age
  table: Student
id: '#3'
operation: Join
output: '#2.Age , #2.Fname'
predicate: 'Predicate [ #1.StuID = #2.StuID ] Distinct [ true ]'
"
27252c0db0413b8693acfca670aa3ed42cd52d470b30fac453a92b3cf2e9ce82,"Join Predicate [ B.StuID = T.StuID ] Output [ T.PetID ]
  In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
  In: Scan Table [ Student ] Predicate [ LName = 'Smith' ] Output [ StuID , LName ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.StuID = #2.StuID ]"", ""output"": ""#2.PetID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""predicate"": ""Predicate [ LName = 'Smith' ]"", ""output"": ""StuID , LName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID , LName
  predicate: Predicate [ LName = 'Smith' ]
  table: Student
- id: '#2'
  operation: Scan Table
  output: StuID , PetID
  table: Has_Pet
id: '#3'
operation: Join
output: '#2.PetID'
predicate: 'Predicate [ #1.StuID = #2.StuID ]'
"
21558cf97f26dbb4214a9eae6e5df3b4c1b408de7847a6c459d57a3021c58c3b,"Join Predicate [ B.StuID = T.StuID ] Output [ T.PetID ]
  In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
  In: Scan Table [ Student ] Predicate [ LName = 'Smith' ] Output [ StuID , LName ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.StuID = #2.StuID ]"", ""output"": ""#2.PetID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""predicate"": ""Predicate [ LName = 'Smith' ]"", ""output"": ""StuID , LName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: StuID , LName
  predicate: Predicate [ LName = 'Smith' ]
  table: Student
- id: '#2'
  operation: Scan Table
  output: StuID , PetID
  table: Has_Pet
id: '#3'
operation: Join
output: '#2.PetID'
predicate: 'Predicate [ #1.StuID = #2.StuID ]'
"
ec8b526c55f9a125041bfebfcd2a771dfccddcf370f22042f6b1147afdcaafe4,"Join Predicate [ B.StuID = T.StuID ] Output [ T.StuID , B.Count_Star ]
  In: Scan Table [ Student ] Output [ StuID ]
  In: Aggregate GroupBy [ StuID ] Output [ countstar AS Count_Star , StuID ]
    In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.StuID = #3.StuID ]"", ""output"": ""#3.StuID , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ StuID ]"", ""output"": ""countstar AS Count_Star , StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: StuID
    table: Has_Pet
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , StuID
  predicate: GroupBy [ StuID ]
- id: '#3'
  operation: Scan Table
  output: StuID
  table: Student
id: '#4'
operation: Join
output: '#3.StuID , #2.Count_Star'
predicate: 'Predicate [ #2.StuID = #3.StuID ]'
"
c3e439034b6fe1bfae33907fecac07de08ca1c6e4692dd9426bffe18b4777f26,"Join Predicate [ B.StuID = T.StuID ] Output [ T.StuID , B.Count_Star ]
  In: Scan Table [ Student ] Output [ StuID ]
  In: Aggregate GroupBy [ StuID ] Output [ countstar AS Count_Star , StuID ]
    In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.StuID = #3.StuID ]"", ""output"": ""#3.StuID , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ StuID ]"", ""output"": ""countstar AS Count_Star , StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: StuID
    table: Has_Pet
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , StuID
  predicate: GroupBy [ StuID ]
- id: '#3'
  operation: Scan Table
  output: StuID
  table: Student
id: '#4'
operation: Join
output: '#3.StuID , #2.Count_Star'
predicate: 'Predicate [ #2.StuID = #3.StuID ]'
"
a7461adf7f778f867afb8fde575dd4680f7c8c40ac917ef8e354e11a8e01b73b,"Filter Predicate [ Count_Star > 1 ] Output [ Sex , Fname ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ T.Sex , B.Count_Star , T.Fname ]
    In: Scan Table [ Student ] Output [ StuID , Sex , Fname ]
    In: Aggregate GroupBy [ StuID ] Output [ countstar AS Count_Star , StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Sex , Fname"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.StuID = #3.StuID ]"", ""output"": ""#3.Sex , #2.Count_Star , #3.Fname"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ StuID ]"", ""output"": ""countstar AS Count_Star , StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Sex , Fname""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: StuID
      table: Has_Pet
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , StuID
    predicate: GroupBy [ StuID ]
  - id: '#3'
    operation: Scan Table
    output: StuID , Sex , Fname
    table: Student
  id: '#4'
  operation: Join
  output: '#3.Sex , #2.Count_Star , #3.Fname'
  predicate: 'Predicate [ #2.StuID = #3.StuID ]'
id: '#5'
operation: Filter
output: Sex , Fname
predicate: Predicate [ Count_Star > 1 ]
"
c07bf8a5269d2f7e7fb84ce9604b7842d48ec4c1986c122f1982a9ad675efea5,"Filter Predicate [ Count_Star > 1 ] Output [ Sex , Fname ]
  In: Join Predicate [ B.StuID = T.StuID ] Output [ T.Sex , B.Count_Star , T.Fname ]
    In: Scan Table [ Student ] Output [ StuID , Sex , Fname ]
    In: Aggregate GroupBy [ StuID ] Output [ countstar AS Count_Star , StuID ]
      In: Scan Table [ Has_Pet ] Output [ StuID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Sex , Fname"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.StuID = #3.StuID ]"", ""output"": ""#3.Sex , #2.Count_Star , #3.Fname"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ StuID ]"", ""output"": ""countstar AS Count_Star , StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Sex , Fname""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: StuID
      table: Has_Pet
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , StuID
    predicate: GroupBy [ StuID ]
  - id: '#3'
    operation: Scan Table
    output: StuID , Sex , Fname
    table: Student
  id: '#4'
  operation: Join
  output: '#3.Sex , #2.Count_Star , #3.Fname'
  predicate: 'Predicate [ #2.StuID = #3.StuID ]'
id: '#5'
operation: Filter
output: Sex , Fname
predicate: Predicate [ Count_Star > 1 ]
"
6fe75339376762c506c994080ce1289b6391db7a92fe1aad3b3a7528e9c66869,"Join Predicate [ B.StuID = T.StuID ] Output [ T.LName ]
  In: Scan Table [ Student ] Output [ StuID , LName ]
  In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
    In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
    In: Scan Table [ Pets ] Predicate [ pet_age = 3 AND PetType = 'cat' ] Output [ PetType , PetID , pet_age ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ]"", ""output"": ""#4.LName"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ pet_age = 3 AND PetType = 'cat' ]"", ""output"": ""PetType , PetID , pet_age""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , LName""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: PetType , PetID , pet_age
    predicate: Predicate [ pet_age = 3 AND PetType = 'cat' ]
    table: Pets
  - id: '#2'
    operation: Scan Table
    output: StuID , PetID
    table: Has_Pet
  id: '#3'
  operation: Join
  output: '#2.StuID'
  predicate: 'Predicate [ #1.PetID = #2.PetID ]'
- id: '#4'
  operation: Scan Table
  output: StuID , LName
  table: Student
id: '#5'
operation: Join
output: '#4.LName'
predicate: 'Predicate [ #3.StuID = #4.StuID ]'
"
546ff06611de4b3ac4065c402b00c84c621762013d5a957cafdab6b13860ac83,"Join Predicate [ B.StuID = T.StuID ] Output [ T.LName ]
  In: Scan Table [ Student ] Output [ StuID , LName ]
  In: Join Predicate [ B.PetID = T.PetID ] Output [ T.StuID ]
    In: Scan Table [ Has_Pet ] Output [ StuID , PetID ]
    In: Scan Table [ Pets ] Predicate [ pet_age = 3 AND PetType = 'cat' ] Output [ PetType , PetID , pet_age ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.StuID = #4.StuID ]"", ""output"": ""#4.LName"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.PetID = #2.PetID ]"", ""output"": ""#2.StuID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Pets"", ""predicate"": ""Predicate [ pet_age = 3 AND PetType = 'cat' ]"", ""output"": ""PetType , PetID , pet_age""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID , PetID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , LName""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: PetType , PetID , pet_age
    predicate: Predicate [ pet_age = 3 AND PetType = 'cat' ]
    table: Pets
  - id: '#2'
    operation: Scan Table
    output: StuID , PetID
    table: Has_Pet
  id: '#3'
  operation: Join
  output: '#2.StuID'
  predicate: 'Predicate [ #1.PetID = #2.PetID ]'
- id: '#4'
  operation: Scan Table
  output: StuID , LName
  table: Student
id: '#5'
operation: Join
output: '#4.LName'
predicate: 'Predicate [ #3.StuID = #4.StuID ]'
"
dbfcc50884c2d7e4346c3172892aa8910971ebcd3c46dba825586dd3347b9a24,"Aggregate Output [ AVG(Age) AS Avg_Age ]
  In: Except Predicate [ T.StuID IS NULL OR B.StuID = T.StuID ] Output [ B.Age ]
    In: Scan Table [ Has_Pet ] Output [ StuID ]
    In: Scan Table [ Student ] Output [ StuID , Age ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(Age) AS Avg_Age"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.StuID IS NULL OR #1.StuID = #2.StuID ]"", ""output"": ""#1.Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Age""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: StuID , Age
    table: Student
  - id: '#2'
    operation: Scan Table
    output: StuID
    table: Has_Pet
  id: '#3'
  operation: Except
  output: '#1.Age'
  predicate: 'Predicate [ #2.StuID IS NULL OR #1.StuID = #2.StuID ]'
id: '#4'
operation: Aggregate
output: AVG(Age) AS Avg_Age
"
ba1ee9f549168c44bb796a2bbdc8075e64e6df7ca595e5b4dd6c3ab0e7dc817c,"Aggregate Output [ AVG(Age) AS Avg_Age ]
  In: Except Predicate [ T.StuID IS NULL OR B.StuID = T.StuID ] Output [ B.Age ]
    In: Scan Table [ Has_Pet ] Output [ StuID ]
    In: Scan Table [ Student ] Output [ StuID , Age ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(Age) AS Avg_Age"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.StuID IS NULL OR #1.StuID = #2.StuID ]"", ""output"": ""#1.Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student"", ""output"": ""StuID , Age""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Has_Pet"", ""output"": ""StuID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: StuID , Age
    table: Student
  - id: '#2'
    operation: Scan Table
    output: StuID
    table: Has_Pet
  id: '#3'
  operation: Except
  output: '#1.Age'
  predicate: 'Predicate [ #2.StuID IS NULL OR #1.StuID = #2.StuID ]'
id: '#4'
operation: Aggregate
output: AVG(Age) AS Avg_Age
"
473d7b41fadce5025b641f1cbfabfb4e0142a9cf4a859267322201b8fc5f9040,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ continents ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: continents
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
0d5508ac8b087357c9f03f1531347cce564d823440b751d59a250ecf04a7a379,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ continents ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: continents
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2914754a1a51a5b100d4ff75aff0952ddcad058096534f9be42de91ed54669db,"Join Predicate [ B.Continent = T.ContId ] Output [ T.Continent , B.Count_Star , T.ContId ]
  In: Scan Table [ continents ] Output [ ContId , Continent ]
  In: Aggregate GroupBy [ Continent ] Output [ countstar AS Count_Star , Continent ]
    In: Scan Table [ countries ] Output [ Continent ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Continent = #3.ContId ]"", ""output"": ""#3.Continent , #2.Count_Star , #3.ContId"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""countstar AS Count_Star , Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""Continent""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""output"": ""ContId , Continent""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Continent
    table: countries
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Continent
  predicate: GroupBy [ Continent ]
- id: '#3'
  operation: Scan Table
  output: ContId , Continent
  table: continents
id: '#4'
operation: Join
output: '#3.Continent , #2.Count_Star , #3.ContId'
predicate: 'Predicate [ #2.Continent = #3.ContId ]'
"
be8751acd82b0091ce91e727267eb60c7b15c95c21bf3d8d9f7e241ed60fd7a3,"Join Predicate [ B.Continent = T.ContId ] Output [ T.Continent , B.Count_Star , T.ContId ]
  In: Scan Table [ continents ] Output [ ContId , Continent ]
  In: Aggregate GroupBy [ Continent ] Output [ countstar AS Count_Star , Continent ]
    In: Scan Table [ countries ] Output [ Continent ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Continent = #3.ContId ]"", ""output"": ""#3.Continent , #2.Count_Star , #3.ContId"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""countstar AS Count_Star , Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""Continent""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""output"": ""ContId , Continent""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Continent
    table: countries
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Continent
  predicate: GroupBy [ Continent ]
- id: '#3'
  operation: Scan Table
  output: ContId , Continent
  table: continents
id: '#4'
operation: Join
output: '#3.Continent , #2.Count_Star , #3.ContId'
predicate: 'Predicate [ #2.Continent = #3.ContId ]'
"
6c99977d3e70f4f90d745fa4f3116ae0f4423f66a5b9d7157fcf3fd8f13451ce,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ countries ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: countries
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b8e08896d0063efdc88fa6a6bffae66141b6086c3f792920f68aeffd8998b42f,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ countries ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: countries
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
9185b99e6274a74f1074d9390674f68dc176f3bd9f95bc67ad3b09b878fccc3a,"Join Predicate [ B.Maker = T.Id ] Output [ T.FullName , T.Id , B.Count_Star ]
  In: Scan Table [ car_makers ] Output [ FullName , Id ]
  In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
    In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.FullName , #3.Id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Maker
  predicate: GroupBy [ Maker ]
- id: '#3'
  operation: Scan Table
  output: FullName , Id
  table: car_makers
id: '#4'
operation: Join
output: '#3.FullName , #3.Id , #2.Count_Star'
predicate: 'Predicate [ #2.Maker = #3.Id ]'
"
1f4b6b8fe58168e372e3265b1dd9ea23b4530538ad134a2ffba2567cc80d9b8e,"Join Predicate [ B.Maker = T.Id ] Output [ T.FullName , T.Id , B.Count_Star ]
  In: Scan Table [ car_makers ] Output [ FullName , Id ]
  In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
    In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.FullName , #3.Id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Maker
  predicate: GroupBy [ Maker ]
- id: '#3'
  operation: Scan Table
  output: FullName , Id
  table: car_makers
id: '#4'
operation: Join
output: '#3.FullName , #3.Id , #2.Count_Star'
predicate: 'Predicate [ #2.Maker = #3.Id ]'
"
ed11ccc0c371befb3ffe3ea94cf16a1727cea5fdbd0c2379b78d4891bcd8f1a9,"TopSort Rows [ 1 ] OrderBy [ Horsepower ASC ] Output [ Horsepower , Model ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model , B.Horsepower ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Output [ Horsepower , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower ASC ]"", ""output"": ""Horsepower , Model"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#2.Model , #1.Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Horsepower , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Horsepower , Id
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#3'
  operation: Join
  output: '#2.Model , #1.Horsepower'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Horsepower , Model
predicate: Rows [ 1 ] OrderBy [ Horsepower ASC ]
"
4403cae911a936dae540f929868bd1cf333130dd770d1fd8be82c3244f48249c,"TopSort Rows [ 1 ] OrderBy [ Horsepower ASC ] Output [ Horsepower , Model ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model , B.Horsepower ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Output [ Horsepower , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower ASC ]"", ""output"": ""Horsepower , Model"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#2.Model , #1.Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Horsepower , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Horsepower , Id
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#3'
  operation: Join
  output: '#2.Model , #1.Horsepower'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Horsepower , Model
predicate: Rows [ 1 ] OrderBy [ Horsepower ASC ]
"
08dc2bd47d43756549ebaa3fc4b93ef053b8ccb78cf36090fb8b63aa8b29c96f,"Join Predicate [ T.Id = B.MakeId ] Output [ B.Model ]
  In: Join Predicate [ T.Weight < B.Avg_Weight ] Output [ T.Id ]
    In: Scan Table [ cars_data ] Output [ Weight , Id ]
    In: Aggregate Output [ AVG(Weight) AS Avg_Weight ]
      In: Scan Table [ cars_data ] Output [ Weight ]
  In: Scan Table [ car_names ] Output [ MakeId , Model ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Id = #1.MakeId ]"", ""output"": ""#1.Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Weight < #3.Avg_Weight ]"", ""output"": ""#4.Id"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""AVG(Weight) AS Avg_Weight"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Weight""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Weight , Id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: MakeId , Model
  table: car_names
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: Weight
      table: cars_data
    id: '#3'
    operation: Aggregate
    output: AVG(Weight) AS Avg_Weight
  - id: '#4'
    operation: Scan Table
    output: Weight , Id
    table: cars_data
  id: '#5'
  operation: Join
  output: '#4.Id'
  predicate: 'Predicate [ #4.Weight < #3.Avg_Weight ]'
id: '#6'
operation: Join
output: '#1.Model'
predicate: 'Predicate [ #5.Id = #1.MakeId ]'
"
bd50cd3346fb9f7ff49fe956873de002222ca6019f59ecc9c76a1e5b989eb493,"Join Predicate [ T.Id = B.MakeId ] Output [ B.Model ]
  In: Join Predicate [ T.Weight < B.Avg_Weight ] Output [ T.Id ]
    In: Scan Table [ cars_data ] Output [ Weight , Id ]
    In: Aggregate Output [ AVG(Weight) AS Avg_Weight ]
      In: Scan Table [ cars_data ] Output [ Weight ]
  In: Scan Table [ car_names ] Output [ MakeId , Model ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Id = #1.MakeId ]"", ""output"": ""#1.Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Weight < #3.Avg_Weight ]"", ""output"": ""#4.Id"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""AVG(Weight) AS Avg_Weight"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Weight""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Weight , Id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: MakeId , Model
  table: car_names
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: Weight
      table: cars_data
    id: '#3'
    operation: Aggregate
    output: AVG(Weight) AS Avg_Weight
  - id: '#4'
    operation: Scan Table
    output: Weight , Id
    table: cars_data
  id: '#5'
  operation: Join
  output: '#4.Id'
  predicate: 'Predicate [ #4.Weight < #3.Avg_Weight ]'
id: '#6'
operation: Join
output: '#1.Model'
predicate: 'Predicate [ #5.Id = #1.MakeId ]'
"
f13a210a276fb5976c3336f04458fd9194497a3627777813ef7e4bed4ddb8d7c,"Join Predicate [ B.Id = T.Maker ] Distinct [ true ] Output [ B.Maker ]
  In: Join Predicate [ B.Model = T.Model ] Output [ T.Maker ]
    In: Scan Table [ model_list ] Output [ Model , Maker ]
    In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model ]
      In: Scan Table [ car_names ] Output [ MakeId , Model ]
      In: Scan Table [ cars_data ] Predicate [ Year = 1970 ] Output [ Year , Id ]
  In: Scan Table [ car_makers ] Output [ Maker , Id ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #6.Maker ] Distinct [ true ]"", ""output"": ""#1.Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Maker , Id""}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Model = #5.Model ]"", ""output"": ""#5.Maker"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Id = #3.MakeId ]"", ""output"": ""#3.Model"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year = 1970 ]"", ""output"": ""Year , Id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Maker , Id
  table: car_makers
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: Year , Id
      predicate: Predicate [ Year = 1970 ]
      table: cars_data
    - id: '#3'
      operation: Scan Table
      output: MakeId , Model
      table: car_names
    id: '#4'
    operation: Join
    output: '#3.Model'
    predicate: 'Predicate [ #2.Id = #3.MakeId ]'
  - id: '#5'
    operation: Scan Table
    output: Model , Maker
    table: model_list
  id: '#6'
  operation: Join
  output: '#5.Maker'
  predicate: 'Predicate [ #4.Model = #5.Model ]'
id: '#7'
operation: Join
output: '#1.Maker'
predicate: 'Predicate [ #1.Id = #6.Maker ] Distinct [ true ]'
"
d435cfadf939ca48c701dd06598c00e6e2ef5bc5c0d70ad308404adeb96b8b4e,"Join Predicate [ B.Id = T.Maker ] Distinct [ true ] Output [ B.Maker ]
  In: Join Predicate [ B.Model = T.Model ] Output [ T.Maker ]
    In: Scan Table [ model_list ] Output [ Model , Maker ]
    In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model ]
      In: Scan Table [ car_names ] Output [ MakeId , Model ]
      In: Scan Table [ cars_data ] Predicate [ Year = 1970 ] Output [ Year , Id ]
  In: Scan Table [ car_makers ] Output [ Maker , Id ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #6.Maker ] Distinct [ true ]"", ""output"": ""#1.Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Maker , Id""}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Model = #5.Model ]"", ""output"": ""#5.Maker"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Id = #3.MakeId ]"", ""output"": ""#3.Model"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year = 1970 ]"", ""output"": ""Year , Id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Maker , Id
  table: car_makers
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: Year , Id
      predicate: Predicate [ Year = 1970 ]
      table: cars_data
    - id: '#3'
      operation: Scan Table
      output: MakeId , Model
      table: car_names
    id: '#4'
    operation: Join
    output: '#3.Model'
    predicate: 'Predicate [ #2.Id = #3.MakeId ]'
  - id: '#5'
    operation: Scan Table
    output: Model , Maker
    table: model_list
  id: '#6'
  operation: Join
  output: '#5.Maker'
  predicate: 'Predicate [ #4.Model = #5.Model ]'
id: '#7'
operation: Join
output: '#1.Maker'
predicate: 'Predicate [ #1.Id = #6.Maker ] Distinct [ true ]'
"
ad21629f0a4e48341926c3e116c4f3ae3e68f41715b9f118146b1b81010b5be1,"Join Predicate [ T.MakeId = B.Id ] Output [ B.Year , T.Make ]
  In: Scan Table [ car_names ] Output [ Make , MakeId ]
  In: Join Predicate [ T.Year = B.Min_Year ] Output [ T.Id , T.Year ]
    In: Scan Table [ cars_data ] Output [ Id , Year ]
    In: Aggregate Output [ MIN(Year) as Min_Year ]
      In: Scan Table [ cars_data ] Output [ Year ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.MakeId = #4.Id ]"", ""output"": ""#4.Year , #5.Make"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Year = #2.Min_Year ]"", ""output"": ""#3.Id , #3.Year"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Year) as Min_Year"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Year""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Id , Year""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Make , MakeId""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Year
      table: cars_data
    id: '#2'
    operation: Aggregate
    output: MIN(Year) as Min_Year
  - id: '#3'
    operation: Scan Table
    output: Id , Year
    table: cars_data
  id: '#4'
  operation: Join
  output: '#3.Id , #3.Year'
  predicate: 'Predicate [ #3.Year = #2.Min_Year ]'
- id: '#5'
  operation: Scan Table
  output: Make , MakeId
  table: car_names
id: '#6'
operation: Join
output: '#4.Year , #5.Make'
predicate: 'Predicate [ #5.MakeId = #4.Id ]'
"
71b8e3eee7e7618b7730a3dc215c5d838411a0a424df17b4823a8f1ed6b56062,"Join Predicate [ T.MakeId = B.Id ] Output [ B.Year , T.Make ]
  In: Scan Table [ car_names ] Output [ Make , MakeId ]
  In: Join Predicate [ T.Year = B.Min_Year ] Output [ T.Id , T.Year ]
    In: Scan Table [ cars_data ] Output [ Id , Year ]
    In: Aggregate Output [ MIN(Year) as Min_Year ]
      In: Scan Table [ cars_data ] Output [ Year ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.MakeId = #4.Id ]"", ""output"": ""#4.Year , #5.Make"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Year = #2.Min_Year ]"", ""output"": ""#3.Id , #3.Year"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Year) as Min_Year"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Year""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Id , Year""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Make , MakeId""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Year
      table: cars_data
    id: '#2'
    operation: Aggregate
    output: MIN(Year) as Min_Year
  - id: '#3'
    operation: Scan Table
    output: Id , Year
    table: cars_data
  id: '#4'
  operation: Join
  output: '#3.Id , #3.Year'
  predicate: 'Predicate [ #3.Year = #2.Min_Year ]'
- id: '#5'
  operation: Scan Table
  output: Make , MakeId
  table: car_names
id: '#6'
operation: Join
output: '#4.Year , #5.Make'
predicate: 'Predicate [ #5.MakeId = #4.Id ]'
"
63184492d88ed5c4c27ba64d205fbe596fe665ec2cc7351381b9572871047832,"Join Predicate [ B.Model = T.Model ] Distinct [ true ] Output [ B.Model ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Predicate [ Year > 1980 ] Output [ Year , Id ]
  In: Scan Table [ model_list ] Output [ Model ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Model = #4.Model ] Distinct [ true ]"", ""output"": ""#1.Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Id = #3.MakeId ]"", ""output"": ""#3.Model"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year > 1980 ]"", ""output"": ""Year , Id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Model
  table: model_list
- children:
  - id: '#2'
    operation: Scan Table
    output: Year , Id
    predicate: Predicate [ Year > 1980 ]
    table: cars_data
  - id: '#3'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#4'
  operation: Join
  output: '#3.Model'
  predicate: 'Predicate [ #2.Id = #3.MakeId ]'
id: '#5'
operation: Join
output: '#1.Model'
predicate: 'Predicate [ #1.Model = #4.Model ] Distinct [ true ]'
"
3060597756a5391c591fd7056a8c19f57f2d440c443ea414541bc487cacf96a2,"Join Predicate [ B.Model = T.Model ] Distinct [ true ] Output [ B.Model ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Predicate [ Year > 1980 ] Output [ Year , Id ]
  In: Scan Table [ model_list ] Output [ Model ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Model = #4.Model ] Distinct [ true ]"", ""output"": ""#1.Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Id = #3.MakeId ]"", ""output"": ""#3.Model"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year > 1980 ]"", ""output"": ""Year , Id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Model
  table: model_list
- children:
  - id: '#2'
    operation: Scan Table
    output: Year , Id
    predicate: Predicate [ Year > 1980 ]
    table: cars_data
  - id: '#3'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#4'
  operation: Join
  output: '#3.Model'
  predicate: 'Predicate [ #2.Id = #3.MakeId ]'
id: '#5'
operation: Join
output: '#1.Model'
predicate: 'Predicate [ #1.Model = #4.Model ] Distinct [ true ]'
"
1dd789dce8dca1a681e95be275697f6194aebfedc41b85f2d3c370144d719682,"Aggregate GroupBy [ Continent ] Output [ countstar AS Count_Star , Continent ]
  In: Join Predicate [ B.ContId = T.Continent ] Output [ B.Continent ]
    In: Join Predicate [ B.CountryId = T.Country ] Output [ B.Continent ]
      In: Scan Table [ car_makers ] Output [ Country ]
      In: Scan Table [ countries ] Output [ CountryId , Continent ]
    In: Scan Table [ continents ] Output [ ContId , Continent ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""countstar AS Count_Star , Continent"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ContId = #4.Continent ]"", ""output"": ""#1.Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""output"": ""ContId , Continent""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryId = #3.Country ]"", ""output"": ""#2.Continent"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , Continent""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ContId , Continent
    table: continents
  - children:
    - id: '#2'
      operation: Scan Table
      output: CountryId , Continent
      table: countries
    - id: '#3'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#4'
    operation: Join
    output: '#2.Continent'
    predicate: 'Predicate [ #2.CountryId = #3.Country ]'
  id: '#5'
  operation: Join
  output: '#1.Continent'
  predicate: 'Predicate [ #1.ContId = #4.Continent ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star , Continent
predicate: GroupBy [ Continent ]
"
5bb4eec216228c8f823b9444d1035d1d7f90937c23381a3a303840923469d256,"Aggregate GroupBy [ Continent ] Output [ countstar AS Count_Star , Continent ]
  In: Join Predicate [ B.ContId = T.Continent ] Output [ B.Continent ]
    In: Join Predicate [ B.CountryId = T.Country ] Output [ B.Continent ]
      In: Scan Table [ car_makers ] Output [ Country ]
      In: Scan Table [ countries ] Output [ CountryId , Continent ]
    In: Scan Table [ continents ] Output [ ContId , Continent ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""countstar AS Count_Star , Continent"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ContId = #4.Continent ]"", ""output"": ""#1.Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""output"": ""ContId , Continent""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryId = #3.Country ]"", ""output"": ""#2.Continent"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , Continent""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ContId , Continent
    table: continents
  - children:
    - id: '#2'
      operation: Scan Table
      output: CountryId , Continent
      table: countries
    - id: '#3'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#4'
    operation: Join
    output: '#2.Continent'
    predicate: 'Predicate [ #2.CountryId = #3.Country ]'
  id: '#5'
  operation: Join
  output: '#1.Continent'
  predicate: 'Predicate [ #1.ContId = #4.Continent ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star , Continent
predicate: GroupBy [ Continent ]
"
eb3cde0276a0fc8b1f8d2f8fafb35798919522c42a6092dd8e015b09b31af5f9,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ CountryName , Count_Star ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ T.CountryName , B.Count_Star ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
    In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
      In: Scan Table [ car_makers ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""CountryName , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Country = #3.CountryId ]"", ""output"": ""#3.CountryName , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Country
    predicate: GroupBy [ Country ]
  - id: '#3'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  id: '#4'
  operation: Join
  output: '#3.CountryName , #2.Count_Star'
  predicate: 'Predicate [ #2.Country = #3.CountryId ]'
id: '#5'
operation: TopSort
output: CountryName , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
1cc43d0dd4258523da70628365e645be9219fddc3472704ea11ef01afdc90b4d,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ CountryName , Count_Star ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ T.CountryName , B.Count_Star ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
    In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
      In: Scan Table [ car_makers ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""CountryName , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Country = #3.CountryId ]"", ""output"": ""#3.CountryName , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Country
    predicate: GroupBy [ Country ]
  - id: '#3'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  id: '#4'
  operation: Join
  output: '#3.CountryName , #2.Count_Star'
  predicate: 'Predicate [ #2.Country = #3.CountryId ]'
id: '#5'
operation: TopSort
output: CountryName , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
0f511d2d227935024ef20380b60fb30dd28ff843040398025d6c1cb4cff1ce93,"Join Predicate [ B.Maker = T.Id ] Output [ T.FullName , B.Count_Star ]
  In: Scan Table [ car_makers ] Output [ FullName , Id ]
  In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
    In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.FullName , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Maker
  predicate: GroupBy [ Maker ]
- id: '#3'
  operation: Scan Table
  output: FullName , Id
  table: car_makers
id: '#4'
operation: Join
output: '#3.FullName , #2.Count_Star'
predicate: 'Predicate [ #2.Maker = #3.Id ]'
"
587619e0bf6dca2cc715654f4d71bcfd092fea72301454feec993fd1010054e2,"Join Predicate [ B.Maker = T.Id ] Output [ T.FullName , T.Id , B.Count_Star ]
  In: Scan Table [ car_makers ] Output [ FullName , Id ]
  In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
    In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.FullName , #3.Id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Maker
  predicate: GroupBy [ Maker ]
- id: '#3'
  operation: Scan Table
  output: FullName , Id
  table: car_makers
id: '#4'
operation: Join
output: '#3.FullName , #3.Id , #2.Count_Star'
predicate: 'Predicate [ #2.Maker = #3.Id ]'
"
6b4935ecf21e96347d09f914c1134d872dd90cea1d200906b8422cec79050abe,"Join Predicate [ B.MakeId = T.Id ] Output [ T.Accelerate ]
  In: Scan Table [ cars_data ] Output [ Accelerate , Id ]
  In: Scan Table [ car_names ] Predicate [ Make = 'amc hornet sportabout (sw)' ] Output [ MakeId , Make ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.MakeId = #2.Id ]"", ""output"": ""#2.Accelerate"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""predicate"": ""Predicate [ Make = 'amc hornet sportabout (sw)' ]"", ""output"": ""MakeId , Make""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate , Id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: MakeId , Make
  predicate: Predicate [ Make = 'amc hornet sportabout (sw)' ]
  table: car_names
- id: '#2'
  operation: Scan Table
  output: Accelerate , Id
  table: cars_data
id: '#3'
operation: Join
output: '#2.Accelerate'
predicate: 'Predicate [ #1.MakeId = #2.Id ]'
"
9f6ea46405112628df6ab798bc562f0bebb75f5ea0d962a455271e949a879db5,"Join Predicate [ B.MakeId = T.Id ] Output [ T.Accelerate ]
  In: Scan Table [ cars_data ] Output [ Accelerate , Id ]
  In: Scan Table [ car_names ] Predicate [ Make = 'amc hornet sportabout (sw)' ] Output [ MakeId , Make ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.MakeId = #2.Id ]"", ""output"": ""#2.Accelerate"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""predicate"": ""Predicate [ Make = 'amc hornet sportabout (sw)' ]"", ""output"": ""MakeId , Make""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate , Id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: MakeId , Make
  predicate: Predicate [ Make = 'amc hornet sportabout (sw)' ]
  table: car_names
- id: '#2'
  operation: Scan Table
  output: Accelerate , Id
  table: cars_data
id: '#3'
operation: Join
output: '#2.Accelerate'
predicate: 'Predicate [ #1.MakeId = #2.Id ]'
"
7c03fdfb4bdd1f01de1be9c484bed41e27e47fc1fbfbf8b8c8258bc22293fd9e,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryId , B.CountryName ]
    In: Scan Table [ car_makers ] Output [ Country ]
    In: Scan Table [ countries ] Predicate [ CountryName = 'france' ] Output [ CountryId , CountryName ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryId = #2.Country ]"", ""output"": ""#1.CountryId , #1.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""predicate"": ""Predicate [ CountryName = 'france' ]"", ""output"": ""CountryId , CountryName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: CountryId , CountryName
    predicate: Predicate [ CountryName = 'france' ]
    table: countries
  - id: '#2'
    operation: Scan Table
    output: Country
    table: car_makers
  id: '#3'
  operation: Join
  output: '#1.CountryId , #1.CountryName'
  predicate: 'Predicate [ #1.CountryId = #2.Country ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
0ed3028cce8847cc6d514f0cf58b7033f1af4dc410e9a4a107a33b12e6c7dcd6,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryId , B.CountryName ]
    In: Scan Table [ car_makers ] Output [ Country ]
    In: Scan Table [ countries ] Predicate [ CountryName = 'france' ] Output [ CountryId , CountryName ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryId = #2.Country ]"", ""output"": ""#1.CountryId , #1.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""predicate"": ""Predicate [ CountryName = 'france' ]"", ""output"": ""CountryId , CountryName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: CountryId , CountryName
    predicate: Predicate [ CountryName = 'france' ]
    table: countries
  - id: '#2'
    operation: Scan Table
    output: Country
    table: car_makers
  id: '#3'
  operation: Join
  output: '#1.CountryId , #1.CountryName'
  predicate: 'Predicate [ #1.CountryId = #2.Country ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
04d01fafdfe0a2fc87f5e6a971770df71d346fe8153bd78a6c9fa41da7e500a4,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Id = T.Maker ] Output [ B.Id ]
    In: Scan Table [ model_list ] Output [ Maker ]
    In: Join Predicate [ B.CountryId = T.Country ] Output [ T.Id ]
      In: Scan Table [ car_makers ] Output [ Country , Id ]
      In: Scan Table [ countries ] Predicate [ CountryName = 'usa' ] Output [ CountryId , CountryName ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Id = #4.Maker ]"", ""output"": ""#3.Id"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryId = #2.Country ]"", ""output"": ""#2.Id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""predicate"": ""Predicate [ CountryName = 'usa' ]"", ""output"": ""CountryId , CountryName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country , Id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: CountryId , CountryName
      predicate: Predicate [ CountryName = 'usa' ]
      table: countries
    - id: '#2'
      operation: Scan Table
      output: Country , Id
      table: car_makers
    id: '#3'
    operation: Join
    output: '#2.Id'
    predicate: 'Predicate [ #1.CountryId = #2.Country ]'
  - id: '#4'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#5'
  operation: Join
  output: '#3.Id'
  predicate: 'Predicate [ #3.Id = #4.Maker ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
2686e428ed6dee19e01cd063666a64aeceba24051c34ee875917395fcb3c1cfb,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Id = T.Maker ] Output [ B.Id ]
    In: Scan Table [ model_list ] Output [ Maker ]
    In: Join Predicate [ B.CountryId = T.Country ] Output [ T.Id ]
      In: Scan Table [ car_makers ] Output [ Country , Id ]
      In: Scan Table [ countries ] Predicate [ CountryName = 'usa' ] Output [ CountryId , CountryName ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Id = #4.Maker ]"", ""output"": ""#3.Id"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryId = #2.Country ]"", ""output"": ""#2.Id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""predicate"": ""Predicate [ CountryName = 'usa' ]"", ""output"": ""CountryId , CountryName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country , Id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: CountryId , CountryName
      predicate: Predicate [ CountryName = 'usa' ]
      table: countries
    - id: '#2'
      operation: Scan Table
      output: Country , Id
      table: car_makers
    id: '#3'
    operation: Join
    output: '#2.Id'
    predicate: 'Predicate [ #1.CountryId = #2.Country ]'
  - id: '#4'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#5'
  operation: Join
  output: '#3.Id'
  predicate: 'Predicate [ #3.Id = #4.Maker ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
d008496febb26c97a226a63cf4430e16490d2020d9a76a94f3440235c54a99f8,"Aggregate Output [ AVG(MPG) AS Avg_MPG ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders = 4 ] Output [ Cylinders , MPG ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(MPG) AS Avg_MPG"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 4 ]"", ""output"": ""Cylinders , MPG""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders , MPG
  predicate: Predicate [ Cylinders = 4 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: AVG(MPG) AS Avg_MPG
"
30d1ee42433721023f9e094e933c912d93f73b99e7b74ebcee784b5b31fe5f57,"Aggregate Output [ AVG(MPG) AS Avg_MPG ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders = 4 ] Output [ Cylinders , MPG ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(MPG) AS Avg_MPG"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 4 ]"", ""output"": ""Cylinders , MPG""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders , MPG
  predicate: Predicate [ Cylinders = 4 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: AVG(MPG) AS Avg_MPG
"
181a002a5e4f8fec27048244b795b5b3f13c9550a5947e3599925be1edb96f8a,"Aggregate Output [ MIN(Weight) AS Min_Weight ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders = 8 AND Year = 1974 ] Output [ Year , Cylinders , Weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Weight) AS Min_Weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 8 AND Year = 1974 ]"", ""output"": ""Year , Cylinders , Weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Cylinders , Weight
  predicate: Predicate [ Cylinders = 8 AND Year = 1974 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: MIN(Weight) AS Min_Weight
"
7724849737aab7b098851c89a0fd1ee146c0b00594fc5f0f2b2f6789ce855c51,"Aggregate Output [ MIN(Weight) AS Min_Weight ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders = 8 AND Year = 1974 ] Output [ Year , Cylinders , Weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Weight) AS Min_Weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 8 AND Year = 1974 ]"", ""output"": ""Year , Cylinders , Weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Cylinders , Weight
  predicate: Predicate [ Cylinders = 8 AND Year = 1974 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: MIN(Weight) AS Min_Weight
"
4a94a6a7efd98efae436bb2d28b838c67c042c12a753e7c5dd6189f43f8d246d,"Scan Table [ model_list ] Output [ Model , Maker ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}","id: '#1'
operation: Scan Table
output: Model , Maker
table: model_list
"
9b93bef7838b4084eaaadeee2fb378c1b0abb129005052733376c12410782d8f,"Scan Table [ model_list ] Output [ Model , Maker ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}","id: '#1'
operation: Scan Table
output: Model , Maker
table: model_list
"
94d08d95b346a6cac868d8fad31eb0e5183488ba52e84f42ebb956b97efcf487,"Filter Predicate [ Count_Star >= 1 ] Output [ CountryId , CountryName ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ T.CountryName , B.Count_Star , T.CountryId ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
    In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
      In: Scan Table [ car_makers ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 1 ]"", ""output"": ""CountryId , CountryName"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Country = #3.CountryId ]"", ""output"": ""#3.CountryName , #2.Count_Star , #3.CountryId"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Country
    predicate: GroupBy [ Country ]
  - id: '#3'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  id: '#4'
  operation: Join
  output: '#3.CountryName , #2.Count_Star , #3.CountryId'
  predicate: 'Predicate [ #2.Country = #3.CountryId ]'
id: '#5'
operation: Filter
output: CountryId , CountryName
predicate: Predicate [ Count_Star >= 1 ]
"
462c2d108962edbbd5ff717ecf50a4f519aa59429596a9368897cbebb5f5f36f,"Filter Predicate [ Count_Star >= 1 ] Output [ CountryId , CountryName ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ T.CountryName , B.Count_Star , T.CountryId ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
    In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
      In: Scan Table [ car_makers ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 1 ]"", ""output"": ""CountryId , CountryName"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Country = #3.CountryId ]"", ""output"": ""#3.CountryName , #2.Count_Star , #3.CountryId"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Country
    predicate: GroupBy [ Country ]
  - id: '#3'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  id: '#4'
  operation: Join
  output: '#3.CountryName , #2.Count_Star , #3.CountryId'
  predicate: 'Predicate [ #2.Country = #3.CountryId ]'
id: '#5'
operation: Filter
output: CountryId , CountryName
predicate: Predicate [ Count_Star >= 1 ]
"
59be649e519f17773648586a228606126215c8567bd97545d66fc8e90ecb75d5,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Horsepower > 150.0 ] Output [ Horsepower ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Horsepower > 150.0 ]"", ""output"": ""Horsepower""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Horsepower
  predicate: Predicate [ Horsepower > 150.0 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
fbac0a412afaaebdda79a93fc97de8b3c3e4f837db81219eb1e3f4c895f50186,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Horsepower > 150.0 ] Output [ Horsepower ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Horsepower > 150.0 ]"", ""output"": ""Horsepower""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Horsepower
  predicate: Predicate [ Horsepower > 150.0 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
becf4ca70f8cd646140303dd9052c30e59cd6a3ef9f406a2c78bcfcddbac61ed,"Aggregate GroupBy [ Year ] Output [ Year , AVG(Weight) AS Avg_Weight ]
  In: Scan Table [ cars_data ] Output [ Year , Weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Year ]"", ""output"": ""Year , AVG(Weight) AS Avg_Weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Year , Weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Weight
  table: cars_data
id: '#2'
operation: Aggregate
output: Year , AVG(Weight) AS Avg_Weight
predicate: GroupBy [ Year ]
"
d007f7e960ee7114376f5b06337325a6a3415ddde9d9fc135cad7075ac451bb9,"Aggregate GroupBy [ Year ] Output [ Year , AVG(Weight) AS Avg_Weight ]
  In: Scan Table [ cars_data ] Output [ Year , Weight ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Year ]"", ""output"": ""Year , AVG(Weight) AS Avg_Weight"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Year , Weight""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Weight
  table: cars_data
id: '#2'
operation: Aggregate
output: Year , AVG(Weight) AS Avg_Weight
predicate: GroupBy [ Year ]
"
facbfa3fe4d0040431b7fdd4be746af38a6d427ca8d70f509c31b82ad1ae117b,"Filter Predicate [ Count_Star >= 3 ] Output [ CountryName ]
  In: Aggregate GroupBy [ CountryName ] Output [ countstar AS Count_Star , CountryName ]
    In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryName ]
      In: Scan Table [ car_makers ] Output [ Country ]
      In: Join Predicate [ B.ContId = T.Continent ] Output [ T.CountryId , T.CountryName ]
        In: Scan Table [ countries ] Output [ CountryId , CountryName , Continent ]
        In: Scan Table [ continents ] Predicate [ Continent = 'europe' ] Output [ ContId , Continent ]","{""id"": ""#7"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 3 ]"", ""output"": ""CountryName"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryName ]"", ""output"": ""countstar AS Count_Star , CountryName"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.CountryId = #4.Country ]"", ""output"": ""#3.CountryName"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ContId = #2.Continent ]"", ""output"": ""#2.CountryId , #2.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""predicate"": ""Predicate [ Continent = 'europe' ]"", ""output"": ""ContId , Continent""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName , Continent""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: ContId , Continent
        predicate: Predicate [ Continent = 'europe' ]
        table: continents
      - id: '#2'
        operation: Scan Table
        output: CountryId , CountryName , Continent
        table: countries
      id: '#3'
      operation: Join
      output: '#2.CountryId , #2.CountryName'
      predicate: 'Predicate [ #1.ContId = #2.Continent ]'
    - id: '#4'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#5'
    operation: Join
    output: '#3.CountryName'
    predicate: 'Predicate [ #3.CountryId = #4.Country ]'
  id: '#6'
  operation: Aggregate
  output: countstar AS Count_Star , CountryName
  predicate: GroupBy [ CountryName ]
id: '#7'
operation: Filter
output: CountryName
predicate: Predicate [ Count_Star >= 3 ]
"
df86c873292dcf609490b4289dedb15016c2b143c99e52d6908ecdb4262ae8c0,"Filter Predicate [ Count_Star >= 3 ] Output [ CountryName ]
  In: Aggregate GroupBy [ CountryName ] Output [ countstar AS Count_Star , CountryName ]
    In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryName ]
      In: Scan Table [ car_makers ] Output [ Country ]
      In: Join Predicate [ B.ContId = T.Continent ] Output [ T.CountryId , T.CountryName ]
        In: Scan Table [ countries ] Output [ CountryId , CountryName , Continent ]
        In: Scan Table [ continents ] Predicate [ Continent = 'europe' ] Output [ ContId , Continent ]","{""id"": ""#7"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 3 ]"", ""output"": ""CountryName"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryName ]"", ""output"": ""countstar AS Count_Star , CountryName"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.CountryId = #4.Country ]"", ""output"": ""#3.CountryName"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ContId = #2.Continent ]"", ""output"": ""#2.CountryId , #2.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""continents"", ""predicate"": ""Predicate [ Continent = 'europe' ]"", ""output"": ""ContId , Continent""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName , Continent""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: ContId , Continent
        predicate: Predicate [ Continent = 'europe' ]
        table: continents
      - id: '#2'
        operation: Scan Table
        output: CountryId , CountryName , Continent
        table: countries
      id: '#3'
      operation: Join
      output: '#2.CountryId , #2.CountryName'
      predicate: 'Predicate [ #1.ContId = #2.Continent ]'
    - id: '#4'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#5'
    operation: Join
    output: '#3.CountryName'
    predicate: 'Predicate [ #3.CountryId = #4.Country ]'
  id: '#6'
  operation: Aggregate
  output: countstar AS Count_Star , CountryName
  predicate: GroupBy [ CountryName ]
id: '#7'
operation: Filter
output: CountryName
predicate: Predicate [ Count_Star >= 3 ]
"
b95a8aefa5bfc0f7d9606648e7afb9ffe2f3381c9f6147255b4f9af1b166c581,"TopSort Rows [ 1 ] OrderBy [ Horsepower DESC ] Output [ Horsepower , Make ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ B.Horsepower , T.Make ]
    In: Scan Table [ car_names ] Output [ MakeId , Make ]
    In: Scan Table [ cars_data ] Predicate [ Cylinders = 3 ] Output [ Cylinders , Horsepower , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower DESC ]"", ""output"": ""Horsepower , Make"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#1.Horsepower , #2.Make"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 3 ]"", ""output"": ""Cylinders , Horsepower , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Make""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Cylinders , Horsepower , Id
    predicate: Predicate [ Cylinders = 3 ]
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Make
    table: car_names
  id: '#3'
  operation: Join
  output: '#1.Horsepower , #2.Make'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Horsepower , Make
predicate: Rows [ 1 ] OrderBy [ Horsepower DESC ]
"
adefbd4e9ba07e8bb82a8588229dab1e6e1b09b92df70ea6bd801b28f5656147,"TopSort Rows [ 1 ] OrderBy [ Horsepower DESC ] Output [ Horsepower , Make ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ B.Horsepower , T.Make ]
    In: Scan Table [ car_names ] Output [ MakeId , Make ]
    In: Scan Table [ cars_data ] Predicate [ Cylinders = 3 ] Output [ Cylinders , Horsepower , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower DESC ]"", ""output"": ""Horsepower , Make"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#1.Horsepower , #2.Make"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 3 ]"", ""output"": ""Cylinders , Horsepower , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Make""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Cylinders , Horsepower , Id
    predicate: Predicate [ Cylinders = 3 ]
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Make
    table: car_names
  id: '#3'
  operation: Join
  output: '#1.Horsepower , #2.Make'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Horsepower , Make
predicate: Rows [ 1 ] OrderBy [ Horsepower DESC ]
"
ac7e3e3adfb4715eccfa332d41fb30d7348936c72be0b770bd95702e9377cd8e,"TopSort Rows [ 1 ] OrderBy [ MPG DESC ] Output [ Model , MPG ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model , B.MPG ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Output [ MPG , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ MPG DESC ]"", ""output"": ""Model , MPG"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#2.Model , #1.MPG"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""MPG , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: MPG , Id
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#3'
  operation: Join
  output: '#2.Model , #1.MPG'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Model , MPG
predicate: Rows [ 1 ] OrderBy [ MPG DESC ]
"
a271ea14ee9ab5f826f8435851bff6696ec77d2382036bb6174344f6a211ff5c,"TopSort Rows [ 1 ] OrderBy [ MPG DESC ] Output [ Model , MPG ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model , B.MPG ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Output [ MPG , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ MPG DESC ]"", ""output"": ""Model , MPG"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#2.Model , #1.MPG"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""MPG , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: MPG , Id
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#3'
  operation: Join
  output: '#2.Model , #1.MPG'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Model , MPG
predicate: Rows [ 1 ] OrderBy [ MPG DESC ]
"
5f3e14ec082234fc4bddff7754ddeef043a6e8f0f62b789c3def9fb2df884b1e,"Aggregate Output [ AVG(Horsepower) AS Avg_Horsepower ]
  In: Scan Table [ cars_data ] Predicate [ Year < 1980 ] Output [ Year , Horsepower ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Horsepower) AS Avg_Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year < 1980 ]"", ""output"": ""Year , Horsepower""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Horsepower
  predicate: Predicate [ Year < 1980 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: AVG(Horsepower) AS Avg_Horsepower
"
47a6d2e06009bae4ce2b0899e83998340dd9d23146d200cab07b8592300f8254,"Aggregate Output [ AVG(Horsepower) AS Avg_Horsepower ]
  In: Scan Table [ cars_data ] Predicate [ Year < 1980 ] Output [ Year , Horsepower ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Horsepower) AS Avg_Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year < 1980 ]"", ""output"": ""Year , Horsepower""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Horsepower
  predicate: Predicate [ Year < 1980 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: AVG(Horsepower) AS Avg_Horsepower
"
c0c3b1cbaa2da81a562a00b83e42f0c9667e93d3156777f71ac2f1d636cfd4a6,"Aggregate Output [ AVG(Edispl) AS Avg_Edispl ]
  In: Join Predicate [ B.MakeId = T.Id ] Output [ T.Edispl ]
    In: Scan Table [ cars_data ] Output [ Edispl , Id ]
    In: Scan Table [ car_names ] Predicate [ Model = 'volvo' ] Output [ MakeId , Model ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(Edispl) AS Avg_Edispl"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.MakeId = #2.Id ]"", ""output"": ""#2.Edispl"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""predicate"": ""Predicate [ Model = 'volvo' ]"", ""output"": ""MakeId , Model""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Edispl , Id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: MakeId , Model
    predicate: Predicate [ Model = 'volvo' ]
    table: car_names
  - id: '#2'
    operation: Scan Table
    output: Edispl , Id
    table: cars_data
  id: '#3'
  operation: Join
  output: '#2.Edispl'
  predicate: 'Predicate [ #1.MakeId = #2.Id ]'
id: '#4'
operation: Aggregate
output: AVG(Edispl) AS Avg_Edispl
"
7150c07fb04ec364ebd00863c0abea6344eefeff62b6937753626258890e1907,"Aggregate Output [ AVG(Edispl) AS Avg_Edispl ]
  In: Join Predicate [ B.MakeId = T.Id ] Output [ T.Edispl ]
    In: Scan Table [ cars_data ] Output [ Edispl , Id ]
    In: Scan Table [ car_names ] Predicate [ Model = 'volvo' ] Output [ MakeId , Model ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(Edispl) AS Avg_Edispl"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.MakeId = #2.Id ]"", ""output"": ""#2.Edispl"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""predicate"": ""Predicate [ Model = 'volvo' ]"", ""output"": ""MakeId , Model""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Edispl , Id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: MakeId , Model
    predicate: Predicate [ Model = 'volvo' ]
    table: car_names
  - id: '#2'
    operation: Scan Table
    output: Edispl , Id
    table: cars_data
  id: '#3'
  operation: Join
  output: '#2.Edispl'
  predicate: 'Predicate [ #1.MakeId = #2.Id ]'
id: '#4'
operation: Aggregate
output: AVG(Edispl) AS Avg_Edispl
"
245ef4bfa9b7661d4d74c480d37bfbbd1e0120f0ccb0f6c4f281bf958b53d2a7,"Aggregate GroupBy [ Cylinders ] Output [ MAX(Accelerate) AS Max_Accelerate , Cylinders ]
  In: Scan Table [ cars_data ] Output [ Cylinders , Accelerate ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Cylinders ]"", ""output"": ""MAX(Accelerate) AS Max_Accelerate , Cylinders"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Cylinders , Accelerate""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders , Accelerate
  table: cars_data
id: '#2'
operation: Aggregate
output: MAX(Accelerate) AS Max_Accelerate , Cylinders
predicate: GroupBy [ Cylinders ]
"
4e2a3009bf1eeef36db8e5fde67079e87dc569572f0683cc2aa31d95e6f5b471,"Aggregate GroupBy [ Cylinders ] Output [ MAX(Accelerate) AS Max_Accelerate , Cylinders ]
  In: Scan Table [ cars_data ] Output [ Cylinders , Accelerate ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Cylinders ]"", ""output"": ""MAX(Accelerate) AS Max_Accelerate , Cylinders"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Cylinders , Accelerate""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders , Accelerate
  table: cars_data
id: '#2'
operation: Aggregate
output: MAX(Accelerate) AS Max_Accelerate , Cylinders
predicate: GroupBy [ Cylinders ]
"
e630d361fd786cda956fb2025a82fdc0fa6c5815f9737403f9f381688f2661c1,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Model , Count_Star ]
  In: Aggregate GroupBy [ Model ] Output [ countstar AS Count_Star , Model ]
    In: Scan Table [ car_names ] Output [ Model ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Model , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Model ]"", ""output"": ""countstar AS Count_Star , Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Model
    table: car_names
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Model
  predicate: GroupBy [ Model ]
id: '#3'
operation: TopSort
output: Model , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
59affccbb588b409c985a1028b9e13bd2266620f0fdf99638a6fbb8439490855,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Model , Count_Star ]
  In: Aggregate GroupBy [ Model ] Output [ countstar AS Count_Star , Model ]
    In: Scan Table [ car_names ] Output [ Model ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Model , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Model ]"", ""output"": ""countstar AS Count_Star , Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Model
    table: car_names
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Model
  predicate: GroupBy [ Model ]
id: '#3'
operation: TopSort
output: Model , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
1da527580c9c855544ac3513a1908359742acd8cd9962f04b70bd6599508a14b,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders > 4 ] Output [ Cylinders ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders > 4 ]"", ""output"": ""Cylinders""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders
  predicate: Predicate [ Cylinders > 4 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
11df8747ba360172906df15c76c2aa949c4feade99a36210c6558fd502edde93,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders > 4 ] Output [ Cylinders ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders > 4 ]"", ""output"": ""Cylinders""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders
  predicate: Predicate [ Cylinders > 4 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
cf86a2583a04d0373d4ca4b2b0464985067d246fde2c58d8e2de54134a4528c4,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Year = 1980 ] Output [ Year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year = 1980 ]"", ""output"": ""Year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year
  predicate: Predicate [ Year = 1980 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
d4a04c0e1753c6236ee149512841790fd345f9394462bbf66a484f68764d52ee,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Year = 1980 ] Output [ Year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Year = 1980 ]"", ""output"": ""Year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year
  predicate: Predicate [ Year = 1980 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
f30af95f9ee63fc7e4a5af67b0549b85c2b14a445a84b52ce75454c22eaaed7a,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Id = T.Maker ] Output [ B.Id , B.FullName ]
    In: Scan Table [ model_list ] Output [ Maker ]
    In: Scan Table [ car_makers ] Predicate [ FullName = 'American Motor Company' ] Output [ FullName , Id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.Maker ]"", ""output"": ""#1.Id , #1.FullName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""predicate"": ""Predicate [ FullName = 'American Motor Company' ]"", ""output"": ""FullName , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: FullName , Id
    predicate: Predicate [ FullName = 'American Motor Company' ]
    table: car_makers
  - id: '#2'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#3'
  operation: Join
  output: '#1.Id , #1.FullName'
  predicate: 'Predicate [ #1.Id = #2.Maker ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
00b406cd591e370b0ca414e76c4edb78d82b3c13b4b63b505216c99f888eb002,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Id = T.Maker ] Output [ B.Id , B.FullName ]
    In: Scan Table [ model_list ] Output [ Maker ]
    In: Scan Table [ car_makers ] Predicate [ FullName = 'American Motor Company' ] Output [ FullName , Id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.Maker ]"", ""output"": ""#1.Id , #1.FullName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""predicate"": ""Predicate [ FullName = 'American Motor Company' ]"", ""output"": ""FullName , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: FullName , Id
    predicate: Predicate [ FullName = 'American Motor Company' ]
    table: car_makers
  - id: '#2'
    operation: Scan Table
    output: Maker
    table: model_list
  id: '#3'
  operation: Join
  output: '#1.Id , #1.FullName'
  predicate: 'Predicate [ #1.Id = #2.Maker ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
018da303b9516c988e9c24f88bd456d97adba3d25ba308c366e8eaa9027a509f,"Filter Predicate [ Count_Star > 3 ] Output [ FullName , Id ]
  In: Join Predicate [ B.Maker = T.Id ] Output [ T.FullName , T.Id , B.Count_Star ]
    In: Scan Table [ car_makers ] Output [ FullName , Id ]
    In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
      In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 3 ]"", ""output"": ""FullName , Id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.FullName , #3.Id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Maker
      table: model_list
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Maker
    predicate: GroupBy [ Maker ]
  - id: '#3'
    operation: Scan Table
    output: FullName , Id
    table: car_makers
  id: '#4'
  operation: Join
  output: '#3.FullName , #3.Id , #2.Count_Star'
  predicate: 'Predicate [ #2.Maker = #3.Id ]'
id: '#5'
operation: Filter
output: FullName , Id
predicate: Predicate [ Count_Star > 3 ]
"
532d1e15f99ebc54005a555098c494296d44412ee0fd0a417574833f09b82c13,"Filter Predicate [ Count_Star > 3 ] Output [ FullName , Id ]
  In: Join Predicate [ B.Maker = T.Id ] Output [ T.FullName , T.Id , B.Count_Star ]
    In: Scan Table [ car_makers ] Output [ FullName , Id ]
    In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
      In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 3 ]"", ""output"": ""FullName , Id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.FullName , #3.Id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Maker
      table: model_list
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Maker
    predicate: GroupBy [ Maker ]
  - id: '#3'
    operation: Scan Table
    output: FullName , Id
    table: car_makers
  id: '#4'
  operation: Join
  output: '#3.FullName , #3.Id , #2.Count_Star'
  predicate: 'Predicate [ #2.Maker = #3.Id ]'
id: '#5'
operation: Filter
output: FullName , Id
predicate: Predicate [ Count_Star > 3 ]
"
7e07965719bdc4b883c84663dcc9b66ffdf2d7e962e4fcf8cebbdc95bad61b70,"Filter Predicate [ Weight > 3500 Or FullName = 'General Motors' ] Distinct [ true ] Output [ Model ]
  In: Join Predicate [ T.Maker = B.Id ] Output [ T.Model , T.Weight , B.FullName ]
    In: Join Predicate [ T.Model = B.Model ] Output [ B.Model , B.Maker , T.Weight ]
      In: Join Predicate [ T.Id = B.MakeId ] Output [ B.Model , T.Weight ]
        In: Scan Table [ cars_data ] Output [ Weight , Id ]
        In: Scan Table [ car_names ] Output [ Model , MakeId ]
      In: Scan Table [ model_list ] Output [ Model , Maker ]
    In: Scan Table [ car_makers ] Output [ FullName , Id ]","{""id"": ""#8"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Weight > 3500 Or FullName = 'General Motors' ] Distinct [ true ]"", ""output"": ""Model"", ""children"": [{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Maker = #1.Id ]"", ""output"": ""#6.Model , #6.Weight , #1.FullName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Model = #2.Model ]"", ""output"": ""#2.Model , #2.Maker , #5.Weight"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Id = #3.MakeId ]"", ""output"": ""#3.Model , #4.Weight"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Model , MakeId""}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Weight , Id""}]}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: FullName , Id
    table: car_makers
  - children:
    - id: '#2'
      operation: Scan Table
      output: Model , Maker
      table: model_list
    - children:
      - id: '#3'
        operation: Scan Table
        output: Model , MakeId
        table: car_names
      - id: '#4'
        operation: Scan Table
        output: Weight , Id
        table: cars_data
      id: '#5'
      operation: Join
      output: '#3.Model , #4.Weight'
      predicate: 'Predicate [ #4.Id = #3.MakeId ]'
    id: '#6'
    operation: Join
    output: '#2.Model , #2.Maker , #5.Weight'
    predicate: 'Predicate [ #5.Model = #2.Model ]'
  id: '#7'
  operation: Join
  output: '#6.Model , #6.Weight , #1.FullName'
  predicate: 'Predicate [ #6.Maker = #1.Id ]'
id: '#8'
operation: Filter
output: Model
predicate: Predicate [ Weight > 3500 Or FullName = 'General Motors' ] Distinct [ true
  ]
"
869d090908c20d389878b3c1a8c760b86d77771817c2396a1fe57ce4f1537348,"Filter Predicate [ Weight > 3500 Or FullName = 'General Motors' ] Distinct [ true ] Output [ Model ]
  In: Join Predicate [ T.Maker = B.Id ] Output [ T.Model , T.Weight , B.FullName ]
    In: Join Predicate [ T.Model = B.Model ] Output [ B.Model , B.Maker , T.Weight ]
      In: Join Predicate [ T.Id = B.MakeId ] Output [ B.Model , T.Weight ]
        In: Scan Table [ cars_data ] Output [ Weight , Id ]
        In: Scan Table [ car_names ] Output [ Model , MakeId ]
      In: Scan Table [ model_list ] Output [ Model , Maker ]
    In: Scan Table [ car_makers ] Output [ FullName , Id ]","{""id"": ""#8"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Weight > 3500 Or FullName = 'General Motors' ] Distinct [ true ]"", ""output"": ""Model"", ""children"": [{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Maker = #1.Id ]"", ""output"": ""#6.Model , #6.Weight , #1.FullName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""FullName , Id""}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Model = #2.Model ]"", ""output"": ""#2.Model , #2.Maker , #5.Weight"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Id = #3.MakeId ]"", ""output"": ""#3.Model , #4.Weight"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Model , MakeId""}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Weight , Id""}]}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: FullName , Id
    table: car_makers
  - children:
    - id: '#2'
      operation: Scan Table
      output: Model , Maker
      table: model_list
    - children:
      - id: '#3'
        operation: Scan Table
        output: Model , MakeId
        table: car_names
      - id: '#4'
        operation: Scan Table
        output: Weight , Id
        table: cars_data
      id: '#5'
      operation: Join
      output: '#3.Model , #4.Weight'
      predicate: 'Predicate [ #4.Id = #3.MakeId ]'
    id: '#6'
    operation: Join
    output: '#2.Model , #2.Maker , #5.Weight'
    predicate: 'Predicate [ #5.Model = #2.Model ]'
  id: '#7'
  operation: Join
  output: '#6.Model , #6.Weight , #1.FullName'
  predicate: 'Predicate [ #6.Maker = #1.Id ]'
id: '#8'
operation: Filter
output: Model
predicate: Predicate [ Weight > 3500 Or FullName = 'General Motors' ] Distinct [ true
  ]
"
36c7b520f8030b3154a34e0448f53c05b97574743e8f106665ad05142e78acc2,Scan Table [ cars_data ] Predicate [ Weight >= 3000 AND Weight <= 4000 ] Distinct [ true ] Output [ Year ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Weight >= 3000 AND Weight <= 4000 ] Distinct [ true ]"", ""output"": ""Year""}","id: '#1'
operation: Scan Table
output: Year
predicate: Predicate [ Weight >= 3000 AND Weight <= 4000 ] Distinct [ true ]
table: cars_data
"
133810f0e3f5f4b7d84f4b9d31f3fc19932e5f2965fdb8a9d6f5ee92cc706dd9,Scan Table [ cars_data ] Predicate [ Weight >= 3000 AND Weight <= 4000 ] Distinct [ true ] Output [ Year ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Weight >= 3000 AND Weight <= 4000 ] Distinct [ true ]"", ""output"": ""Year""}","id: '#1'
operation: Scan Table
output: Year
predicate: Predicate [ Weight >= 3000 AND Weight <= 4000 ] Distinct [ true ]
table: cars_data
"
34a29224cb1a2db69920126c04ee5270c88f451260a25f12974f6cb81799530a,"TopSort Rows [ 1 ] OrderBy [ Accelerate DESC ] Output [ Accelerate , Horsepower ]
  In: Scan Table [ cars_data ] Output [ Accelerate , Horsepower ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Accelerate DESC ]"", ""output"": ""Accelerate , Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate , Horsepower""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Accelerate , Horsepower
  table: cars_data
id: '#2'
operation: TopSort
output: Accelerate , Horsepower
predicate: Rows [ 1 ] OrderBy [ Accelerate DESC ]
"
8b218ce8c7ce351dc037f9bf3d576f76412eeef674548ace0b382309f73f1fbe,"TopSort Rows [ 1 ] OrderBy [ Accelerate DESC ] Output [ Accelerate , Horsepower ]
  In: Scan Table [ cars_data ] Output [ Accelerate , Horsepower ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Accelerate DESC ]"", ""output"": ""Accelerate , Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate , Horsepower""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Accelerate , Horsepower
  table: cars_data
id: '#2'
operation: TopSort
output: Accelerate , Horsepower
predicate: Rows [ 1 ] OrderBy [ Accelerate DESC ]
"
20aad5ec8be072a2fc801c6afcad66ba64d69ce743b9ab6f3f5237766dfde98f,"TopSort Rows [ 1 ] OrderBy [ Accelerate ASC ] Output [ Cylinders , Accelerate ]
  In: Join Predicate [ B.MakeId = T.Id ] Output [ T.Accelerate , T.Cylinders ]
    In: Scan Table [ cars_data ] Output [ Cylinders , Accelerate , Id ]
    In: Scan Table [ car_names ] Predicate [ Model = 'volvo' ] Output [ MakeId , Model ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Accelerate ASC ]"", ""output"": ""Cylinders , Accelerate"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.MakeId = #2.Id ]"", ""output"": ""#2.Accelerate , #2.Cylinders"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""predicate"": ""Predicate [ Model = 'volvo' ]"", ""output"": ""MakeId , Model""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Cylinders , Accelerate , Id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: MakeId , Model
    predicate: Predicate [ Model = 'volvo' ]
    table: car_names
  - id: '#2'
    operation: Scan Table
    output: Cylinders , Accelerate , Id
    table: cars_data
  id: '#3'
  operation: Join
  output: '#2.Accelerate , #2.Cylinders'
  predicate: 'Predicate [ #1.MakeId = #2.Id ]'
id: '#4'
operation: TopSort
output: Cylinders , Accelerate
predicate: Rows [ 1 ] OrderBy [ Accelerate ASC ]
"
a1e86640236a193701c725b90a1521cb34923dc534777912bbdc11ee29853b4b,"TopSort Rows [ 1 ] OrderBy [ Accelerate ASC ] Output [ Cylinders , Accelerate ]
  In: Join Predicate [ B.MakeId = T.Id ] Output [ T.Accelerate , T.Cylinders ]
    In: Scan Table [ cars_data ] Output [ Cylinders , Accelerate , Id ]
    In: Scan Table [ car_names ] Predicate [ Model = 'volvo' ] Output [ MakeId , Model ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Accelerate ASC ]"", ""output"": ""Cylinders , Accelerate"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.MakeId = #2.Id ]"", ""output"": ""#2.Accelerate , #2.Cylinders"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""predicate"": ""Predicate [ Model = 'volvo' ]"", ""output"": ""MakeId , Model""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Cylinders , Accelerate , Id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: MakeId , Model
    predicate: Predicate [ Model = 'volvo' ]
    table: car_names
  - id: '#2'
    operation: Scan Table
    output: Cylinders , Accelerate , Id
    table: cars_data
  id: '#3'
  operation: Join
  output: '#2.Accelerate , #2.Cylinders'
  predicate: 'Predicate [ #1.MakeId = #2.Id ]'
id: '#4'
operation: TopSort
output: Cylinders , Accelerate
predicate: Rows [ 1 ] OrderBy [ Accelerate ASC ]
"
48a734d28ac0d45d15214f304ffedb1c3b0821398f90f0c5e93a378f96bf9bfc,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Accelerate > T.Accelerate ] Output [ 1 AS One ]
    In: Scan Table [ cars_data ] Output [ Accelerate ]
    In: TopSort Rows [ 1 ] OrderBy [ Horsepower DESC ] Output [ Accelerate , Horsepower ]
      In: Scan Table [ cars_data ] Output [ Accelerate , Horsepower ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Accelerate > #3.Accelerate ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower DESC ]"", ""output"": ""Accelerate , Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate , Horsepower""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Accelerate , Horsepower
      table: cars_data
    id: '#2'
    operation: TopSort
    output: Accelerate , Horsepower
    predicate: Rows [ 1 ] OrderBy [ Horsepower DESC ]
  - id: '#3'
    operation: Scan Table
    output: Accelerate
    table: cars_data
  id: '#4'
  operation: Join
  output: 1 AS One
  predicate: 'Predicate [ #2.Accelerate > #3.Accelerate ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
5a89af6cde45af39529cde237524a39a4b5bf5f6e805cf069bc3fd29ad32b8c0,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Accelerate > T.Accelerate ] Output [ 1 AS One ]
    In: Scan Table [ cars_data ] Output [ Accelerate ]
    In: TopSort Rows [ 1 ] OrderBy [ Horsepower DESC ] Output [ Accelerate , Horsepower ]
      In: Scan Table [ cars_data ] Output [ Accelerate , Horsepower ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Accelerate > #3.Accelerate ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower DESC ]"", ""output"": ""Accelerate , Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate , Horsepower""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Accelerate""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Accelerate , Horsepower
      table: cars_data
    id: '#2'
    operation: TopSort
    output: Accelerate , Horsepower
    predicate: Rows [ 1 ] OrderBy [ Horsepower DESC ]
  - id: '#3'
    operation: Scan Table
    output: Accelerate
    table: cars_data
  id: '#4'
  operation: Join
  output: 1 AS One
  predicate: 'Predicate [ #2.Accelerate > #3.Accelerate ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
c41addc8cbd0fa2c9fcc48cbd0054859755fe0a2789378a6df2c3208334df8e8,"Filter Predicate [ Count_Star > 2 ] Output [ Count_Star ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ B.Count_Star ]
    In: Scan Table [ countries ] Output [ CountryId ]
    In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
      In: Scan Table [ car_makers ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Country = #3.CountryId ]"", ""output"": ""#2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Country
    predicate: GroupBy [ Country ]
  - id: '#3'
    operation: Scan Table
    output: CountryId
    table: countries
  id: '#4'
  operation: Join
  output: '#2.Count_Star'
  predicate: 'Predicate [ #2.Country = #3.CountryId ]'
id: '#5'
operation: Filter
output: Count_Star
predicate: Predicate [ Count_Star > 2 ]
"
8ae45237a4b14c518c470ccdb33ff70e8b3fdd9499e1d452bdde3806f222c183,"Filter Predicate [ Count_Star > 2 ] Output [ Count_Star ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ B.Count_Star ]
    In: Scan Table [ countries ] Output [ CountryId ]
    In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
      In: Scan Table [ car_makers ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Country = #3.CountryId ]"", ""output"": ""#2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Country
      table: car_makers
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Country
    predicate: GroupBy [ Country ]
  - id: '#3'
    operation: Scan Table
    output: CountryId
    table: countries
  id: '#4'
  operation: Join
  output: '#2.Count_Star'
  predicate: 'Predicate [ #2.Country = #3.CountryId ]'
id: '#5'
operation: Filter
output: Count_Star
predicate: Predicate [ Count_Star > 2 ]
"
4f5fe3262a45fa6129aae57814c7c9a3f1a980933296e4d19dd4e2edd73f005d,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders > 6 ] Output [ Cylinders ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders > 6 ]"", ""output"": ""Cylinders""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders
  predicate: Predicate [ Cylinders > 6 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
aa943ef5c6203ba597019088c094ed685eea371be148c25ce154a9b373dc2c15,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders > 6 ] Output [ Cylinders ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders > 6 ]"", ""output"": ""Cylinders""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Cylinders
  predicate: Predicate [ Cylinders > 6 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
d62f00c18f52de786886bd8891a3d2bf89ffa4b15a55048cd99820de47c66fb2,"TopSort Rows [ 1 ] OrderBy [ Horsepower DESC ] Output [ Horsepower , Model ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model , B.Horsepower ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Predicate [ Cylinders = 4 ] Output [ Cylinders , Horsepower , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower DESC ]"", ""output"": ""Horsepower , Model"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#2.Model , #1.Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 4 ]"", ""output"": ""Cylinders , Horsepower , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Cylinders , Horsepower , Id
    predicate: Predicate [ Cylinders = 4 ]
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#3'
  operation: Join
  output: '#2.Model , #1.Horsepower'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Horsepower , Model
predicate: Rows [ 1 ] OrderBy [ Horsepower DESC ]
"
2e4abbe3322902bb4a641597f938f81afeaba7aa81b1943b46b40b6db2d0f182,"TopSort Rows [ 1 ] OrderBy [ Horsepower DESC ] Output [ Horsepower , Model ]
  In: Join Predicate [ B.Id = T.MakeId ] Output [ T.Model , B.Horsepower ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Scan Table [ cars_data ] Predicate [ Cylinders = 4 ] Output [ Cylinders , Horsepower , Id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Horsepower DESC ]"", ""output"": ""Horsepower , Model"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #2.MakeId ]"", ""output"": ""#2.Model , #1.Horsepower"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 4 ]"", ""output"": ""Cylinders , Horsepower , Id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Cylinders , Horsepower , Id
    predicate: Predicate [ Cylinders = 4 ]
    table: cars_data
  - id: '#2'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#3'
  operation: Join
  output: '#2.Model , #1.Horsepower'
  predicate: 'Predicate [ #1.Id = #2.MakeId ]'
id: '#4'
operation: TopSort
output: Horsepower , Model
predicate: Rows [ 1 ] OrderBy [ Horsepower DESC ]
"
f9daf85575404c5b449d54a8baa0724475494e972fe99743b94ee039c21ade56,"Join Predicate [ T.Id = B.MakeId ] Output [ B.MakeId , B.Make ]
  In: Join Predicate [ T.Horsepower > B.Min_Horsepower ] Output [ T.Id ]
    In: Scan Table [ cars_data ] Predicate [ Cylinders <= 3 ] Output [ Cylinders , Horsepower , Id ]
    In: Aggregate Output [ MIN(Horsepower) AS Min_Horsepower ]
      In: Scan Table [ cars_data ] Output [ Horsepower ]
  In: Scan Table [ car_names ] Output [ MakeId , Make ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Id = #1.MakeId ]"", ""output"": ""#1.MakeId , #1.Make"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Make""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Horsepower > #3.Min_Horsepower ]"", ""output"": ""#4.Id"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MIN(Horsepower) AS Min_Horsepower"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Horsepower""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders <= 3 ]"", ""output"": ""Cylinders , Horsepower , Id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: MakeId , Make
  table: car_names
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: Horsepower
      table: cars_data
    id: '#3'
    operation: Aggregate
    output: MIN(Horsepower) AS Min_Horsepower
  - id: '#4'
    operation: Scan Table
    output: Cylinders , Horsepower , Id
    predicate: Predicate [ Cylinders <= 3 ]
    table: cars_data
  id: '#5'
  operation: Join
  output: '#4.Id'
  predicate: 'Predicate [ #4.Horsepower > #3.Min_Horsepower ]'
id: '#6'
operation: Join
output: '#1.MakeId , #1.Make'
predicate: 'Predicate [ #5.Id = #1.MakeId ]'
"
0d767c181e12d55eb4c6543cc27fd975df0309e40c6def682cfc56597fc5faed,"Join Predicate [ T.Id = B.MakeId ] Output [ B.MakeId , B.Make ]
  In: Join Predicate [ T.Horsepower > B.Min_Horsepower ] Output [ T.Id ]
    In: Scan Table [ cars_data ] Predicate [ Cylinders < 4 ] Output [ Cylinders , Horsepower , Id ]
    In: Aggregate Output [ MIN(Horsepower) AS Min_Horsepower ]
      In: Scan Table [ cars_data ] Output [ Horsepower ]
  In: Scan Table [ car_names ] Output [ MakeId , Make ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Id = #1.MakeId ]"", ""output"": ""#1.MakeId , #1.Make"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Make""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Horsepower > #3.Min_Horsepower ]"", ""output"": ""#4.Id"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MIN(Horsepower) AS Min_Horsepower"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""output"": ""Horsepower""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders < 4 ]"", ""output"": ""Cylinders , Horsepower , Id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: MakeId , Make
  table: car_names
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: Horsepower
      table: cars_data
    id: '#3'
    operation: Aggregate
    output: MIN(Horsepower) AS Min_Horsepower
  - id: '#4'
    operation: Scan Table
    output: Cylinders , Horsepower , Id
    predicate: Predicate [ Cylinders < 4 ]
    table: cars_data
  id: '#5'
  operation: Join
  output: '#4.Id'
  predicate: 'Predicate [ #4.Horsepower > #3.Min_Horsepower ]'
id: '#6'
operation: Join
output: '#1.MakeId , #1.Make'
predicate: 'Predicate [ #5.Id = #1.MakeId ]'
"
95886c213cb2f796b359970764254b64bbe0314263e65f9fbaea1c469021457b,"Aggregate Output [ MAX(MPG) AS Max_MPG ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders = 8 OR Year < 1980 ] Output [ Year , Cylinders , MPG ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(MPG) AS Max_MPG"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 8 OR Year < 1980 ]"", ""output"": ""Year , Cylinders , MPG""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Cylinders , MPG
  predicate: Predicate [ Cylinders = 8 OR Year < 1980 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: MAX(MPG) AS Max_MPG
"
d59fc2b348e4322ab55b3c0602d3c7281523c59e6cdc25eeba00a219ed306068,"Aggregate Output [ MAX(MPG) AS Max_MPG ]
  In: Scan Table [ cars_data ] Predicate [ Cylinders = 8 OR Year < 1980 ] Output [ Year , Cylinders , MPG ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(MPG) AS Max_MPG"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Cylinders = 8 OR Year < 1980 ]"", ""output"": ""Year , Cylinders , MPG""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Year , Cylinders , MPG
  predicate: Predicate [ Cylinders = 8 OR Year < 1980 ]
  table: cars_data
id: '#2'
operation: Aggregate
output: MAX(MPG) AS Max_MPG
"
b502c155fba512cabb54000e371ee35e6737c6de75d89889c83254465c86e8c4,"Join Predicate [ B.Id = T.MakeId ] Distinct [ true ] Output [ T.Model ]
  In: Join Predicate [ B.Model = T.Model ] Output [ T.MakeId , B.Model ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Join Predicate [ B.Id = T.Maker ] Output [ T.Model ]
      In: Scan Table [ model_list ] Output [ Model , Maker ]
      In: Scan Table [ car_makers ] Predicate [ FullName <> 'Ford Motor Company' ] Output [ FullName , Id ]
  In: Scan Table [ cars_data ] Predicate [ Weight < 3500 ] Output [ Weight , Id ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #6.MakeId ] Distinct [ true ]"", ""output"": ""#6.Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Weight < 3500 ]"", ""output"": ""Weight , Id""}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Model = #5.Model ]"", ""output"": ""#5.MakeId , #4.Model"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Id = #3.Maker ]"", ""output"": ""#3.Model"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""predicate"": ""Predicate [ FullName <> 'Ford Motor Company' ]"", ""output"": ""FullName , Id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Weight , Id
  predicate: Predicate [ Weight < 3500 ]
  table: cars_data
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: FullName , Id
      predicate: Predicate [ FullName <> 'Ford Motor Company' ]
      table: car_makers
    - id: '#3'
      operation: Scan Table
      output: Model , Maker
      table: model_list
    id: '#4'
    operation: Join
    output: '#3.Model'
    predicate: 'Predicate [ #2.Id = #3.Maker ]'
  - id: '#5'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#6'
  operation: Join
  output: '#5.MakeId , #4.Model'
  predicate: 'Predicate [ #4.Model = #5.Model ]'
id: '#7'
operation: Join
output: '#6.Model'
predicate: 'Predicate [ #1.Id = #6.MakeId ] Distinct [ true ]'
"
16757dcf685a956d81ea88dce3aeca959bb39b0e7f5823e1d244ec45b8dc1448,"Join Predicate [ B.Id = T.MakeId ] Distinct [ true ] Output [ T.Model ]
  In: Join Predicate [ B.Model = T.Model ] Output [ T.MakeId , B.Model ]
    In: Scan Table [ car_names ] Output [ MakeId , Model ]
    In: Join Predicate [ B.Id = T.Maker ] Output [ T.Model ]
      In: Scan Table [ model_list ] Output [ Model , Maker ]
      In: Scan Table [ car_makers ] Predicate [ FullName <> 'Ford Motor Company' ] Output [ FullName , Id ]
  In: Scan Table [ cars_data ] Predicate [ Weight < 3500 ] Output [ Weight , Id ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Id = #6.MakeId ] Distinct [ true ]"", ""output"": ""#6.Model"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""cars_data"", ""predicate"": ""Predicate [ Weight < 3500 ]"", ""output"": ""Weight , Id""}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Model = #5.Model ]"", ""output"": ""#5.MakeId , #4.Model"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Id = #3.Maker ]"", ""output"": ""#3.Model"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""predicate"": ""Predicate [ FullName <> 'Ford Motor Company' ]"", ""output"": ""FullName , Id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""MakeId , Model""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Weight , Id
  predicate: Predicate [ Weight < 3500 ]
  table: cars_data
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: FullName , Id
      predicate: Predicate [ FullName <> 'Ford Motor Company' ]
      table: car_makers
    - id: '#3'
      operation: Scan Table
      output: Model , Maker
      table: model_list
    id: '#4'
    operation: Join
    output: '#3.Model'
    predicate: 'Predicate [ #2.Id = #3.Maker ]'
  - id: '#5'
    operation: Scan Table
    output: MakeId , Model
    table: car_names
  id: '#6'
  operation: Join
  output: '#5.MakeId , #4.Model'
  predicate: 'Predicate [ #4.Model = #5.Model ]'
id: '#7'
operation: Join
output: '#6.Model'
predicate: 'Predicate [ #1.Id = #6.MakeId ] Distinct [ true ]'
"
1e4db4c4de408f4f9be2225ed03040fed5bf6e86f840d6f753669492df7ee562,"Except Predicate [ B.CountryName = T.CountryName ] Output [ B.CountryName ]
  In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryName ]
    In: Scan Table [ car_makers ] Output [ Country ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
  In: Scan Table [ countries ] Distinct [ true ] Output [ CountryName ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.CountryName = #4.CountryName ]"", ""output"": ""#1.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""predicate"": ""Distinct [ true ]"", ""output"": ""CountryName""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryId = #3.Country ]"", ""output"": ""#2.CountryName"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: CountryName
  predicate: Distinct [ true ]
  table: countries
- children:
  - id: '#2'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  - id: '#3'
    operation: Scan Table
    output: Country
    table: car_makers
  id: '#4'
  operation: Join
  output: '#2.CountryName'
  predicate: 'Predicate [ #2.CountryId = #3.Country ]'
id: '#5'
operation: Except
output: '#1.CountryName'
predicate: 'Predicate [ #1.CountryName = #4.CountryName ]'
"
db474200659b4d04abc94f233be2174f0b5d7bad40e32821c04983268be79774,"Except Predicate [ B.CountryName = T.CountryName ] Output [ B.CountryName ]
  In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryName ]
    In: Scan Table [ car_makers ] Output [ Country ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
  In: Scan Table [ countries ] Distinct [ true ] Output [ CountryName ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.CountryName = #4.CountryName ]"", ""output"": ""#1.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""predicate"": ""Distinct [ true ]"", ""output"": ""CountryName""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryId = #3.Country ]"", ""output"": ""#2.CountryName"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: CountryName
  predicate: Distinct [ true ]
  table: countries
- children:
  - id: '#2'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  - id: '#3'
    operation: Scan Table
    output: Country
    table: car_makers
  id: '#4'
  operation: Join
  output: '#2.CountryName'
  predicate: 'Predicate [ #2.CountryId = #3.Country ]'
id: '#5'
operation: Except
output: '#1.CountryName'
predicate: 'Predicate [ #1.CountryName = #4.CountryName ]'
"
fefb38b1e47ce56411e8d791f7aff3e81d9c58f99f39beffa4c2b2146f8950a6,"Join Predicate [ B.Id = T.Id ] Output [ B.Maker , B.Id ]
  In: Filter Predicate [ Count_Star > 3 ] Output [ Maker , Id ]
    In: Join Predicate [ B.Maker = T.Id ] Output [ T.Maker , T.Id , B.Count_Star ]
      In: Scan Table [ car_makers ] Output [ Maker , Id ]
      In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
        In: Join Predicate [ B.Model = T.Model ] Output [ B.Maker ]
          In: Scan Table [ car_names ] Output [ Model ]
          In: Scan Table [ model_list ] Output [ Model , Maker ]
  In: Filter Predicate [ Count_Star >= 2 ] Output [ Maker , Id ]
    In: Join Predicate [ B.Maker = T.Id ] Output [ T.Id , B.Count_Star , T.Maker ]
      In: Scan Table [ car_makers ] Output [ Maker , Id ]
      In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
        In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#13"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Id = #12.Id ]"", ""output"": ""#5.Maker , #5.Id"", ""children"": [{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Maker , Id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.Id , #2.Count_Star , #3.Maker"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Maker , Id""}]}]}, {""id"": ""#12"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 3 ]"", ""output"": ""Maker , Id"", ""children"": [{""id"": ""#11"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #9.Maker = #10.Id ]"", ""output"": ""#10.Maker , #10.Id , #9.Count_Star"", ""children"": [{""id"": ""#9"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Model = #7.Model ]"", ""output"": ""#6.Maker"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Model""}]}]}, {""id"": ""#10"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Maker , Id""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Maker
        table: model_list
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , Maker
      predicate: GroupBy [ Maker ]
    - id: '#3'
      operation: Scan Table
      output: Maker , Id
      table: car_makers
    id: '#4'
    operation: Join
    output: '#3.Id , #2.Count_Star , #3.Maker'
    predicate: 'Predicate [ #2.Maker = #3.Id ]'
  id: '#5'
  operation: Filter
  output: Maker , Id
  predicate: Predicate [ Count_Star >= 2 ]
- children:
  - children:
    - children:
      - children:
        - id: '#6'
          operation: Scan Table
          output: Model , Maker
          table: model_list
        - id: '#7'
          operation: Scan Table
          output: Model
          table: car_names
        id: '#8'
        operation: Join
        output: '#6.Maker'
        predicate: 'Predicate [ #6.Model = #7.Model ]'
      id: '#9'
      operation: Aggregate
      output: countstar AS Count_Star , Maker
      predicate: GroupBy [ Maker ]
    - id: '#10'
      operation: Scan Table
      output: Maker , Id
      table: car_makers
    id: '#11'
    operation: Join
    output: '#10.Maker , #10.Id , #9.Count_Star'
    predicate: 'Predicate [ #9.Maker = #10.Id ]'
  id: '#12'
  operation: Filter
  output: Maker , Id
  predicate: Predicate [ Count_Star > 3 ]
id: '#13'
operation: Join
output: '#5.Maker , #5.Id'
predicate: 'Predicate [ #5.Id = #12.Id ]'
"
29238520da091881c4e7a017b6177cb764df61f4b23ba7e2bdb8786955bd3ad8,"Join Predicate [ B.Id = T.Id ] Output [ B.Maker , B.Id ]
  In: Filter Predicate [ Count_Star > 3 ] Output [ Maker , Id ]
    In: Join Predicate [ B.Maker = T.Id ] Output [ T.Maker , T.Id , B.Count_Star ]
      In: Scan Table [ car_makers ] Output [ Maker , Id ]
      In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
        In: Join Predicate [ B.Model = T.Model ] Output [ B.Maker ]
          In: Scan Table [ car_names ] Output [ Model ]
          In: Scan Table [ model_list ] Output [ Model , Maker ]
  In: Filter Predicate [ Count_Star >= 2 ] Output [ Maker , Id ]
    In: Join Predicate [ B.Maker = T.Id ] Output [ T.Id , B.Count_Star , T.Maker ]
      In: Scan Table [ car_makers ] Output [ Maker , Id ]
      In: Aggregate GroupBy [ Maker ] Output [ countstar AS Count_Star , Maker ]
        In: Scan Table [ model_list ] Output [ Maker ]","{""id"": ""#13"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Id = #12.Id ]"", ""output"": ""#5.Maker , #5.Id"", ""children"": [{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Maker , Id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Maker = #3.Id ]"", ""output"": ""#3.Id , #2.Count_Star , #3.Maker"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Maker""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Maker , Id""}]}]}, {""id"": ""#12"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 3 ]"", ""output"": ""Maker , Id"", ""children"": [{""id"": ""#11"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #9.Maker = #10.Id ]"", ""output"": ""#10.Maker , #10.Id , #9.Count_Star"", ""children"": [{""id"": ""#9"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Maker ]"", ""output"": ""countstar AS Count_Star , Maker"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Model = #7.Model ]"", ""output"": ""#6.Maker"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""output"": ""Model , Maker""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""car_names"", ""output"": ""Model""}]}]}, {""id"": ""#10"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Maker , Id""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Maker
        table: model_list
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , Maker
      predicate: GroupBy [ Maker ]
    - id: '#3'
      operation: Scan Table
      output: Maker , Id
      table: car_makers
    id: '#4'
    operation: Join
    output: '#3.Id , #2.Count_Star , #3.Maker'
    predicate: 'Predicate [ #2.Maker = #3.Id ]'
  id: '#5'
  operation: Filter
  output: Maker , Id
  predicate: Predicate [ Count_Star >= 2 ]
- children:
  - children:
    - children:
      - children:
        - id: '#6'
          operation: Scan Table
          output: Model , Maker
          table: model_list
        - id: '#7'
          operation: Scan Table
          output: Model
          table: car_names
        id: '#8'
        operation: Join
        output: '#6.Maker'
        predicate: 'Predicate [ #6.Model = #7.Model ]'
      id: '#9'
      operation: Aggregate
      output: countstar AS Count_Star , Maker
      predicate: GroupBy [ Maker ]
    - id: '#10'
      operation: Scan Table
      output: Maker , Id
      table: car_makers
    id: '#11'
    operation: Join
    output: '#10.Maker , #10.Id , #9.Count_Star'
    predicate: 'Predicate [ #9.Maker = #10.Id ]'
  id: '#12'
  operation: Filter
  output: Maker , Id
  predicate: Predicate [ Count_Star > 3 ]
id: '#13'
operation: Join
output: '#5.Maker , #5.Id'
predicate: 'Predicate [ #5.Id = #12.Id ]'
"
f23d812f404ef6bef6297f48075b5a591f9c60c9f97f36861c9b5abce2350a5f,"Union Output [ B.CountryId , B.CountryName ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ T.CountryId , T.CountryName ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
    In: Join Predicate [ B.Maker = T.Id ] Output [ T.Country ]
      In: Scan Table [ car_makers ] Output [ Country , Id ]
      In: Scan Table [ model_list ] Predicate [ Model = 'fiat' ] Output [ Model , Maker ]
  In: Filter Predicate [ Count_Star > 3 ] Output [ CountryId , CountryName ]
    In: Aggregate GroupBy [ CountryId ] Output [ CountryId , countstar AS Count_Star , CountryName ]
      In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryId , B.CountryName ]
        In: Scan Table [ car_makers ] Output [ Country ]
        In: Scan Table [ countries ] Output [ CountryId , CountryName ]","{""id"": ""#11"", ""operation"": ""Union"", ""output"": ""#5.CountryId , #5.CountryName"", ""children"": [{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 3 ]"", ""output"": ""CountryId , CountryName"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryId ]"", ""output"": ""CountryId , countstar AS Count_Star , CountryName"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryId = #2.Country ]"", ""output"": ""#1.CountryId , #1.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}]}, {""id"": ""#10"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #8.Country = #9.CountryId ]"", ""output"": ""#9.CountryId , #9.CountryName"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Maker = #7.Id ]"", ""output"": ""#7.Country"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""predicate"": ""Predicate [ Model = 'fiat' ]"", ""output"": ""Model , Maker""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country , Id""}]}, {""id"": ""#9"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: CountryId , CountryName
        table: countries
      - id: '#2'
        operation: Scan Table
        output: Country
        table: car_makers
      id: '#3'
      operation: Join
      output: '#1.CountryId , #1.CountryName'
      predicate: 'Predicate [ #1.CountryId = #2.Country ]'
    id: '#4'
    operation: Aggregate
    output: CountryId , countstar AS Count_Star , CountryName
    predicate: GroupBy [ CountryId ]
  id: '#5'
  operation: Filter
  output: CountryId , CountryName
  predicate: Predicate [ Count_Star > 3 ]
- children:
  - children:
    - id: '#6'
      operation: Scan Table
      output: Model , Maker
      predicate: Predicate [ Model = 'fiat' ]
      table: model_list
    - id: '#7'
      operation: Scan Table
      output: Country , Id
      table: car_makers
    id: '#8'
    operation: Join
    output: '#7.Country'
    predicate: 'Predicate [ #6.Maker = #7.Id ]'
  - id: '#9'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  id: '#10'
  operation: Join
  output: '#9.CountryId , #9.CountryName'
  predicate: 'Predicate [ #8.Country = #9.CountryId ]'
id: '#11'
operation: Union
output: '#5.CountryId , #5.CountryName'
"
16a6e522cfd501f609c46856f658cfd95b8ef2517b7ad60ecc032807076c99ac,"Union Output [ B.CountryId , B.CountryName ]
  In: Join Predicate [ B.Country = T.CountryId ] Output [ T.CountryId , T.CountryName ]
    In: Scan Table [ countries ] Output [ CountryId , CountryName ]
    In: Join Predicate [ B.Maker = T.Id ] Output [ T.Country ]
      In: Scan Table [ car_makers ] Output [ Country , Id ]
      In: Scan Table [ model_list ] Predicate [ Model = 'fiat' ] Output [ Model , Maker ]
  In: Filter Predicate [ Count_Star > 3 ] Output [ CountryId , CountryName ]
    In: Aggregate GroupBy [ CountryId ] Output [ CountryId , countstar AS Count_Star , CountryName ]
      In: Join Predicate [ B.CountryId = T.Country ] Output [ B.CountryId , B.CountryName ]
        In: Scan Table [ car_makers ] Output [ Country ]
        In: Scan Table [ countries ] Output [ CountryId , CountryName ]","{""id"": ""#11"", ""operation"": ""Union"", ""output"": ""#5.CountryId , #5.CountryName"", ""children"": [{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 3 ]"", ""output"": ""CountryId , CountryName"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryId ]"", ""output"": ""CountryId , countstar AS Count_Star , CountryName"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryId = #2.Country ]"", ""output"": ""#1.CountryId , #1.CountryName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country""}]}]}]}, {""id"": ""#10"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #8.Country = #9.CountryId ]"", ""output"": ""#9.CountryId , #9.CountryName"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Maker = #7.Id ]"", ""output"": ""#7.Country"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""model_list"", ""predicate"": ""Predicate [ Model = 'fiat' ]"", ""output"": ""Model , Maker""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""car_makers"", ""output"": ""Country , Id""}]}, {""id"": ""#9"", ""operation"": ""Scan Table"", ""table"": ""countries"", ""output"": ""CountryId , CountryName""}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: CountryId , CountryName
        table: countries
      - id: '#2'
        operation: Scan Table
        output: Country
        table: car_makers
      id: '#3'
      operation: Join
      output: '#1.CountryId , #1.CountryName'
      predicate: 'Predicate [ #1.CountryId = #2.Country ]'
    id: '#4'
    operation: Aggregate
    output: CountryId , countstar AS Count_Star , CountryName
    predicate: GroupBy [ CountryId ]
  id: '#5'
  operation: Filter
  output: CountryId , CountryName
  predicate: Predicate [ Count_Star > 3 ]
- children:
  - children:
    - id: '#6'
      operation: Scan Table
      output: Model , Maker
      predicate: Predicate [ Model = 'fiat' ]
      table: model_list
    - id: '#7'
      operation: Scan Table
      output: Country , Id
      table: car_makers
    id: '#8'
    operation: Join
    output: '#7.Country'
    predicate: 'Predicate [ #6.Maker = #7.Id ]'
  - id: '#9'
    operation: Scan Table
    output: CountryId , CountryName
    table: countries
  id: '#10'
  operation: Join
  output: '#9.CountryId , #9.CountryName'
  predicate: 'Predicate [ #8.Country = #9.CountryId ]'
id: '#11'
operation: Union
output: '#5.CountryId , #5.CountryName'
"
36a2157fcc813e6a8d142d9e19e8471df3c97f9c4b89b1093f70b6d30255a382,"Scan Table [ airlines ] Predicate [ Airline = 'JetBlue Airways' ] Output [ Airline , Country ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'JetBlue Airways' ]"", ""output"": ""Airline , Country""}","id: '#1'
operation: Scan Table
output: Airline , Country
predicate: Predicate [ Airline = 'JetBlue Airways' ]
table: airlines
"
5f4c7f4307ad324c6bd8b44a5c91d45d8fa3f854c9b23f17d5fae490193e1363,"Scan Table [ airlines ] Predicate [ Airline = 'JetBlue Airways' ] Output [ Airline , Country ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'JetBlue Airways' ]"", ""output"": ""Airline , Country""}","id: '#1'
operation: Scan Table
output: Airline , Country
predicate: Predicate [ Airline = 'JetBlue Airways' ]
table: airlines
"
7f56858bb93fce00274ad7fc93c7c106d09905596af081d93d544e02731db6c4,"Scan Table [ airlines ] Predicate [ Airline = 'JetBlue Airways' ] Output [ Airline , Abbreviation ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'JetBlue Airways' ]"", ""output"": ""Airline , Abbreviation""}","id: '#1'
operation: Scan Table
output: Airline , Abbreviation
predicate: Predicate [ Airline = 'JetBlue Airways' ]
table: airlines
"
b382a94261c2999cc724820561e70e7fc4fdab26b2e6c4e0a72ac715977e5ef4,"Scan Table [ airlines ] Predicate [ Airline = 'JetBlue Airways' ] Output [ Airline , Abbreviation ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'JetBlue Airways' ]"", ""output"": ""Airline , Abbreviation""}","id: '#1'
operation: Scan Table
output: Airline , Abbreviation
predicate: Predicate [ Airline = 'JetBlue Airways' ]
table: airlines
"
f69a450ed479db5ca5b690ab618f69a33863fef823c823cb818121c200280fbd,"Scan Table [ airlines ] Predicate [ Country = 'USA' ] Output [ Airline , Abbreviation , Country ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Country = 'USA' ]"", ""output"": ""Airline , Abbreviation , Country""}","id: '#1'
operation: Scan Table
output: Airline , Abbreviation , Country
predicate: Predicate [ Country = 'USA' ]
table: airlines
"
daecf9f7334ab07a6861fe88b0db2d042b3d0baf22049a3c90c953ebd630e9a0,"Scan Table [ airlines ] Predicate [ Country = 'USA' ] Output [ Airline , Abbreviation , Country ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Country = 'USA' ]"", ""output"": ""Airline , Abbreviation , Country""}","id: '#1'
operation: Scan Table
output: Airline , Abbreviation , Country
predicate: Predicate [ Country = 'USA' ]
table: airlines
"
8fee41930419ed1b60bc8a03182d24c4aef408f9fe3d3042d5197c827080bfb9,"Scan Table [ airports ] Predicate [ City = 'Anthony' ] Output [ AirportCode , City , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Anthony' ]"", ""output"": ""AirportCode , City , AirportName""}","id: '#1'
operation: Scan Table
output: AirportCode , City , AirportName
predicate: Predicate [ City = 'Anthony' ]
table: airports
"
5c334eae39a83d351071183963010a8ed84b530e462431cf43876e0ced4fed9a,"Scan Table [ airports ] Predicate [ City = 'Anthony' ] Output [ AirportCode , City , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Anthony' ]"", ""output"": ""AirportCode , City , AirportName""}","id: '#1'
operation: Scan Table
output: AirportCode , City , AirportName
predicate: Predicate [ City = 'Anthony' ]
table: airports
"
369b5b7dbc8e97b2da310dc1ef97a060a3abec21242176afd9b5b8dcbcad5ff7,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ airlines ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: airlines
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
063b8bcdd6c9ad73b186d5c9b6447dec9581ac1841a4485b9badd7e27ae84b9b,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ airlines ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: airlines
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
3e300a389805c802468ed78e0375595f808905a65d3a714dca27a4605afb5dde,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ airports ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: airports
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
4d65558cfbe559672e157d5e7ec80e6e78aebc27437ce33f926d48eb593f03c9,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ airports ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: airports
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
c1fd6f38135cfcb534461b08b25144826b8cbc55904aa39bf3f6cb55a584b206,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ flights ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: flights
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
279d2d1be85f34d2c0d188a4a33ed356a3ad63f477e61581ca597812edee5c28,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ flights ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: flights
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
fad45b9bc7573cd69e8c13a9273a0663dd75d1bbfa334582e5a7ec673bf88e6d,"Scan Table [ airlines ] Predicate [ Abbreviation = 'UAL' ] Output [ Airline , Abbreviation ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Abbreviation = 'UAL' ]"", ""output"": ""Airline , Abbreviation""}","id: '#1'
operation: Scan Table
output: Airline , Abbreviation
predicate: Predicate [ Abbreviation = 'UAL' ]
table: airlines
"
e2659b87d4a1e361b740b5e13188af89e0b4328076dd99f6a06de5b1b94b5523,"Scan Table [ airlines ] Predicate [ Abbreviation = 'UAL' ] Output [ Airline , Abbreviation ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Abbreviation = 'UAL' ]"", ""output"": ""Airline , Abbreviation""}","id: '#1'
operation: Scan Table
output: Airline , Abbreviation
predicate: Predicate [ Abbreviation = 'UAL' ]
table: airlines
"
b8e73cdb60d918375ac05b729ae481ecc9d1efb4140ab54400235c695a03b096,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ airlines ] Predicate [ Country = 'USA' ] Output [ Country ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Country = 'USA' ]"", ""output"": ""Country""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country
  predicate: Predicate [ Country = 'USA' ]
  table: airlines
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
66b83582e021b8db08e2b4d08c135401f2b5f33950791e8cd6590d2f7ead0857,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ airlines ] Predicate [ Country = 'USA' ] Output [ Country ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Country = 'USA' ]"", ""output"": ""Country""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country
  predicate: Predicate [ Country = 'USA' ]
  table: airlines
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
ad9d7210fdfd7165816e6492d93dd1e6f8473cf6c35e401f46ded2de93952e94,"Scan Table [ airports ] Predicate [ AirportName = 'Alton' ] Output [ Country , City , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ AirportName = 'Alton' ]"", ""output"": ""Country , City , AirportName""}","id: '#1'
operation: Scan Table
output: Country , City , AirportName
predicate: Predicate [ AirportName = 'Alton' ]
table: airports
"
5f82ac520562e0e693c6f75f18091b5e35fc74ee85c8bff66446e0bc61cdf85c,"Scan Table [ airports ] Predicate [ AirportName = 'Alton' ] Output [ Country , City , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ AirportName = 'Alton' ]"", ""output"": ""Country , City , AirportName""}","id: '#1'
operation: Scan Table
output: Country , City , AirportName
predicate: Predicate [ AirportName = 'Alton' ]
table: airports
"
11e3dfccf0adfb124a6c25b1db3b111936b727842d24ab609fcd295a69fc760d,"Scan Table [ airports ] Predicate [ AirportCode = 'AKO' ] Output [ AirportCode , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ AirportCode = 'AKO' ]"", ""output"": ""AirportCode , AirportName""}","id: '#1'
operation: Scan Table
output: AirportCode , AirportName
predicate: Predicate [ AirportCode = 'AKO' ]
table: airports
"
0617e10465be92424cb8e6ad6c98682473571d33e1ce56d7ccc259123ce41d1d,"Scan Table [ airports ] Predicate [ AirportCode = 'AKO' ] Output [ AirportCode , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ AirportCode = 'AKO' ]"", ""output"": ""AirportCode , AirportName""}","id: '#1'
operation: Scan Table
output: AirportCode , AirportName
predicate: Predicate [ AirportCode = 'AKO' ]
table: airports
"
ceb36e3b14327b223ca847535d4c11f45241bc16d511bf03380079252a63b090,"Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ City , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""City , AirportName""}","id: '#1'
operation: Scan Table
output: City , AirportName
predicate: Predicate [ City = 'Aberdeen' ]
table: airports
"
40e1f4c8aa7834d57bb2f331fb09534635a3c5fdb5ad6f142eec15b1f995b7ea,"Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ City , AirportName ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""City , AirportName""}","id: '#1'
operation: Scan Table
output: City , AirportName
predicate: Predicate [ City = 'Aberdeen' ]
table: airports
"
ec3405477794812934b51e5ea9d4aab5a905af1006960ad3d39101b5ccc2a6d4,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ SourceAirport ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""SourceAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: SourceAirport
  predicate: Predicate [ SourceAirport = 'APG' ]
  table: flights
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
5d72b16fa2cfb69617732597bc76509ba7d67eb30a250fc04d538e1c037127ec,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ SourceAirport ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""SourceAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: SourceAirport
  predicate: Predicate [ SourceAirport = 'APG' ]
  table: flights
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
5ebbb73a6afdbdb2974b2656c82d7299272d0e92e8831f62b3bbdbf3c4f63d21,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ flights ] Predicate [ DestAirport = 'ATO' ] Output [ DestAirport ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'ATO' ]"", ""output"": ""DestAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: DestAirport
  predicate: Predicate [ DestAirport = 'ATO' ]
  table: flights
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
856fdf46f76eb38b3c95693281ff5fed72655659ac9ba441d820e7ef6a1675dd,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ flights ] Predicate [ DestAirport = 'ATO' ] Output [ DestAirport ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'ATO' ]"", ""output"": ""DestAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: DestAirport
  predicate: Predicate [ DestAirport = 'ATO' ]
  table: flights
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
4dfb9f3bd2fd30f32394562225b6b6d5eb3ec4532cc089f93fa37897071f826f,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.SourceAirport ] Output [ B.City , B.AirportCode ]
    In: Scan Table [ flights ] Output [ SourceAirport ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - id: '#2'
    operation: Scan Table
    output: SourceAirport
    table: flights
  id: '#3'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #2.SourceAirport ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
c642fd4df84252e3f94cc6a8622ebd176aac937469bde1ca03f02bb88852b44a,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.SourceAirport ] Output [ B.City , B.AirportCode ]
    In: Scan Table [ flights ] Output [ SourceAirport ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - id: '#2'
    operation: Scan Table
    output: SourceAirport
    table: flights
  id: '#3'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #2.SourceAirport ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
b77fa3b8526203bcd90c712fdbdee81795d22020a91667f2c3c3d49f348b347a,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ B.City , B.AirportCode ]
    In: Scan Table [ flights ] Output [ DestAirport ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - id: '#2'
    operation: Scan Table
    output: DestAirport
    table: flights
  id: '#3'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #2.DestAirport ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
596abcb0d56950837aea86f86897c9ec4d944f77fb56712c19b06aca08b5ab81,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ B.City , B.AirportCode ]
    In: Scan Table [ flights ] Output [ DestAirport ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - id: '#2'
    operation: Scan Table
    output: DestAirport
    table: flights
  id: '#3'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #2.DestAirport ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
a86a96d3e0f4b6052d11149f8f2da48ab46dbd0cc3e8d64f456496fb96dff6f4,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.SourceAirport ] Output [ B.City , B.AirportCode ]
    In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ T.SourceAirport ]
      In: Scan Table [ flights ] Output [ SourceAirport , DestAirport ]
      In: Scan Table [ airports ] Predicate [ City = 'Ashley' ] Output [ AirportCode , City ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #4.SourceAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.AirportCode = #3.DestAirport ]"", ""output"": ""#3.SourceAirport"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Ashley' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport , DestAirport""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - children:
    - id: '#2'
      operation: Scan Table
      output: AirportCode , City
      predicate: Predicate [ City = 'Ashley' ]
      table: airports
    - id: '#3'
      operation: Scan Table
      output: SourceAirport , DestAirport
      table: flights
    id: '#4'
    operation: Join
    output: '#3.SourceAirport'
    predicate: 'Predicate [ #2.AirportCode = #3.DestAirport ]'
  id: '#5'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #4.SourceAirport ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
de87fcf74f2799bbaa79f8e759e47daa3b68377e6f8715ad9ca101b761546bed,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.SourceAirport ] Output [ B.City , B.AirportCode ]
    In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ T.SourceAirport ]
      In: Scan Table [ flights ] Output [ SourceAirport , DestAirport ]
      In: Scan Table [ airports ] Predicate [ City = 'Ashley' ] Output [ AirportCode , City ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #4.SourceAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.AirportCode = #3.DestAirport ]"", ""output"": ""#3.SourceAirport"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Ashley' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport , DestAirport""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - children:
    - id: '#2'
      operation: Scan Table
      output: AirportCode , City
      predicate: Predicate [ City = 'Ashley' ]
      table: airports
    - id: '#3'
      operation: Scan Table
      output: SourceAirport , DestAirport
      table: flights
    id: '#4'
    operation: Join
    output: '#3.SourceAirport'
    predicate: 'Predicate [ #2.AirportCode = #3.DestAirport ]'
  id: '#5'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #4.SourceAirport ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
1f310f5bbbc32f27959b1948e0a2b55cc6d6ab439f95fa18d2a151873b24edf2,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.uid ]
    In: Scan Table [ flights ] Output [ Airline ]
    In: Scan Table [ airlines ] Predicate [ Airline = 'JetBlue Airways' ] Output [ uid ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#1.uid"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'JetBlue Airways' ]"", ""output"": ""uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: uid
    predicate: Predicate [ Airline = 'JetBlue Airways' ]
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline
    table: flights
  id: '#3'
  operation: Join
  output: '#1.uid'
  predicate: 'Predicate [ #1.uid = #2.Airline ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
b3a92bd00df018276c532ac506f498a4aab18fc78bd5e5c233593b3d0919d6e3,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.uid ]
    In: Scan Table [ flights ] Output [ Airline ]
    In: Scan Table [ airlines ] Predicate [ Airline = 'JetBlue Airways' ] Output [ uid ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#1.uid"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'JetBlue Airways' ]"", ""output"": ""uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: uid
    predicate: Predicate [ Airline = 'JetBlue Airways' ]
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline
    table: flights
  id: '#3'
  operation: Join
  output: '#1.uid'
  predicate: 'Predicate [ #1.uid = #2.Airline ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
e5944abdcf96b6c445082d7c73904e1a558fcf3e470659bf41d44f19d8842244,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.uid , B.Airline ]
    In: Scan Table [ flights ] Predicate [ DestAirport = 'ASY' ] Output [ Airline , DestAirport ]
    In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#1.uid , #1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'ASY' ]"", ""output"": ""Airline , DestAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , uid
    predicate: Predicate [ Airline = 'United Airlines' ]
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline , DestAirport
    predicate: Predicate [ DestAirport = 'ASY' ]
    table: flights
  id: '#3'
  operation: Join
  output: '#1.uid , #1.Airline'
  predicate: 'Predicate [ #1.uid = #2.Airline ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
6fcf089875e01f63af8f84cf31cc2e94508fb7a057790cb893544b2c05054445,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.uid , B.Airline ]
    In: Scan Table [ flights ] Predicate [ DestAirport = 'ASY' ] Output [ Airline , DestAirport ]
    In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#1.uid , #1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'ASY' ]"", ""output"": ""Airline , DestAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , uid
    predicate: Predicate [ Airline = 'United Airlines' ]
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline , DestAirport
    predicate: Predicate [ DestAirport = 'ASY' ]
    table: flights
  id: '#3'
  operation: Join
  output: '#1.uid , #1.Airline'
  predicate: 'Predicate [ #1.uid = #2.Airline ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
d50de1020d3dcee5416196b209cf716fef84d0120bf108e9619ecbca20df62a3,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.uid , B.Airline ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'AHD' ] Output [ Airline , SourceAirport ]
    In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#1.uid , #1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'AHD' ]"", ""output"": ""Airline , SourceAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , uid
    predicate: Predicate [ Airline = 'United Airlines' ]
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'AHD' ]
    table: flights
  id: '#3'
  operation: Join
  output: '#1.uid , #1.Airline'
  predicate: 'Predicate [ #1.uid = #2.Airline ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
93c0a5389ccc0e73693c2bcf4e1766badd062d038814a9442c11b9dc37fda3bc,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.uid , B.Airline ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'AHD' ] Output [ Airline , SourceAirport ]
    In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#1.uid , #1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'AHD' ]"", ""output"": ""Airline , SourceAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , uid
    predicate: Predicate [ Airline = 'United Airlines' ]
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'AHD' ]
    table: flights
  id: '#3'
  operation: Join
  output: '#1.uid , #1.Airline'
  predicate: 'Predicate [ #1.uid = #2.Airline ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
fc7d50c7b91da6ea233b30b07836fcf085ac0fcc1678f271d0c50c3ccb040ab8,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ B.City , B.AirportCode ]
    In: Join Predicate [ B.uid = T.Airline ] Output [ T.DestAirport ]
      In: Scan Table [ flights ] Output [ Airline , DestAirport ]
      In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #4.DestAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.uid = #3.Airline ]"", ""output"": ""#3.DestAirport"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline , DestAirport""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - children:
    - id: '#2'
      operation: Scan Table
      output: Airline , uid
      predicate: Predicate [ Airline = 'United Airlines' ]
      table: airlines
    - id: '#3'
      operation: Scan Table
      output: Airline , DestAirport
      table: flights
    id: '#4'
    operation: Join
    output: '#3.DestAirport'
    predicate: 'Predicate [ #2.uid = #3.Airline ]'
  id: '#5'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #4.DestAirport ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
fb9f62e205b9bc6880b700da1dceb69b1975fb77e0c9ffce400ce0446e38b582,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ B.City , B.AirportCode ]
    In: Join Predicate [ B.uid = T.Airline ] Output [ T.DestAirport ]
      In: Scan Table [ flights ] Output [ Airline , DestAirport ]
      In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #4.DestAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.uid = #3.Airline ]"", ""output"": ""#3.DestAirport"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline , DestAirport""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' ]
    table: airports
  - children:
    - id: '#2'
      operation: Scan Table
      output: Airline , uid
      predicate: Predicate [ Airline = 'United Airlines' ]
      table: airlines
    - id: '#3'
      operation: Scan Table
      output: Airline , DestAirport
      table: flights
    id: '#4'
    operation: Join
    output: '#3.DestAirport'
    predicate: 'Predicate [ #2.uid = #3.Airline ]'
  id: '#5'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #4.DestAirport ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
ff0a82c65d3f97565126fcc5ac049f4dbc79566d8ab0540c9d7d74e49940a317,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ City , Count_Star ]
  In: Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
    In: Join Predicate [ B.DestAirport = T.AirportCode ] Output [ T.City , B.Count_Star ]
      In: Scan Table [ airports ] Output [ AirportCode , City ]
      In: Aggregate GroupBy [ DestAirport ] Output [ countstar AS Count_Star , DestAirport ]
        In: Scan Table [ flights ] Output [ DestAirport ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""City , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.DestAirport = #3.AirportCode ]"", ""output"": ""#3.City , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ DestAirport ]"", ""output"": ""countstar AS Count_Star , DestAirport"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode , City""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: DestAirport
        table: flights
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , DestAirport
      predicate: GroupBy [ DestAirport ]
    - id: '#3'
      operation: Scan Table
      output: AirportCode , City
      table: airports
    id: '#4'
    operation: Join
    output: '#3.City , #2.Count_Star'
    predicate: 'Predicate [ #2.DestAirport = #3.AirportCode ]'
  id: '#5'
  operation: Aggregate
  output: countstar AS Count_Star , City
  predicate: GroupBy [ City ]
id: '#6'
operation: TopSort
output: City , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
877a21ee7d3418d9490cef1dc4f37236ea50bc68c12059a9466e5e0e862ca059,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ City , Count_Star ]
  In: Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
    In: Join Predicate [ B.DestAirport = T.AirportCode ] Output [ T.City , B.Count_Star ]
      In: Scan Table [ airports ] Output [ AirportCode , City ]
      In: Aggregate GroupBy [ DestAirport ] Output [ countstar AS Count_Star , DestAirport ]
        In: Scan Table [ flights ] Output [ DestAirport ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""City , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.DestAirport = #3.AirportCode ]"", ""output"": ""#3.City , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ DestAirport ]"", ""output"": ""countstar AS Count_Star , DestAirport"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode , City""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: DestAirport
        table: flights
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , DestAirport
      predicate: GroupBy [ DestAirport ]
    - id: '#3'
      operation: Scan Table
      output: AirportCode , City
      table: airports
    id: '#4'
    operation: Join
    output: '#3.City , #2.Count_Star'
    predicate: 'Predicate [ #2.DestAirport = #3.AirportCode ]'
  id: '#5'
  operation: Aggregate
  output: countstar AS Count_Star , City
  predicate: GroupBy [ City ]
id: '#6'
operation: TopSort
output: City , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
ccad946be7d6d75013383b0a2dcc93dfd7c97d868dcafe7309b4e97793ad9e8c,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ City , Count_Star ]
  In: Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
    In: Join Predicate [ B.SourceAirport = T.AirportCode ] Output [ T.City , B.Count_Star ]
      In: Scan Table [ airports ] Output [ AirportCode , City ]
      In: Aggregate GroupBy [ SourceAirport ] Output [ countstar AS Count_Star , SourceAirport ]
        In: Scan Table [ flights ] Output [ SourceAirport ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""City , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.SourceAirport = #3.AirportCode ]"", ""output"": ""#3.City , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ SourceAirport ]"", ""output"": ""countstar AS Count_Star , SourceAirport"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode , City""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: SourceAirport
        table: flights
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , SourceAirport
      predicate: GroupBy [ SourceAirport ]
    - id: '#3'
      operation: Scan Table
      output: AirportCode , City
      table: airports
    id: '#4'
    operation: Join
    output: '#3.City , #2.Count_Star'
    predicate: 'Predicate [ #2.SourceAirport = #3.AirportCode ]'
  id: '#5'
  operation: Aggregate
  output: countstar AS Count_Star , City
  predicate: GroupBy [ City ]
id: '#6'
operation: TopSort
output: City , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
512837d29318e63bfaec1474fb6fc4170733428b7d581c634116984533d750eb,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ City , Count_Star ]
  In: Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
    In: Join Predicate [ B.SourceAirport = T.AirportCode ] Output [ T.City , B.Count_Star ]
      In: Scan Table [ airports ] Output [ AirportCode , City ]
      In: Aggregate GroupBy [ SourceAirport ] Output [ countstar AS Count_Star , SourceAirport ]
        In: Scan Table [ flights ] Output [ SourceAirport ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""City , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.SourceAirport = #3.AirportCode ]"", ""output"": ""#3.City , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ SourceAirport ]"", ""output"": ""countstar AS Count_Star , SourceAirport"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode , City""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: SourceAirport
        table: flights
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , SourceAirport
      predicate: GroupBy [ SourceAirport ]
    - id: '#3'
      operation: Scan Table
      output: AirportCode , City
      table: airports
    id: '#4'
    operation: Join
    output: '#3.City , #2.Count_Star'
    predicate: 'Predicate [ #2.SourceAirport = #3.AirportCode ]'
  id: '#5'
  operation: Aggregate
  output: countstar AS Count_Star , City
  predicate: GroupBy [ City ]
id: '#6'
operation: TopSort
output: City , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
d03d7fcb88ff343e5ee83769b30e5f75cf398e639d6be0a1c20fe3f0a406f9aa,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ AirportCode , Count_Star ]
  In: Aggregate GroupBy [ AirportCode ] Output [ AirportCode , countstar AS Count_Star ]
    In: Join Predicate [ B.AirportCode = T.DestAirport OR B.AirportCode = T.SourceAirport ] Output [ B.AirportCode ]
      In: Scan Table [ flights ] Output [ SourceAirport , DestAirport ]
      In: Scan Table [ airports ] Output [ AirportCode ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""AirportCode , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ AirportCode ]"", ""output"": ""AirportCode , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport , DestAirport""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: AirportCode
      table: airports
    - id: '#2'
      operation: Scan Table
      output: SourceAirport , DestAirport
      table: flights
    id: '#3'
    operation: Join
    output: '#1.AirportCode'
    predicate: 'Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport
      ]'
  id: '#4'
  operation: Aggregate
  output: AirportCode , countstar AS Count_Star
  predicate: GroupBy [ AirportCode ]
id: '#5'
operation: TopSort
output: AirportCode , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
2836ab9eeb271d2e43877d422f9139f14d6978de0709568fc8068b36b8212e6f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ AirportCode , Count_Star ]
  In: Aggregate GroupBy [ AirportCode ] Output [ AirportCode , countstar AS Count_Star ]
    In: Join Predicate [ B.AirportCode = T.DestAirport OR B.AirportCode = T.SourceAirport ] Output [ B.AirportCode ]
      In: Scan Table [ flights ] Output [ SourceAirport , DestAirport ]
      In: Scan Table [ airports ] Output [ AirportCode ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""AirportCode , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ AirportCode ]"", ""output"": ""AirportCode , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport , DestAirport""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: AirportCode
      table: airports
    - id: '#2'
      operation: Scan Table
      output: SourceAirport , DestAirport
      table: flights
    id: '#3'
    operation: Join
    output: '#1.AirportCode'
    predicate: 'Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport
      ]'
  id: '#4'
  operation: Aggregate
  output: AirportCode , countstar AS Count_Star
  predicate: GroupBy [ AirportCode ]
id: '#5'
operation: TopSort
output: AirportCode , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
0002168a04349f5ec8af3736caeba3db6f216aeec4b9c65dd78d1d1c4420b940,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ AirportCode , Count_Star ]
  In: Aggregate GroupBy [ AirportCode ] Output [ AirportCode , countstar AS Count_Star ]
    In: Join Predicate [ B.AirportCode = T.DestAirport OR B.AirportCode = T.SourceAirport ] Output [ B.AirportCode ]
      In: Scan Table [ flights ] Output [ SourceAirport , DestAirport ]
      In: Scan Table [ airports ] Output [ AirportCode ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""AirportCode , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ AirportCode ]"", ""output"": ""AirportCode , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport , DestAirport""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: AirportCode
      table: airports
    - id: '#2'
      operation: Scan Table
      output: SourceAirport , DestAirport
      table: flights
    id: '#3'
    operation: Join
    output: '#1.AirportCode'
    predicate: 'Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport
      ]'
  id: '#4'
  operation: Aggregate
  output: AirportCode , countstar AS Count_Star
  predicate: GroupBy [ AirportCode ]
id: '#5'
operation: TopSort
output: AirportCode , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
00a3390111217a03d10cdfb556125b947a46a55fc5ea5458e593007a8cfc1702,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ AirportCode , Count_Star ]
  In: Aggregate GroupBy [ AirportCode ] Output [ AirportCode , countstar AS Count_Star ]
    In: Join Predicate [ B.AirportCode = T.DestAirport OR B.AirportCode = T.SourceAirport ] Output [ B.AirportCode ]
      In: Scan Table [ flights ] Output [ SourceAirport , DestAirport ]
      In: Scan Table [ airports ] Output [ AirportCode ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""AirportCode , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ AirportCode ]"", ""output"": ""AirportCode , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport , DestAirport""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: AirportCode
      table: airports
    - id: '#2'
      operation: Scan Table
      output: SourceAirport , DestAirport
      table: flights
    id: '#3'
    operation: Join
    output: '#1.AirportCode'
    predicate: 'Predicate [ #1.AirportCode = #2.DestAirport OR #1.AirportCode = #2.SourceAirport
      ]'
  id: '#4'
  operation: Aggregate
  output: AirportCode , countstar AS Count_Star
  predicate: GroupBy [ AirportCode ]
id: '#5'
operation: TopSort
output: AirportCode , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
aeab2749108b0a4074f867008a9cbff20796f8cfc0aa1b851851074dc8dbfa2e,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Airline , Count_Star ]
  In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
    In: Join Predicate [ B.Airline = T.uid ] Output [ B.Count_Star , T.Airline ]
      In: Scan Table [ airlines ] Output [ Airline , uid ]
      In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
        In: Scan Table [ flights ] Output [ Airline ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Airline , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #3.uid ]"", ""output"": ""#2.Count_Star , #3.Airline"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Airline
        table: flights
      id: '#2'
      operation: Aggregate
      output: Airline , countstar AS Count_Star
      predicate: GroupBy [ Airline ]
    - id: '#3'
      operation: Scan Table
      output: Airline , uid
      table: airlines
    id: '#4'
    operation: Join
    output: '#2.Count_Star , #3.Airline'
    predicate: 'Predicate [ #2.Airline = #3.uid ]'
  id: '#5'
  operation: Aggregate
  output: Airline , countstar AS Count_Star
  predicate: GroupBy [ Airline ]
id: '#6'
operation: TopSort
output: Airline , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
0f7d42df7248364edf39effe13d7eba22fde164f27cd785a594e0fcd44cabce8,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Airline , Count_Star ]
  In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
    In: Join Predicate [ B.Airline = T.uid ] Output [ B.Count_Star , T.Airline ]
      In: Scan Table [ airlines ] Output [ Airline , uid ]
      In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
        In: Scan Table [ flights ] Output [ Airline ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Airline , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #3.uid ]"", ""output"": ""#2.Count_Star , #3.Airline"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Airline
        table: flights
      id: '#2'
      operation: Aggregate
      output: Airline , countstar AS Count_Star
      predicate: GroupBy [ Airline ]
    - id: '#3'
      operation: Scan Table
      output: Airline , uid
      table: airlines
    id: '#4'
    operation: Join
    output: '#2.Count_Star , #3.Airline'
    predicate: 'Predicate [ #2.Airline = #3.uid ]'
  id: '#5'
  operation: Aggregate
  output: Airline , countstar AS Count_Star
  predicate: GroupBy [ Airline ]
id: '#6'
operation: TopSort
output: Airline , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
0ab456f2fbc7de30a54a57287745b5f8e8c5e3b734a5144f44b1265e347fc73e,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ Abbreviation , Country , Count_Star ]
  In: Aggregate GroupBy [ Abbreviation , Country , Airline ] Output [ countstar AS Count_Star , Abbreviation , Country ]
    In: Join Predicate [ B.Airline = T.uid ] Output [ T.Country , T.Abbreviation , B.Count_Star , T.Airline ]
      In: Scan Table [ airlines ] Output [ Airline , Abbreviation , uid , Country ]
      In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
        In: Scan Table [ flights ] Output [ Airline ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""Abbreviation , Country , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Abbreviation , Country , Airline ]"", ""output"": ""countstar AS Count_Star , Abbreviation , Country"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #3.uid ]"", ""output"": ""#3.Country , #3.Abbreviation , #2.Count_Star , #3.Airline"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , Abbreviation , uid , Country""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Airline
        table: flights
      id: '#2'
      operation: Aggregate
      output: Airline , countstar AS Count_Star
      predicate: GroupBy [ Airline ]
    - id: '#3'
      operation: Scan Table
      output: Airline , Abbreviation , uid , Country
      table: airlines
    id: '#4'
    operation: Join
    output: '#3.Country , #3.Abbreviation , #2.Count_Star , #3.Airline'
    predicate: 'Predicate [ #2.Airline = #3.uid ]'
  id: '#5'
  operation: Aggregate
  output: countstar AS Count_Star , Abbreviation , Country
  predicate: GroupBy [ Abbreviation , Country , Airline ]
id: '#6'
operation: TopSort
output: Abbreviation , Country , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
614838cd0b6d31a3440afa4fe30f7f7cbcdde3207859e06a773f1369c608adda,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ Abbreviation , Country , Count_Star ]
  In: Aggregate GroupBy [ Abbreviation , Country , Airline ] Output [ countstar AS Count_Star , Abbreviation , Country ]
    In: Join Predicate [ B.Airline = T.uid ] Output [ T.Country , T.Abbreviation , B.Count_Star , T.Airline ]
      In: Scan Table [ airlines ] Output [ Airline , Abbreviation , uid , Country ]
      In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
        In: Scan Table [ flights ] Output [ Airline ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""Abbreviation , Country , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Abbreviation , Country , Airline ]"", ""output"": ""countstar AS Count_Star , Abbreviation , Country"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #3.uid ]"", ""output"": ""#3.Country , #3.Abbreviation , #2.Count_Star , #3.Airline"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , Abbreviation , uid , Country""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Airline
        table: flights
      id: '#2'
      operation: Aggregate
      output: Airline , countstar AS Count_Star
      predicate: GroupBy [ Airline ]
    - id: '#3'
      operation: Scan Table
      output: Airline , Abbreviation , uid , Country
      table: airlines
    id: '#4'
    operation: Join
    output: '#3.Country , #3.Abbreviation , #2.Count_Star , #3.Airline'
    predicate: 'Predicate [ #2.Airline = #3.uid ]'
  id: '#5'
  operation: Aggregate
  output: countstar AS Count_Star , Abbreviation , Country
  predicate: GroupBy [ Abbreviation , Country , Airline ]
id: '#6'
operation: TopSort
output: Abbreviation , Country , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
50c40e6bc28069c3bcc0382be99a457edbe8ea4d10caa0cd645599f8e47f6379,"Join Predicate [ B.Airline = T.uid ] Output [ T.Airline ]
  In: Scan Table [ airlines ] Output [ Airline , uid ]
  In: Scan Table [ flights ] Predicate [ SourceAirport = 'AHD' ] Output [ Airline , SourceAirport ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Airline = #2.uid ]"", ""output"": ""#2.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'AHD' ]"", ""output"": ""Airline , SourceAirport""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Airline , SourceAirport
  predicate: Predicate [ SourceAirport = 'AHD' ]
  table: flights
- id: '#2'
  operation: Scan Table
  output: Airline , uid
  table: airlines
id: '#3'
operation: Join
output: '#2.Airline'
predicate: 'Predicate [ #1.Airline = #2.uid ]'
"
59494964483df233275b18143af64420c0b7863a6e168ecb92028d30acc4c823,"Join Predicate [ B.Airline = T.uid ] Output [ T.Airline ]
  In: Scan Table [ airlines ] Output [ Airline , uid ]
  In: Scan Table [ flights ] Predicate [ SourceAirport = 'AHD' ] Output [ Airline , SourceAirport ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Airline = #2.uid ]"", ""output"": ""#2.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'AHD' ]"", ""output"": ""Airline , SourceAirport""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Airline , SourceAirport
  predicate: Predicate [ SourceAirport = 'AHD' ]
  table: flights
- id: '#2'
  operation: Scan Table
  output: Airline , uid
  table: airlines
id: '#3'
operation: Join
output: '#2.Airline'
predicate: 'Predicate [ #1.Airline = #2.uid ]'
"
c3998b7c1feeb87bae4cca7d360728a072f24c52445c2355240738d9e27063b6,"Join Predicate [ B.Airline = T.uid ] Output [ T.Airline ]
  In: Scan Table [ airlines ] Output [ Airline , uid ]
  In: Scan Table [ flights ] Predicate [ DestAirport = 'AHD' ] Output [ Airline , DestAirport ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Airline = #2.uid ]"", ""output"": ""#2.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'AHD' ]"", ""output"": ""Airline , DestAirport""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Airline , DestAirport
  predicate: Predicate [ DestAirport = 'AHD' ]
  table: flights
- id: '#2'
  operation: Scan Table
  output: Airline , uid
  table: airlines
id: '#3'
operation: Join
output: '#2.Airline'
predicate: 'Predicate [ #1.Airline = #2.uid ]'
"
1ccca59a2bf0612bea4c52b6b33f8bf1840d579cce726f4ad8b25b8342c718d6,"Join Predicate [ B.Airline = T.uid ] Output [ T.Airline ]
  In: Scan Table [ airlines ] Output [ Airline , uid ]
  In: Scan Table [ flights ] Predicate [ DestAirport = 'AHD' ] Output [ Airline , DestAirport ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Airline = #2.uid ]"", ""output"": ""#2.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'AHD' ]"", ""output"": ""Airline , DestAirport""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Airline , DestAirport
  predicate: Predicate [ DestAirport = 'AHD' ]
  table: flights
- id: '#2'
  operation: Scan Table
  output: Airline , uid
  table: airlines
id: '#3'
operation: Join
output: '#2.Airline'
predicate: 'Predicate [ #1.Airline = #2.uid ]'
"
727d962436aa6dab57de5314949a51a9e99124c9086e4e950e58f7b3b425a9d1,"Intersect Predicate [ B.Airline = T.Airline ] Output [ B.Airline ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.Airline ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'CVO' ] Output [ Airline , SourceAirport ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]
  In: Join Predicate [ B.Airline = T.uid ] Distinct [ true ] Output [ T.Airline ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ Airline , SourceAirport ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.Airline = #6.Airline ]"", ""output"": ""#3.Airline"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Airline = #2.uid ] Distinct [ true ]"", ""output"": ""#2.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""Airline , SourceAirport""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.uid = #5.Airline ]"", ""output"": ""#4.Airline"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'CVO' ]"", ""output"": ""Airline , SourceAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'APG' ]
    table: flights
  - id: '#2'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  id: '#3'
  operation: Join
  output: '#2.Airline'
  predicate: 'Predicate [ #1.Airline = #2.uid ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  - id: '#5'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'CVO' ]
    table: flights
  id: '#6'
  operation: Join
  output: '#4.Airline'
  predicate: 'Predicate [ #4.uid = #5.Airline ]'
id: '#7'
operation: Intersect
output: '#3.Airline'
predicate: 'Predicate [ #3.Airline = #6.Airline ]'
"
698c94dd60832c69da326ce8bfa2f179b719248703b9e09aa653ebe78a3a67e6,"Intersect Predicate [ B.Airline = T.Airline ] Output [ B.Airline ]
  In: Join Predicate [ B.uid = T.Airline ] Output [ B.Airline ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'CVO' ] Output [ Airline , SourceAirport ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]
  In: Join Predicate [ B.Airline = T.uid ] Distinct [ true ] Output [ T.Airline ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ Airline , SourceAirport ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.Airline = #6.Airline ]"", ""output"": ""#3.Airline"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Airline = #2.uid ] Distinct [ true ]"", ""output"": ""#2.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""Airline , SourceAirport""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.uid = #5.Airline ]"", ""output"": ""#4.Airline"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'CVO' ]"", ""output"": ""Airline , SourceAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'APG' ]
    table: flights
  - id: '#2'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  id: '#3'
  operation: Join
  output: '#2.Airline'
  predicate: 'Predicate [ #1.Airline = #2.uid ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  - id: '#5'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'CVO' ]
    table: flights
  id: '#6'
  operation: Join
  output: '#4.Airline'
  predicate: 'Predicate [ #4.uid = #5.Airline ]'
id: '#7'
operation: Intersect
output: '#3.Airline'
predicate: 'Predicate [ #3.Airline = #6.Airline ]'
"
39ceb08b1483abd2fc6eb7e0c6288d9443225a383f6d319256bd830cc714cebc,"Except Predicate [ B.Airline = T.Airline ] Output [ B.Airline ]
  In: Join Predicate [ B.Airline = T.uid ] Output [ T.Airline ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ Airline , SourceAirport ]
  In: Join Predicate [ B.uid = T.Airline ] Distinct [ true ] Output [ B.Airline ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'CVO' ] Output [ Airline , SourceAirport ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.Airline = #6.Airline ]"", ""output"": ""#3.Airline"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ] Distinct [ true ]"", ""output"": ""#1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'CVO' ]"", ""output"": ""Airline , SourceAirport""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Airline = #5.uid ]"", ""output"": ""#5.Airline"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""Airline , SourceAirport""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'CVO' ]
    table: flights
  id: '#3'
  operation: Join
  output: '#1.Airline'
  predicate: 'Predicate [ #1.uid = #2.Airline ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'APG' ]
    table: flights
  - id: '#5'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  id: '#6'
  operation: Join
  output: '#5.Airline'
  predicate: 'Predicate [ #4.Airline = #5.uid ]'
id: '#7'
operation: Except
output: '#3.Airline'
predicate: 'Predicate [ #3.Airline = #6.Airline ]'
"
6632e3ca9157ea891f945858d65d51a7c21b4b3beac8b3d957f92610d775da20,"Except Predicate [ B.Airline = T.Airline ] Output [ B.Airline ]
  In: Join Predicate [ B.Airline = T.uid ] Output [ T.Airline ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ Airline , SourceAirport ]
  In: Join Predicate [ B.uid = T.Airline ] Distinct [ true ] Output [ B.Airline ]
    In: Scan Table [ flights ] Predicate [ SourceAirport = 'CVO' ] Output [ Airline , SourceAirport ]
    In: Scan Table [ airlines ] Output [ Airline , uid ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.Airline = #6.Airline ]"", ""output"": ""#3.Airline"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ] Distinct [ true ]"", ""output"": ""#1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'CVO' ]"", ""output"": ""Airline , SourceAirport""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Airline = #5.uid ]"", ""output"": ""#5.Airline"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""Airline , SourceAirport""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  - id: '#2'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'CVO' ]
    table: flights
  id: '#3'
  operation: Join
  output: '#1.Airline'
  predicate: 'Predicate [ #1.uid = #2.Airline ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Airline , SourceAirport
    predicate: Predicate [ SourceAirport = 'APG' ]
    table: flights
  - id: '#5'
    operation: Scan Table
    output: Airline , uid
    table: airlines
  id: '#6'
  operation: Join
  output: '#5.Airline'
  predicate: 'Predicate [ #4.Airline = #5.uid ]'
id: '#7'
operation: Except
output: '#3.Airline'
predicate: 'Predicate [ #3.Airline = #6.Airline ]'
"
a9ff32fcd6bd92e2683cd5b35a991b73751f44afc13e6146cc8b4a68a61dcc1c,"Filter Predicate [ Count_Star > 10 ] Output [ Airline ]
  In: Aggregate GroupBy [ Airline ] Output [ countstar AS Count_Star , Airline ]
    In: Join Predicate [ T.Airline = B.uid ] Output [ B.Airline ]
      In: Scan Table [ flights ] Output [ Airline ]
      In: Scan Table [ airlines ] Output [ uid , Airline ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 10 ]"", ""output"": ""Airline"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""countstar AS Count_Star , Airline"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #1.uid ]"", ""output"": ""#1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""uid , Airline""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: uid , Airline
      table: airlines
    - id: '#2'
      operation: Scan Table
      output: Airline
      table: flights
    id: '#3'
    operation: Join
    output: '#1.Airline'
    predicate: 'Predicate [ #2.Airline = #1.uid ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , Airline
  predicate: GroupBy [ Airline ]
id: '#5'
operation: Filter
output: Airline
predicate: Predicate [ Count_Star > 10 ]
"
67367330d8de673f906ebfa5f90854abadcd59ec692acaadafbf1c0b0fcbd88b,"Filter Predicate [ Count_Star > 10 ] Output [ Airline ]
  In: Aggregate GroupBy [ Airline ] Output [ countstar AS Count_Star , Airline ]
    In: Join Predicate [ T.Airline = B.uid ] Output [ B.Airline ]
      In: Scan Table [ flights ] Output [ Airline ]
      In: Scan Table [ airlines ] Output [ uid , Airline ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 10 ]"", ""output"": ""Airline"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""countstar AS Count_Star , Airline"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #1.uid ]"", ""output"": ""#1.Airline"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""uid , Airline""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: uid , Airline
      table: airlines
    - id: '#2'
      operation: Scan Table
      output: Airline
      table: flights
    id: '#3'
    operation: Join
    output: '#1.Airline'
    predicate: 'Predicate [ #2.Airline = #1.uid ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , Airline
  predicate: GroupBy [ Airline ]
id: '#5'
operation: Filter
output: Airline
predicate: Predicate [ Count_Star > 10 ]
"
14f44cbc77a573230a3ff8f32108865b84f1805f31fa964bc07357c949ae4d26,"Filter Predicate [ Count_Star < 200 ] Output [ Airline ]
  In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
    In: Join Predicate [ B.Airline = T.uid ] Output [ B.Count_Star , T.Airline ]
      In: Scan Table [ airlines ] Output [ Airline , uid ]
      In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
        In: Scan Table [ flights ] Output [ Airline ]","{""id"": ""#6"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star < 200 ]"", ""output"": ""Airline"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #3.uid ]"", ""output"": ""#2.Count_Star , #3.Airline"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Airline
        table: flights
      id: '#2'
      operation: Aggregate
      output: Airline , countstar AS Count_Star
      predicate: GroupBy [ Airline ]
    - id: '#3'
      operation: Scan Table
      output: Airline , uid
      table: airlines
    id: '#4'
    operation: Join
    output: '#2.Count_Star , #3.Airline'
    predicate: 'Predicate [ #2.Airline = #3.uid ]'
  id: '#5'
  operation: Aggregate
  output: Airline , countstar AS Count_Star
  predicate: GroupBy [ Airline ]
id: '#6'
operation: Filter
output: Airline
predicate: Predicate [ Count_Star < 200 ]
"
ec2e71aef485eb1901917a50f7e013ff97e143dfd5f84f5c8c6c198f9a69106c,"Filter Predicate [ Count_Star < 200 ] Output [ Airline ]
  In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
    In: Join Predicate [ B.Airline = T.uid ] Output [ B.Count_Star , T.Airline ]
      In: Scan Table [ airlines ] Output [ Airline , uid ]
      In: Aggregate GroupBy [ Airline ] Output [ Airline , countstar AS Count_Star ]
        In: Scan Table [ flights ] Output [ Airline ]","{""id"": ""#6"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star < 200 ]"", ""output"": ""Airline"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Airline = #3.uid ]"", ""output"": ""#2.Count_Star , #3.Airline"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Airline ]"", ""output"": ""Airline , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""output"": ""Airline , uid""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Airline
        table: flights
      id: '#2'
      operation: Aggregate
      output: Airline , countstar AS Count_Star
      predicate: GroupBy [ Airline ]
    - id: '#3'
      operation: Scan Table
      output: Airline , uid
      table: airlines
    id: '#4'
    operation: Join
    output: '#2.Count_Star , #3.Airline'
    predicate: 'Predicate [ #2.Airline = #3.uid ]'
  id: '#5'
  operation: Aggregate
  output: Airline , countstar AS Count_Star
  predicate: GroupBy [ Airline ]
id: '#6'
operation: Filter
output: Airline
predicate: Predicate [ Count_Star < 200 ]
"
84829bc37e43487777aad24bbb1d364ae6a732e03b5d67e19ee1a9885b5ed33d,"Join Predicate [ B.uid = T.Airline ] Output [ T.FlightNo ]
  In: Scan Table [ flights ] Output [ Airline , FlightNo ]
  In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#2.FlightNo"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline , FlightNo""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Airline , uid
  predicate: Predicate [ Airline = 'United Airlines' ]
  table: airlines
- id: '#2'
  operation: Scan Table
  output: Airline , FlightNo
  table: flights
id: '#3'
operation: Join
output: '#2.FlightNo'
predicate: 'Predicate [ #1.uid = #2.Airline ]'
"
2a3bb875beae5ee8230f21a90839bb7547486bd15cf8d6b567e659b137669342,"Join Predicate [ B.uid = T.Airline ] Output [ T.FlightNo ]
  In: Scan Table [ flights ] Output [ Airline , FlightNo ]
  In: Scan Table [ airlines ] Predicate [ Airline = 'United Airlines' ] Output [ Airline , uid ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.uid = #2.Airline ]"", ""output"": ""#2.FlightNo"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airlines"", ""predicate"": ""Predicate [ Airline = 'United Airlines' ]"", ""output"": ""Airline , uid""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""Airline , FlightNo""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Airline , uid
  predicate: Predicate [ Airline = 'United Airlines' ]
  table: airlines
- id: '#2'
  operation: Scan Table
  output: Airline , FlightNo
  table: flights
id: '#3'
operation: Join
output: '#2.FlightNo'
predicate: 'Predicate [ #1.uid = #2.Airline ]'
"
8efd5f524fe11882fd054fbe9338eead2cd3fe81797f3704ed122a780f499367,"Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ FlightNo , SourceAirport ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""FlightNo , SourceAirport""}","id: '#1'
operation: Scan Table
output: FlightNo , SourceAirport
predicate: Predicate [ SourceAirport = 'APG' ]
table: flights
"
2968bd140b8f572b292b72b93f380074b261e095b014111d7e34b5be584a0735,"Scan Table [ flights ] Predicate [ SourceAirport = 'APG' ] Output [ FlightNo , SourceAirport ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ SourceAirport = 'APG' ]"", ""output"": ""FlightNo , SourceAirport""}","id: '#1'
operation: Scan Table
output: FlightNo , SourceAirport
predicate: Predicate [ SourceAirport = 'APG' ]
table: flights
"
7ff01e405c8570255b3f1e0b8579237f1b2cda024aedefc247a6207d8bee48c6,"Scan Table [ flights ] Predicate [ DestAirport = 'APG' ] Output [ FlightNo , DestAirport ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'APG' ]"", ""output"": ""FlightNo , DestAirport""}","id: '#1'
operation: Scan Table
output: FlightNo , DestAirport
predicate: Predicate [ DestAirport = 'APG' ]
table: flights
"
661e9a7253223a3ccb079a380550a1278fa81e2f92a8f848c1fe944b04d916e2,"Scan Table [ flights ] Predicate [ DestAirport = 'APG' ] Output [ FlightNo , DestAirport ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""predicate"": ""Predicate [ DestAirport = 'APG' ]"", ""output"": ""FlightNo , DestAirport""}","id: '#1'
operation: Scan Table
output: FlightNo , DestAirport
predicate: Predicate [ DestAirport = 'APG' ]
table: flights
"
3e0018e4a77c7beccb7a8bd929b7232c2651929030a3b338803d131a009889a5,"Join Predicate [ B.AirportCode = T.SourceAirport ] Output [ T.FlightNo ]
  In: Scan Table [ flights ] Output [ FlightNo , SourceAirport ]
  In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#2.FlightNo"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""FlightNo , SourceAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: AirportCode , City
  predicate: Predicate [ City = 'Aberdeen' ]
  table: airports
- id: '#2'
  operation: Scan Table
  output: FlightNo , SourceAirport
  table: flights
id: '#3'
operation: Join
output: '#2.FlightNo'
predicate: 'Predicate [ #1.AirportCode = #2.SourceAirport ]'
"
e13407fb59cee2490a6ebbe85e83d8aaafad8412414e1deeca3ddd50c02be181,"Join Predicate [ B.AirportCode = T.SourceAirport ] Output [ T.FlightNo ]
  In: Scan Table [ flights ] Output [ FlightNo , SourceAirport ]
  In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.SourceAirport ]"", ""output"": ""#2.FlightNo"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""FlightNo , SourceAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: AirportCode , City
  predicate: Predicate [ City = 'Aberdeen' ]
  table: airports
- id: '#2'
  operation: Scan Table
  output: FlightNo , SourceAirport
  table: flights
id: '#3'
operation: Join
output: '#2.FlightNo'
predicate: 'Predicate [ #1.AirportCode = #2.SourceAirport ]'
"
a53c60a49b1ef48137085af23de337bbc821e26eccb3bd759ba8ce5fcfc931ff,"Join Predicate [ B.AirportCode = T.DestAirport ] Output [ T.FlightNo ]
  In: Scan Table [ flights ] Output [ FlightNo , DestAirport ]
  In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport ]"", ""output"": ""#2.FlightNo"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""FlightNo , DestAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: AirportCode , City
  predicate: Predicate [ City = 'Aberdeen' ]
  table: airports
- id: '#2'
  operation: Scan Table
  output: FlightNo , DestAirport
  table: flights
id: '#3'
operation: Join
output: '#2.FlightNo'
predicate: 'Predicate [ #1.AirportCode = #2.DestAirport ]'
"
d86ceaccd1552a8dec247eb8118198684cfdf5be0ab450b672774656c4ac72a2,"Join Predicate [ B.AirportCode = T.DestAirport ] Output [ T.FlightNo ]
  In: Scan Table [ flights ] Output [ FlightNo , DestAirport ]
  In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' ] Output [ AirportCode , City ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport ]"", ""output"": ""#2.FlightNo"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""FlightNo , DestAirport""}]}","children:
- id: '#1'
  operation: Scan Table
  output: AirportCode , City
  predicate: Predicate [ City = 'Aberdeen' ]
  table: airports
- id: '#2'
  operation: Scan Table
  output: FlightNo , DestAirport
  table: flights
id: '#3'
operation: Join
output: '#2.FlightNo'
predicate: 'Predicate [ #1.AirportCode = #2.DestAirport ]'
"
121668ef9aa1b21c6f90356eb200c8415c68d85e24e4277a59824c5dd5f9f785,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ B.City , B.AirportCode ]
    In: Scan Table [ flights ] Output [ DestAirport ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' OR City = 'Abilene' ] Output [ AirportCode , City ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' OR City = 'Abilene' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' OR City = 'Abilene' ]
    table: airports
  - id: '#2'
    operation: Scan Table
    output: DestAirport
    table: flights
  id: '#3'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #2.DestAirport ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
d2374d59745c0e008a05a979d13f5c78e4b5039879a3a689dd950667f24dfdcc,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.AirportCode = T.DestAirport ] Output [ B.City , B.AirportCode ]
    In: Scan Table [ flights ] Output [ DestAirport ]
    In: Scan Table [ airports ] Predicate [ City = 'Aberdeen' OR City = 'Abilene' ] Output [ AirportCode , City ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.AirportCode = #2.DestAirport ]"", ""output"": ""#1.City , #1.AirportCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""predicate"": ""Predicate [ City = 'Aberdeen' OR City = 'Abilene' ]"", ""output"": ""AirportCode , City""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: AirportCode , City
    predicate: Predicate [ City = 'Aberdeen' OR City = 'Abilene' ]
    table: airports
  - id: '#2'
    operation: Scan Table
    output: DestAirport
    table: flights
  id: '#3'
  operation: Join
  output: '#1.City , #1.AirportCode'
  predicate: 'Predicate [ #1.AirportCode = #2.DestAirport ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
9a73a6338b34f5e65b5cc27586bccdf5fe018eeda56c944a0b2b0b9f7e6ca09c,"Except ExceptColumns [ B.AirportCode ] Output [ B.AirportName ]
  In: Union Output [ B.AirportCode ]
    In: Scan Table [ flights ] Output [ DestAirport AS AirportCode ]
    In: Scan Table [ flights ] Output [ SourceAirport AS AirportCode ]
  In: Scan Table [ airports ] Output [ AirportCode , AirportName ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""ExceptColumns [ #1.AirportCode ]"", ""output"": ""#1.AirportName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode , AirportName""}, {""id"": ""#4"", ""operation"": ""Union"", ""output"": ""#2.AirportCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport AS AirportCode""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport AS AirportCode""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: AirportCode , AirportName
  table: airports
- children:
  - id: '#2'
    operation: Scan Table
    output: SourceAirport AS AirportCode
    table: flights
  - id: '#3'
    operation: Scan Table
    output: DestAirport AS AirportCode
    table: flights
  id: '#4'
  operation: Union
  output: '#2.AirportCode'
id: '#5'
operation: Except
output: '#1.AirportName'
predicate: 'ExceptColumns [ #1.AirportCode ]'
"
63bfffa86de5ddf9518ff92a308340dbf0884a3e273892bfb044d3f7c7fbe2a3,"Except ExceptColumns [ B.AirportCode ] Output [ B.AirportName ]
  In: Union Output [ B.AirportCode ]
    In: Scan Table [ flights ] Output [ DestAirport AS AirportCode ]
    In: Scan Table [ flights ] Output [ SourceAirport AS AirportCode ]
  In: Scan Table [ airports ] Output [ AirportCode , AirportName ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""ExceptColumns [ #1.AirportCode ]"", ""output"": ""#1.AirportName"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""airports"", ""output"": ""AirportCode , AirportName""}, {""id"": ""#4"", ""operation"": ""Union"", ""output"": ""#2.AirportCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""SourceAirport AS AirportCode""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""flights"", ""output"": ""DestAirport AS AirportCode""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: AirportCode , AirportName
  table: airports
- children:
  - id: '#2'
    operation: Scan Table
    output: SourceAirport AS AirportCode
    table: flights
  - id: '#3'
    operation: Scan Table
    output: DestAirport AS AirportCode
    table: flights
  id: '#4'
  operation: Union
  output: '#2.AirportCode'
id: '#5'
operation: Except
output: '#1.AirportName'
predicate: 'ExceptColumns [ #1.AirportCode ]'
"
554a0b7814c3f16586c821c590d72c85fb6cd567bdaed14279d59e072644ed1f,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ employee ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: employee
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b7ce7e96288841eb3415b871eb6a39d8aadabecb1b37a15b91b8309111d50ed1,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ employee ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: employee
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
638f6f2ec73a8fdd72296c056dbd30a739b9d387584c4b01c28c97f413f3675c,"Sort OrderBy [ Age ASC ] Output [ Name , Age ]
  In: Scan Table [ employee ] Output [ Name , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age ASC ]"", ""output"": ""Name , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Age
  table: employee
id: '#2'
operation: Sort
output: Name , Age
predicate: OrderBy [ Age ASC ]
"
187a9dfd630ef2d10c685b291d0f05840d8d172803e5dede4b1dfcd226fa7f5e,"Sort OrderBy [ Age ASC ] Output [ Name , Age ]
  In: Scan Table [ employee ] Output [ Name , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age ASC ]"", ""output"": ""Name , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Age
  table: employee
id: '#2'
operation: Sort
output: Name , Age
predicate: OrderBy [ Age ASC ]
"
3e0c05f363776d11348e6153e66cd5edbe0ef5a51c3a812ec2633d44e47352ee,"Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
  In: Scan Table [ employee ] Output [ City ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""City""}]}","children:
- id: '#1'
  operation: Scan Table
  output: City
  table: employee
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , City
predicate: GroupBy [ City ]
"
e81d18bcec18f6d352f79d2f159af0c55a5dc378dca8d9aa19e6d1a9d78f5a9e,"Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
  In: Scan Table [ employee ] Output [ City ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""City""}]}","children:
- id: '#1'
  operation: Scan Table
  output: City
  table: employee
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , City
predicate: GroupBy [ City ]
"
f290992f9d25245881047abb0c5a8fa75425fa9fa94cedc433334874825ed374,"Filter Predicate [ Count_Star > 1 ] Output [ City ]
  In: Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
    In: Scan Table [ employee ] Predicate [ Age < 30 ] Output [ City , Age ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""City"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""predicate"": ""Predicate [ Age < 30 ]"", ""output"": ""City , Age""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: City , Age
    predicate: Predicate [ Age < 30 ]
    table: employee
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , City
  predicate: GroupBy [ City ]
id: '#3'
operation: Filter
output: City
predicate: Predicate [ Count_Star > 1 ]
"
335feb174905f95c58ecd6591d17c573f3b40baf343333f6bbeed83c02516e79,"Filter Predicate [ Count_Star > 1 ] Output [ City ]
  In: Aggregate GroupBy [ City ] Output [ countstar AS Count_Star , City ]
    In: Scan Table [ employee ] Predicate [ Age < 30 ] Output [ City , Age ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""City"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ City ]"", ""output"": ""countstar AS Count_Star , City"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""predicate"": ""Predicate [ Age < 30 ]"", ""output"": ""City , Age""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: City , Age
    predicate: Predicate [ Age < 30 ]
    table: employee
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , City
  predicate: GroupBy [ City ]
id: '#3'
operation: Filter
output: City
predicate: Predicate [ Count_Star > 1 ]
"
a4b73ee60e1ed8de6d08edba00c1d94f1aed84d6660302a5970865956fdbdf1c,"Aggregate GroupBy [ Location ] Output [ countstar AS Count_Star , Location ]
  In: Scan Table [ shop ] Output [ Location ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Location ]"", ""output"": ""countstar AS Count_Star , Location"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Location""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Location
  table: shop
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Location
predicate: GroupBy [ Location ]
"
0d4fb20a6fb3ba654d1369ba25a6a2a37e5ff5c8fdd5227b2a6e28aa7436fa5e,"Aggregate GroupBy [ Location ] Output [ countstar AS Count_Star , Location ]
  In: Scan Table [ shop ] Output [ Location ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Location ]"", ""output"": ""countstar AS Count_Star , Location"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Location""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Location
  table: shop
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Location
predicate: GroupBy [ Location ]
"
4e203440b0f9a0aedc9e463d02382c9f59aab4bf42372c1411307a998ac33150,"TopSort Rows [ 1 ] OrderBy [ Number_products DESC ] Output [ Number_products , Manager_name , District ]
  In: Scan Table [ shop ] Output [ Number_products , Manager_name , District ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Number_products DESC ]"", ""output"": ""Number_products , Manager_name , District"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Number_products , Manager_name , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Number_products , Manager_name , District
  table: shop
id: '#2'
operation: TopSort
output: Number_products , Manager_name , District
predicate: Rows [ 1 ] OrderBy [ Number_products DESC ]
"
7c4fa321a90c7351e476975b181c798ce83282484ff08fa81936504345c58670,"TopSort Rows [ 1 ] OrderBy [ Number_products DESC ] Output [ Number_products , Manager_name , District ]
  In: Scan Table [ shop ] Output [ Number_products , Manager_name , District ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Number_products DESC ]"", ""output"": ""Number_products , Manager_name , District"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Number_products , Manager_name , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Number_products , Manager_name , District
  table: shop
id: '#2'
operation: TopSort
output: Number_products , Manager_name , District
predicate: Rows [ 1 ] OrderBy [ Number_products DESC ]
"
6ae399e06f0727c2e17b66033a479df7c995fb6126ac67372fe9c15c6a115c23,"Aggregate Output [ MAX(Number_products) AS Max_Number_products , MIN(Number_products) AS Min_Number_products ]
  In: Scan Table [ shop ] Output [ Number_products ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Number_products) AS Max_Number_products , MIN(Number_products) AS Min_Number_products"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Number_products""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Number_products
  table: shop
id: '#2'
operation: Aggregate
output: MAX(Number_products) AS Max_Number_products , MIN(Number_products) AS Min_Number_products
"
9e1d5ef6745da75269f01f2394f4be8f88a36f0f2f1760c4d6dd46ebc23dec81,"Aggregate Output [ MAX(Number_products) AS Max_Number_products , MIN(Number_products) AS Min_Number_products ]
  In: Scan Table [ shop ] Output [ Number_products ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Number_products) AS Max_Number_products , MIN(Number_products) AS Min_Number_products"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Number_products""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Number_products
  table: shop
id: '#2'
operation: Aggregate
output: MAX(Number_products) AS Max_Number_products , MIN(Number_products) AS Min_Number_products
"
f8a3282285f9259ebf76f900a07aac1703877f2df99a0034fa27e72907327cb5,"Sort OrderBy [ Number_products DESC ] Output [ Name , Number_products , Location , District ]
  In: Scan Table [ shop ] Output [ Name , Number_products , Location , District ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Number_products DESC ]"", ""output"": ""Name , Number_products , Location , District"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Number_products , Location , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Number_products , Location , District
  table: shop
id: '#2'
operation: Sort
output: Name , Number_products , Location , District
predicate: OrderBy [ Number_products DESC ]
"
b69843ef90777876c4360c78bd23ba71beb1e392bbf2540345f6709eb354d205,"Sort OrderBy [ Number_products DESC ] Output [ Name , Number_products , Location , District ]
  In: Scan Table [ shop ] Output [ Name , Number_products , Location , District ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Number_products DESC ]"", ""output"": ""Name , Number_products , Location , District"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Number_products , Location , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Number_products , Location , District
  table: shop
id: '#2'
operation: Sort
output: Name , Number_products , Location , District
predicate: OrderBy [ Number_products DESC ]
"
c7b79dc46ba1d29aaab498484888e38ee860e274eca99a6919829c054daf7d81,"Join Predicate [ T.Number_products > B.Avg_Number_products ] Output [ T.Name ]
  In: Scan Table [ shop ] Output [ Name , Number_products ]
  In: Aggregate Output [ AVG(Number_products) AS Avg_Number_products ]
    In: Scan Table [ shop ] Output [ Number_products ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Number_products > #2.Avg_Number_products ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Number_products) AS Avg_Number_products"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Number_products""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Number_products""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Number_products
    table: shop
  id: '#2'
  operation: Aggregate
  output: AVG(Number_products) AS Avg_Number_products
- id: '#3'
  operation: Scan Table
  output: Name , Number_products
  table: shop
id: '#4'
operation: Join
output: '#3.Name'
predicate: 'Predicate [ #3.Number_products > #2.Avg_Number_products ]'
"
6ea998f796ec30bffa8e18b93df295017492f935422901936d3cd25d3d8cb4b4,"Join Predicate [ T.Number_products > B.Avg_Number_products ] Output [ T.Name ]
  In: Scan Table [ shop ] Output [ Name , Number_products ]
  In: Aggregate Output [ AVG(Number_products) AS Avg_Number_products ]
    In: Scan Table [ shop ] Output [ Number_products ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Number_products > #2.Avg_Number_products ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Number_products) AS Avg_Number_products"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Number_products""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Number_products""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Number_products
    table: shop
  id: '#2'
  operation: Aggregate
  output: AVG(Number_products) AS Avg_Number_products
- id: '#3'
  operation: Scan Table
  output: Name , Number_products
  table: shop
id: '#4'
operation: Join
output: '#3.Name'
predicate: 'Predicate [ #3.Number_products > #2.Avg_Number_products ]'
"
0049599bd964edec86a7cd9e34a482b47430b2f6f3b2376013f90f446d7b20e0,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Count_Star ]
  In: Join Predicate [ B.Employee_ID = T.Employee_ID ] Output [ T.Name , B.Count_Star ]
    In: Scan Table [ employee ] Output [ Name , Employee_ID ]
    In: Aggregate GroupBy [ Employee_ID ] Output [ countstar AS Count_Star , Employee_ID ]
      In: Scan Table [ evaluation ] Output [ Employee_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Employee_ID = #3.Employee_ID ]"", ""output"": ""#3.Name , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Employee_ID ]"", ""output"": ""countstar AS Count_Star , Employee_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Employee_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Employee_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Employee_ID
      table: evaluation
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Employee_ID
    predicate: GroupBy [ Employee_ID ]
  - id: '#3'
    operation: Scan Table
    output: Name , Employee_ID
    table: employee
  id: '#4'
  operation: Join
  output: '#3.Name , #2.Count_Star'
  predicate: 'Predicate [ #2.Employee_ID = #3.Employee_ID ]'
id: '#5'
operation: TopSort
output: Name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
93b7ac35d94bcc7afc58e37c1555d4cd63f189511d09f623994cfda40291923d,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Count_Star ]
  In: Join Predicate [ B.Employee_ID = T.Employee_ID ] Output [ T.Name , B.Count_Star ]
    In: Scan Table [ employee ] Output [ Name , Employee_ID ]
    In: Aggregate GroupBy [ Employee_ID ] Output [ countstar AS Count_Star , Employee_ID ]
      In: Scan Table [ evaluation ] Output [ Employee_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Employee_ID = #3.Employee_ID ]"", ""output"": ""#3.Name , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Employee_ID ]"", ""output"": ""countstar AS Count_Star , Employee_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Employee_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Employee_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Employee_ID
      table: evaluation
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Employee_ID
    predicate: GroupBy [ Employee_ID ]
  - id: '#3'
    operation: Scan Table
    output: Name , Employee_ID
    table: employee
  id: '#4'
  operation: Join
  output: '#3.Name , #2.Count_Star'
  predicate: 'Predicate [ #2.Employee_ID = #3.Employee_ID ]'
id: '#5'
operation: TopSort
output: Name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
3139aeb80c8cefdaf39826e2d00b9d3cd210caeef5fb2ead36207817e06f956c,"TopSort Rows [ 1 ] OrderBy [ Bonus DESC ] Output [ Name , Bonus ]
  In: Join Predicate [ B.Employee_ID = T.Employee_ID ] Output [ B.Bonus , T.Name ]
    In: Scan Table [ employee ] Output [ Name , Employee_ID ]
    In: Scan Table [ evaluation ] Output [ Employee_ID , Bonus ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Bonus DESC ]"", ""output"": ""Name , Bonus"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Employee_ID = #2.Employee_ID ]"", ""output"": ""#1.Bonus , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Employee_ID , Bonus""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Employee_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Employee_ID , Bonus
    table: evaluation
  - id: '#2'
    operation: Scan Table
    output: Name , Employee_ID
    table: employee
  id: '#3'
  operation: Join
  output: '#1.Bonus , #2.Name'
  predicate: 'Predicate [ #1.Employee_ID = #2.Employee_ID ]'
id: '#4'
operation: TopSort
output: Name , Bonus
predicate: Rows [ 1 ] OrderBy [ Bonus DESC ]
"
944f0b4d6ff267f7af127233f544a13a26d78eac3fd23869c146f15b97c3279f,"TopSort Rows [ 1 ] OrderBy [ Bonus DESC ] Output [ Name , Bonus ]
  In: Join Predicate [ B.Employee_ID = T.Employee_ID ] Output [ B.Bonus , T.Name ]
    In: Scan Table [ employee ] Output [ Name , Employee_ID ]
    In: Scan Table [ evaluation ] Output [ Employee_ID , Bonus ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Bonus DESC ]"", ""output"": ""Name , Bonus"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Employee_ID = #2.Employee_ID ]"", ""output"": ""#1.Bonus , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Employee_ID , Bonus""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Employee_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Employee_ID , Bonus
    table: evaluation
  - id: '#2'
    operation: Scan Table
    output: Name , Employee_ID
    table: employee
  id: '#3'
  operation: Join
  output: '#1.Bonus , #2.Name'
  predicate: 'Predicate [ #1.Employee_ID = #2.Employee_ID ]'
id: '#4'
operation: TopSort
output: Name , Bonus
predicate: Rows [ 1 ] OrderBy [ Bonus DESC ]
"
c850bd4e8300b6e5ba35a342efc45a3c8f2d8ed8a4ce4e92e01bc12f5688331c,"Except Predicate [ T.Employee_ID = B.Employee_ID ] Output [ B.Name ]
  In: Aggregate GroupBy [ Employee_ID ] Output [ Employee_ID ]
    In: Scan Table [ evaluation ] Output [ Employee_ID ]
  In: Scan Table [ employee ] Output [ Name , Employee_ID ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.Employee_ID = #1.Employee_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Employee_ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Employee_ID ]"", ""output"": ""Employee_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Employee_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Employee_ID
  table: employee
- children:
  - id: '#2'
    operation: Scan Table
    output: Employee_ID
    table: evaluation
  id: '#3'
  operation: Aggregate
  output: Employee_ID
  predicate: GroupBy [ Employee_ID ]
id: '#4'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #3.Employee_ID = #1.Employee_ID ]'
"
85aeac6085a45b42a3cb13e9a51a1238d1d7659f549c5d296e0bd0b85977b67f,"Except Predicate [ T.Employee_ID = B.Employee_ID ] Output [ B.Name ]
  In: Aggregate GroupBy [ Employee_ID ] Output [ Employee_ID ]
    In: Scan Table [ evaluation ] Output [ Employee_ID ]
  In: Scan Table [ employee ] Output [ Name , Employee_ID ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.Employee_ID = #1.Employee_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""employee"", ""output"": ""Name , Employee_ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Employee_ID ]"", ""output"": ""Employee_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Employee_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Employee_ID
  table: employee
- children:
  - id: '#2'
    operation: Scan Table
    output: Employee_ID
    table: evaluation
  id: '#3'
  operation: Aggregate
  output: Employee_ID
  predicate: GroupBy [ Employee_ID ]
id: '#4'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #3.Employee_ID = #1.Employee_ID ]'
"
9c652b3b6b8008aeefd32407accb5c92e8b77e33db8255bf73373095371f09ac,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Count_Star ]
  In: Aggregate GroupBy [ Shop_ID ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Shop_ID = T.Shop_ID ] Output [ B.Shop_ID , T.Name ]
      In: Scan Table [ shop ] Output [ Name , Shop_ID ]
      In: Scan Table [ hiring ] Output [ Shop_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Shop_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Shop_ID = #2.Shop_ID ]"", ""output"": ""#1.Shop_ID , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Shop_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Shop_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Shop_ID
      table: hiring
    - id: '#2'
      operation: Scan Table
      output: Name , Shop_ID
      table: shop
    id: '#3'
    operation: Join
    output: '#1.Shop_ID , #2.Name'
    predicate: 'Predicate [ #1.Shop_ID = #2.Shop_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Shop_ID ]
id: '#5'
operation: TopSort
output: Name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
6a735b312c65119564c18fa7ea1b10ecb2e74b7449a429e88e93ecf303f8eeb5,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Count_Star ]
  In: Aggregate GroupBy [ Shop_ID ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Shop_ID = T.Shop_ID ] Output [ B.Shop_ID , T.Name ]
      In: Scan Table [ shop ] Output [ Name , Shop_ID ]
      In: Scan Table [ hiring ] Output [ Shop_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Shop_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Shop_ID = #2.Shop_ID ]"", ""output"": ""#1.Shop_ID , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Shop_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Shop_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Shop_ID
      table: hiring
    - id: '#2'
      operation: Scan Table
      output: Name , Shop_ID
      table: shop
    id: '#3'
    operation: Join
    output: '#1.Shop_ID , #2.Name'
    predicate: 'Predicate [ #1.Shop_ID = #2.Shop_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Shop_ID ]
id: '#5'
operation: TopSort
output: Name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
72cb3e5d56ab334b4eb7dbfbb1e6d8cac17ea9531d988f83da4a411ca5ed89a6,"Except Predicate [ T.Shop_ID IS NULL OR B.Shop_ID = T.Shop_ID ] Output [ B.Name ]
  In: Scan Table [ hiring ] Output [ Shop_ID ]
  In: Scan Table [ shop ] Output [ Name , Shop_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Shop_ID IS NULL OR #1.Shop_ID = #2.Shop_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Shop_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Shop_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Shop_ID
  table: shop
- id: '#2'
  operation: Scan Table
  output: Shop_ID
  table: hiring
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Shop_ID IS NULL OR #1.Shop_ID = #2.Shop_ID ]'
"
d080be18c27371378e9624a6372e8ba0e7e9f9cde4f841e863a6a2a3aa5ea890,"Except Predicate [ T.Shop_ID IS NULL OR B.Shop_ID = T.Shop_ID ] Output [ B.Name ]
  In: Scan Table [ hiring ] Output [ Shop_ID ]
  In: Scan Table [ shop ] Output [ Name , Shop_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Shop_ID IS NULL OR #1.Shop_ID = #2.Shop_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Shop_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Shop_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Shop_ID
  table: shop
- id: '#2'
  operation: Scan Table
  output: Shop_ID
  table: hiring
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Shop_ID IS NULL OR #1.Shop_ID = #2.Shop_ID ]'
"
c645e766e0f936794bee7762b6bf8105d088753264597fd96793c738dd10dd91,"Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
  In: Join Predicate [ B.Shop_ID = T.Shop_ID ] Output [ T.Name ]
    In: Scan Table [ shop ] Output [ Name , Shop_ID ]
    In: Scan Table [ hiring ] Output [ Shop_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Shop_ID = #2.Shop_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Shop_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Shop_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Shop_ID
    table: hiring
  - id: '#2'
    operation: Scan Table
    output: Name , Shop_ID
    table: shop
  id: '#3'
  operation: Join
  output: '#2.Name'
  predicate: 'Predicate [ #1.Shop_ID = #2.Shop_ID ]'
id: '#4'
operation: Aggregate
output: Name , countstar AS Count_Star
predicate: GroupBy [ Name ]
"
d4a90c1eaa15edba9a6d3920f3e16b7bfa906ace797d675ad139dd1f1982ae08,"Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
  In: Join Predicate [ B.Shop_ID = T.Shop_ID ] Output [ T.Name ]
    In: Scan Table [ shop ] Output [ Name , Shop_ID ]
    In: Scan Table [ hiring ] Output [ Shop_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Shop_ID = #2.Shop_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Shop_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""output"": ""Name , Shop_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Shop_ID
    table: hiring
  - id: '#2'
    operation: Scan Table
    output: Name , Shop_ID
    table: shop
  id: '#3'
  operation: Join
  output: '#2.Name'
  predicate: 'Predicate [ #1.Shop_ID = #2.Shop_ID ]'
id: '#4'
operation: Aggregate
output: Name , countstar AS Count_Star
predicate: GroupBy [ Name ]
"
9d6035ad0ad42b2d785b043e82035e314bdf85d3fa4ae7d8d22cb7a8980c2c5b,"Aggregate Output [ SUM(Bonus) AS Sum_Bonus ]
  In: Scan Table [ evaluation ] Output [ Bonus ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""SUM(Bonus) AS Sum_Bonus"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Bonus""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Bonus
  table: evaluation
id: '#2'
operation: Aggregate
output: SUM(Bonus) AS Sum_Bonus
"
542cbe30d5c93dbde2e5d22089c6766789949c24e1098ec81ef7fb28853ae1ff,"Aggregate Output [ SUM(Bonus) AS Sum_Bonus ]
  In: Scan Table [ evaluation ] Output [ Bonus ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""SUM(Bonus) AS Sum_Bonus"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""evaluation"", ""output"": ""Bonus""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Bonus
  table: evaluation
id: '#2'
operation: Aggregate
output: SUM(Bonus) AS Sum_Bonus
"
5c0de2f93c0a4a04d5e485de311035b20abd380bf6580f29e898c84ac4a90fc1,"Scan Table [ hiring ] Output [ Start_from , Shop_ID , Employee_ID , Is_full_time ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Start_from , Shop_ID , Employee_ID , Is_full_time""}","id: '#1'
operation: Scan Table
output: Start_from , Shop_ID , Employee_ID , Is_full_time
table: hiring
"
9a5c03af4b83ba7b55e93a138b9c8711e265ee47ca1a1ffa85059523cee22920,"Scan Table [ hiring ] Output [ Start_from , Shop_ID , Employee_ID , Is_full_time ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""hiring"", ""output"": ""Start_from , Shop_ID , Employee_ID , Is_full_time""}","id: '#1'
operation: Scan Table
output: Start_from , Shop_ID , Employee_ID , Is_full_time
table: hiring
"
41ac9ea02212af7c1d4afef475a1a3e7678709ec843720d39156c36445ceb7ae,"Intersect Predicate [ B.District = T.District ] Output [ B.District ]
  In: Scan Table [ shop ] Predicate [ Number_products > 10000 ] Output [ Number_products , District ]
  In: Scan Table [ shop ] Predicate [ Number_products < 3000 ] Distinct [ true ] Output [ Number_products , District ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.District = #2.District ]"", ""output"": ""#1.District"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""predicate"": ""Predicate [ Number_products < 3000 ] Distinct [ true ]"", ""output"": ""Number_products , District""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""predicate"": ""Predicate [ Number_products > 10000 ]"", ""output"": ""Number_products , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Number_products , District
  predicate: Predicate [ Number_products < 3000 ] Distinct [ true ]
  table: shop
- id: '#2'
  operation: Scan Table
  output: Number_products , District
  predicate: Predicate [ Number_products > 10000 ]
  table: shop
id: '#3'
operation: Intersect
output: '#1.District'
predicate: 'Predicate [ #1.District = #2.District ]'
"
e0677381f837d83064d2983f6482252b89c6d6f8f0f60cad1d6fabe5917d5ec1,"Intersect Predicate [ B.District = T.District ] Output [ B.District ]
  In: Scan Table [ shop ] Predicate [ Number_products > 10000 ] Output [ Number_products , District ]
  In: Scan Table [ shop ] Predicate [ Number_products < 3000 ] Distinct [ true ] Output [ Number_products , District ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.District = #2.District ]"", ""output"": ""#1.District"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""predicate"": ""Predicate [ Number_products < 3000 ] Distinct [ true ]"", ""output"": ""Number_products , District""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""predicate"": ""Predicate [ Number_products > 10000 ]"", ""output"": ""Number_products , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Number_products , District
  predicate: Predicate [ Number_products < 3000 ] Distinct [ true ]
  table: shop
- id: '#2'
  operation: Scan Table
  output: Number_products , District
  predicate: Predicate [ Number_products > 10000 ]
  table: shop
id: '#3'
operation: Intersect
output: '#1.District'
predicate: 'Predicate [ #1.District = #2.District ]'
"
8f2fa5fd0ef79053cfaef4c8c5f35c04f052a81db289cbdc839fcf8309c7201c,"Aggregate Output [ COUNT(DISTINCT Location) AS Count_Dist_Location ]
  In: Scan Table [ shop ] Distinct [ true ] Output [ Location ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Location) AS Count_Dist_Location"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Location""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Location
  predicate: Distinct [ true ]
  table: shop
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Location) AS Count_Dist_Location
"
819c2643bf90842bf8740422b759e856df9364f70dfae3b568f5dac7506e4c90,"Aggregate Output [ COUNT(DISTINCT Location) AS Count_Dist_Location ]
  In: Scan Table [ shop ] Distinct [ true ] Output [ Location ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Location) AS Count_Dist_Location"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""shop"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Location""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Location
  predicate: Distinct [ true ]
  table: shop
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Location) AS Count_Dist_Location
"
eab7bb94e7abc6a9e24b9ce9ebd085bd7718b6149dae5227d4158b83dc38b80a,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Documents ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Documents
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
79abb4aa8ede602463ad0c23ef7d323059fd0942a2c077791c8902fa8a6b3c84,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Documents ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Documents
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
fce8efd12aefcfdc3f2e9ca07f4444e7f1865fffdd2bc1fc7ec53c0727a02f6a,"Scan Table [ Documents ] Output [ Document_Name , Document_ID , Document_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Document_ID , Document_Description""}","id: '#1'
operation: Scan Table
output: Document_Name , Document_ID , Document_Description
table: Documents
"
adf96d93299f5428237c3f5812145f2761590bac2baec91d082aa82d0d2b0b84,"Scan Table [ Documents ] Output [ Document_Name , Document_ID , Document_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Document_ID , Document_Description""}","id: '#1'
operation: Scan Table
output: Document_Name , Document_ID , Document_Description
table: Documents
"
7cfeeba3a17801aa0e5e8907ae3de3f7117164f2eac9624d4f86b7caed7ae112,"Scan Table [ Documents ] Predicate [ Document_Description like '%w%' ] Output [ Document_Name , Document_Description , Template_ID ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Description like '%w%' ]"", ""output"": ""Document_Name , Document_Description , Template_ID""}","id: '#1'
operation: Scan Table
output: Document_Name , Document_Description , Template_ID
predicate: Predicate [ Document_Description like '%w%' ]
table: Documents
"
18df0d6d89d729ddddb63ab14a7b51091dcdaa8a024eb30d6fc2483580187d04,"Scan Table [ Documents ] Predicate [ Document_Description like '%w%' ] Output [ Document_Name , Document_Description , Template_ID ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Description like '%w%' ]"", ""output"": ""Document_Name , Document_Description , Template_ID""}","id: '#1'
operation: Scan Table
output: Document_Name , Document_Description , Template_ID
predicate: Predicate [ Document_Description like '%w%' ]
table: Documents
"
de7fe93e9fc34cbb4e48313cb3c9d1a8b89df8398f23bf0ed08a5dca217c31d4,"Scan Table [ Documents ] Predicate [ Document_Name = 'Robbin CV' ] Output [ Document_Name , Document_ID , Document_Description , Template_ID ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Robbin CV' ]"", ""output"": ""Document_Name , Document_ID , Document_Description , Template_ID""}","id: '#1'
operation: Scan Table
output: Document_Name , Document_ID , Document_Description , Template_ID
predicate: Predicate [ Document_Name = 'Robbin CV' ]
table: Documents
"
7571db72eb5bba0f37d0be25e316684fb2c1e9f8c7b68a7a4d919a83bb7e09fa,"Scan Table [ Documents ] Predicate [ Document_Name = 'Robbin CV' ] Output [ Document_Name , Document_ID , Document_Description , Template_ID ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Robbin CV' ]"", ""output"": ""Document_Name , Document_ID , Document_Description , Template_ID""}","id: '#1'
operation: Scan Table
output: Document_Name , Document_ID , Document_Description , Template_ID
predicate: Predicate [ Document_Name = 'Robbin CV' ]
table: Documents
"
725a0a1fc36a2853a3b3653227520372024a5dba8ae7bed03e06066dc689001d,"Aggregate Output [ COUNT(DISTINCT Template_ID) AS Count_Dist_Template_ID ]
  In: Scan Table [ Documents ] Distinct [ true ] Output [ Template_ID ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Template_ID) AS Count_Dist_Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_ID
  predicate: Distinct [ true ]
  table: Documents
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Template_ID) AS Count_Dist_Template_ID
"
0fe435ff996ce5bd596ecf192de9539d0b672b65c46ad5ac0b30f3ae4de14179,"Aggregate Output [ COUNT(DISTINCT Template_ID) AS Count_Dist_Template_ID ]
  In: Scan Table [ Documents ] Distinct [ true ] Output [ Template_ID ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Template_ID) AS Count_Dist_Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_ID
  predicate: Distinct [ true ]
  table: Documents
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Template_ID) AS Count_Dist_Template_ID
"
3d42cc6f33bbde3a7435930ec8087870981f004e3da7c98cf437a6de0a7d8d7a,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ B.Template_ID , B.Template_Type_Code ]
    In: Scan Table [ Documents ] Output [ Template_ID ]
    In: Scan Table [ Templates ] Predicate [ Template_Type_Code = 'PPT' ] Output [ Template_Type_Code , Template_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#1.Template_ID , #1.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'PPT' ]"", ""output"": ""Template_Type_Code , Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    predicate: Predicate [ Template_Type_Code = 'PPT' ]
    table: Templates
  - id: '#2'
    operation: Scan Table
    output: Template_ID
    table: Documents
  id: '#3'
  operation: Join
  output: '#1.Template_ID , #1.Template_Type_Code'
  predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
577492e72abb4721384a009437ef90d0efd51c4d0a2fac6c92e9cceed7781094,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ B.Template_ID , B.Template_Type_Code ]
    In: Scan Table [ Documents ] Output [ Template_ID ]
    In: Scan Table [ Templates ] Predicate [ Template_Type_Code = 'PPT' ] Output [ Template_Type_Code , Template_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#1.Template_ID , #1.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'PPT' ]"", ""output"": ""Template_Type_Code , Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    predicate: Predicate [ Template_Type_Code = 'PPT' ]
    table: Templates
  - id: '#2'
    operation: Scan Table
    output: Template_ID
    table: Documents
  id: '#3'
  operation: Join
  output: '#1.Template_ID , #1.Template_Type_Code'
  predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
c6bc5150c9983a750e71d9667f462c05d034560988d775220ae3b526e8e64abd,"Aggregate GroupBy [ Template_ID ] Output [ countstar AS Count_Star , Template_ID ]
  In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_ID ]"", ""output"": ""countstar AS Count_Star , Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_ID
  table: Documents
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Template_ID
predicate: GroupBy [ Template_ID ]
"
21a326c50fe17acbb83d3c76d8ef9b391937207f1540f33c05c37f28ca6a7b67,"Aggregate GroupBy [ Template_ID ] Output [ countstar AS Count_Star , Template_ID ]
  In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_ID ]"", ""output"": ""countstar AS Count_Star , Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_ID
  table: Documents
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Template_ID
predicate: GroupBy [ Template_ID ]
"
c3ef543a45f6e5e4f66daf47c8a178b75e697130dea996d32edb01489e7f2b0c,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Template_Type_Code , Template_ID , Count_Star ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ B.Count_Star , T.Template_Type_Code , B.Template_ID ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Aggregate GroupBy [ Template_ID ] Output [ countstar AS Count_Star , Template_ID ]
      In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Template_Type_Code , Template_ID , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Template_ID = #3.Template_ID ]"", ""output"": ""#2.Count_Star , #3.Template_Type_Code , #2.Template_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_ID ]"", ""output"": ""countstar AS Count_Star , Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Template_ID
      table: Documents
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Template_ID
    predicate: GroupBy [ Template_ID ]
  - id: '#3'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.Template_Type_Code , #2.Template_ID'
  predicate: 'Predicate [ #2.Template_ID = #3.Template_ID ]'
id: '#5'
operation: TopSort
output: Template_Type_Code , Template_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
66c3f98482a14280727e245d4aa8fb05ff84ec2ea3d5c2fc79ecd29f068dc541,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Template_Type_Code , Template_ID , Count_Star ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ B.Count_Star , T.Template_Type_Code , B.Template_ID ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Aggregate GroupBy [ Template_ID ] Output [ countstar AS Count_Star , Template_ID ]
      In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Template_Type_Code , Template_ID , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Template_ID = #3.Template_ID ]"", ""output"": ""#2.Count_Star , #3.Template_Type_Code , #2.Template_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_ID ]"", ""output"": ""countstar AS Count_Star , Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Template_ID
      table: Documents
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Template_ID
    predicate: GroupBy [ Template_ID ]
  - id: '#3'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.Template_Type_Code , #2.Template_ID'
  predicate: 'Predicate [ #2.Template_ID = #3.Template_ID ]'
id: '#5'
operation: TopSort
output: Template_Type_Code , Template_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
4af5f846a2c00cc1660bb52df528a97d9532d57a5546a57a7d2989a3df6518c8,"Filter Predicate [ Count_Star > 1 ] Output [ Template_ID ]
  In: Aggregate GroupBy [ Template_ID ] Output [ countstar AS Count_Star , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Template_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_ID ]"", ""output"": ""countstar AS Count_Star , Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_ID
    table: Documents
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Template_ID
  predicate: GroupBy [ Template_ID ]
id: '#3'
operation: Filter
output: Template_ID
predicate: Predicate [ Count_Star > 1 ]
"
e449e6f942e8de3c7125b40721a8e17af0e967438dc82614ca4da0cc044227c3,"Filter Predicate [ Count_Star > 1 ] Output [ Template_ID ]
  In: Aggregate GroupBy [ Template_ID ] Output [ countstar AS Count_Star , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Template_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_ID ]"", ""output"": ""countstar AS Count_Star , Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_ID
    table: Documents
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Template_ID
  predicate: GroupBy [ Template_ID ]
id: '#3'
operation: Filter
output: Template_ID
predicate: Predicate [ Count_Star > 1 ]
"
90709a58f713a9b610f22a044e73dd9540902fee65a49244b062b9344b9e1493,"Except Predicate [ T.Template_ID = B.Template_ID ] Output [ B.Template_ID ]
  In: Scan Table [ Documents ] Output [ Template_ID ]
  In: Scan Table [ Templates ] Output [ Template_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Template_ID = #1.Template_ID ]"", ""output"": ""#1.Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_ID
  table: Templates
- id: '#2'
  operation: Scan Table
  output: Template_ID
  table: Documents
id: '#3'
operation: Except
output: '#1.Template_ID'
predicate: 'Predicate [ #2.Template_ID = #1.Template_ID ]'
"
653a2932fa46003787be8119d8beaab1ef997a5cf04809f7712481e7ffdecd2d,"Except Predicate [ T.Template_ID = B.Template_ID ] Output [ B.Template_ID ]
  In: Scan Table [ Documents ] Output [ Template_ID ]
  In: Scan Table [ Templates ] Output [ Template_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Template_ID = #1.Template_ID ]"", ""output"": ""#1.Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_ID
  table: Templates
- id: '#2'
  operation: Scan Table
  output: Template_ID
  table: Documents
id: '#3'
operation: Except
output: '#1.Template_ID'
predicate: 'Predicate [ #2.Template_ID = #1.Template_ID ]'
"
2d9d0cf37702e5dc6bca104899f8e9e4118cca15f96b64c53fa9158e1aec75f7,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Templates ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Templates
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
ba118082f2f696e0f2bc26b33b647f0029b62f4d0e51713ae5858279f600f595,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Templates ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Templates
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
ba3f56f03b1943de5b7ddbd446cd90be44d8e731880028b4f9de9e873e1a5457,"Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID , Version_Number ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID , Version_Number""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_ID , Version_Number
table: Templates
"
64d97831731936fc8fa76d5d897530503fe24df345357db9599440a78381e569,"Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID , Version_Number ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID , Version_Number""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_ID , Version_Number
table: Templates
"
bdc760b10e114287a082d9d26269eaba08a7116ab333ba86922c908eee77b475,Scan Table [ Templates ] Distinct [ true ] Output [ Template_Type_Code ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Template_Type_Code""}","id: '#1'
operation: Scan Table
output: Template_Type_Code
predicate: Distinct [ true ]
table: Templates
"
5233ddd186d5ebb3489169e89600027c8bd742e7e796b95faebfacd2c2a6b3ea,Scan Table [ Templates ] Distinct [ true ] Output [ Template_Type_Code ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Template_Type_Code""}","id: '#1'
operation: Scan Table
output: Template_Type_Code
predicate: Distinct [ true ]
table: Templates
"
bee611719acb4d7633d62ac694f134c781ebbc780185efb12abf4c9f7ab521e9,"Scan Table [ Templates ] Predicate [ Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT' ] Output [ Template_Type_Code , Template_ID ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT' ]"", ""output"": ""Template_Type_Code , Template_ID""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_ID
predicate: Predicate [ Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT' ]
table: Templates
"
c8b3aede5aace8a4d0ece8d034f406ef98bd0e2a5d513ececdba72e3acb31d3e,"Scan Table [ Templates ] Predicate [ Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT' ] Output [ Template_Type_Code , Template_ID ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT' ]"", ""output"": ""Template_Type_Code , Template_ID""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_ID
predicate: Predicate [ Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT' ]
table: Templates
"
7677207c536eff1811ff521af6a0b89899e3c67b81b8c0af18b1a7ded10277b8,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Templates ] Predicate [ Template_Type_Code = 'CV' ] Output [ Template_Type_Code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'CV' ]"", ""output"": ""Template_Type_Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code
  predicate: Predicate [ Template_Type_Code = 'CV' ]
  table: Templates
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2889806e9f7d6a3170472334db0059bddb62f3b27c327d85fcbe1953a3a5bb12,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Templates ] Predicate [ Template_Type_Code = 'CV' ] Output [ Template_Type_Code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'CV' ]"", ""output"": ""Template_Type_Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code
  predicate: Predicate [ Template_Type_Code = 'CV' ]
  table: Templates
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
23f904d4bb657c2244387cda5a52f79e36b9bb5a5edd4ce0dc973805fe3d3e58,"Scan Table [ Templates ] Predicate [ Version_Number > 5 ] Output [ Template_Type_Code , Version_Number ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Version_Number > 5 ]"", ""output"": ""Template_Type_Code , Version_Number""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Version_Number
predicate: Predicate [ Version_Number > 5 ]
table: Templates
"
35116c37e2ee06bd187013cda7d51a7b1c1c96f3da8bba25d01a181000644bbc,"Scan Table [ Templates ] Predicate [ Version_Number > 5 ] Output [ Template_Type_Code , Version_Number ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Version_Number > 5 ]"", ""output"": ""Template_Type_Code , Version_Number""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Version_Number
predicate: Predicate [ Version_Number > 5 ]
table: Templates
"
fd82a9f09b508e811cd8d7220707f1309008b4ff5a1aa9ad7873e7b2d54c7195,"Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code
  table: Templates
id: '#2'
operation: Aggregate
output: Template_Type_Code , countstar AS Count_Star
predicate: GroupBy [ Template_Type_Code ]
"
3fad8c40ea6e872d9085dc84fbff9347ef1135d054e5f0ce599cb367400f65e7,"Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code
  table: Templates
id: '#2'
operation: Aggregate
output: Template_Type_Code , countstar AS Count_Star
predicate: GroupBy [ Template_Type_Code ]
"
f94680095338fe6d4fa0872710695fc16a03ebdefc4828a7282775e6eb1b5a6d,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Template_Type_Code , Count_Star ]
  In: Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Template_Type_Code , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_Type_Code
    table: Templates
  id: '#2'
  operation: Aggregate
  output: Template_Type_Code , countstar AS Count_Star
  predicate: GroupBy [ Template_Type_Code ]
id: '#3'
operation: TopSort
output: Template_Type_Code , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
d3f58202801fed06a5f97b5ad10641054333545fa7d15effc5c7fcc10bd721cb,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Template_Type_Code , Count_Star ]
  In: Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Template_Type_Code , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_Type_Code
    table: Templates
  id: '#2'
  operation: Aggregate
  output: Template_Type_Code , countstar AS Count_Star
  predicate: GroupBy [ Template_Type_Code ]
id: '#3'
operation: TopSort
output: Template_Type_Code , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
e90ca10d3b801905b62e731b28f241b782967b8d2548e1057d546192c2a51a80,"Filter Predicate [ Count_Star < 3 ] Output [ Template_Type_Code ]
  In: Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star < 3 ]"", ""output"": ""Template_Type_Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_Type_Code
    table: Templates
  id: '#2'
  operation: Aggregate
  output: Template_Type_Code , countstar AS Count_Star
  predicate: GroupBy [ Template_Type_Code ]
id: '#3'
operation: Filter
output: Template_Type_Code
predicate: Predicate [ Count_Star < 3 ]
"
80efc9528d926cc2970eaa5a22f5f4d008fa1a94b6050d71ae100ab15bca8ef7,"Filter Predicate [ Count_Star < 3 ] Output [ Template_Type_Code ]
  In: Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star < 3 ]"", ""output"": ""Template_Type_Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_Type_Code
    table: Templates
  id: '#2'
  operation: Aggregate
  output: Template_Type_Code , countstar AS Count_Star
  predicate: GroupBy [ Template_Type_Code ]
id: '#3'
operation: Filter
output: Template_Type_Code
predicate: Predicate [ Count_Star < 3 ]
"
035659c5c5e07d718124ae4a3b4635423b78d35990d7ce6a1447c312966c2d8d,"Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , MIN(Version_Number) AS Min_Version_Number ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code , Version_Number ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , MIN(Version_Number) AS Min_Version_Number"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Version_Number""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Version_Number
  table: Templates
id: '#2'
operation: Aggregate
output: Template_Type_Code , MIN(Version_Number) AS Min_Version_Number
predicate: GroupBy [ Template_Type_Code ]
"
cce310591b81b5c42d2388e7d5f7462d4d15db56b4ec47479ff05f4b43ad2cfa,"Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , MIN(Version_Number) AS Min_Version_Number ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code , Version_Number ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , MIN(Version_Number) AS Min_Version_Number"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Version_Number""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Version_Number
  table: Templates
id: '#2'
operation: Aggregate
output: Template_Type_Code , MIN(Version_Number) AS Min_Version_Number
predicate: GroupBy [ Template_Type_Code ]
"
24951b727022323b841fa4837a8f3c39e5b669a8458b03cfc4f009b4d71d98b1,"Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
  In: Scan Table [ Documents ] Predicate [ Document_Name = 'Data base' ] Output [ Document_Name , Template_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Data base' ]"", ""output"": ""Document_Name , Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_Name , Template_ID
  predicate: Predicate [ Document_Name = 'Data base' ]
  table: Documents
- id: '#2'
  operation: Scan Table
  output: Template_Type_Code , Template_ID
  table: Templates
id: '#3'
operation: Join
output: '#2.Template_Type_Code'
predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
"
7d4d00e09ba1ba6a1e7656c6ce0d5484581e271467b204aa8afa2c37ac010302,"Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
  In: Scan Table [ Documents ] Predicate [ Document_Name = 'Data base' ] Output [ Document_Name , Template_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Data base' ]"", ""output"": ""Document_Name , Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_Name , Template_ID
  predicate: Predicate [ Document_Name = 'Data base' ]
  table: Documents
- id: '#2'
  operation: Scan Table
  output: Template_Type_Code , Template_ID
  table: Templates
id: '#3'
operation: Join
output: '#2.Template_Type_Code'
predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
"
aa8f4dc719d2148591f8ac649686e938d8fca15a61e0473dba4cde677c04eb35,"Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Document_Name ]
  In: Scan Table [ Documents ] Output [ Document_Name , Template_ID ]
  In: Scan Table [ Templates ] Predicate [ Template_Type_Code = 'BK' ] Output [ Template_Type_Code , Template_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Document_Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'BK' ]"", ""output"": ""Template_Type_Code , Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Template_ID
  predicate: Predicate [ Template_Type_Code = 'BK' ]
  table: Templates
- id: '#2'
  operation: Scan Table
  output: Document_Name , Template_ID
  table: Documents
id: '#3'
operation: Join
output: '#2.Document_Name'
predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
"
298d870bec392fa19b20b8832552e950629a8a216a48964ca01db204efba7167,"Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Document_Name ]
  In: Scan Table [ Documents ] Output [ Document_Name , Template_ID ]
  In: Scan Table [ Templates ] Predicate [ Template_Type_Code = 'BK' ] Output [ Template_Type_Code , Template_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Document_Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Predicate [ Template_Type_Code = 'BK' ]"", ""output"": ""Template_Type_Code , Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Template_ID
  predicate: Predicate [ Template_Type_Code = 'BK' ]
  table: Templates
- id: '#2'
  operation: Scan Table
  output: Document_Name , Template_ID
  table: Documents
id: '#3'
operation: Join
output: '#2.Document_Name'
predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
"
ba9ec7f64a81c18e5612e3c60bd1335237118276d50004d9341e44428f26a6b6,"Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_ID
    table: Documents
  - id: '#2'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#3'
  operation: Join
  output: '#2.Template_Type_Code'
  predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
id: '#4'
operation: Aggregate
output: Template_Type_Code , countstar AS Count_Star
predicate: GroupBy [ Template_Type_Code ]
"
021957d7439054583c88614742c82045301c5c4676dc72aef66e2b98ed986b63,"Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Template_ID
    table: Documents
  - id: '#2'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#3'
  operation: Join
  output: '#2.Template_Type_Code'
  predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
id: '#4'
operation: Aggregate
output: Template_Type_Code , countstar AS Count_Star
predicate: GroupBy [ Template_Type_Code ]
"
4ef7c7e7cdfb5f345e3af0a619b2fb55d98588777a38c541dd047cdcc5f39cde,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Template_Type_Code , Count_Star ]
  In: Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
    In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
      In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
      In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Template_Type_Code , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Template_ID
      table: Documents
    - id: '#2'
      operation: Scan Table
      output: Template_Type_Code , Template_ID
      table: Templates
    id: '#3'
    operation: Join
    output: '#2.Template_Type_Code'
    predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
  id: '#4'
  operation: Aggregate
  output: Template_Type_Code , countstar AS Count_Star
  predicate: GroupBy [ Template_Type_Code ]
id: '#5'
operation: TopSort
output: Template_Type_Code , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
847022cb66cc94760f125822895688d689431d8dd110319a78dea3ac54d8e390,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Template_Type_Code , Count_Star ]
  In: Aggregate GroupBy [ Template_Type_Code ] Output [ Template_Type_Code , countstar AS Count_Star ]
    In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
      In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
      In: Scan Table [ Documents ] Output [ Template_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Template_Type_Code , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Template_Type_Code ]"", ""output"": ""Template_Type_Code , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_ID = #2.Template_ID ]"", ""output"": ""#2.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Template_ID
      table: Documents
    - id: '#2'
      operation: Scan Table
      output: Template_Type_Code , Template_ID
      table: Templates
    id: '#3'
    operation: Join
    output: '#2.Template_Type_Code'
    predicate: 'Predicate [ #1.Template_ID = #2.Template_ID ]'
  id: '#4'
  operation: Aggregate
  output: Template_Type_Code , countstar AS Count_Star
  predicate: GroupBy [ Template_Type_Code ]
id: '#5'
operation: TopSort
output: Template_Type_Code , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
d22f2ff3f365ceb1b3d8479abfc5a1b892b0c5d4f31164f40f8a348e01319bb4,"Except Predicate [ B.Template_Type_Code = T.Template_Type_Code ] Output [ B.Template_Type_Code ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]
  In: Scan Table [ Templates ] Distinct [ true ] Output [ Template_Type_Code ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ]"", ""output"": ""#1.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Template_Type_Code""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Template_ID = #3.Template_ID ]"", ""output"": ""#3.Template_Type_Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code
  predicate: Distinct [ true ]
  table: Templates
- children:
  - id: '#2'
    operation: Scan Table
    output: Template_ID
    table: Documents
  - id: '#3'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#4'
  operation: Join
  output: '#3.Template_Type_Code'
  predicate: 'Predicate [ #2.Template_ID = #3.Template_ID ]'
id: '#5'
operation: Except
output: '#1.Template_Type_Code'
predicate: 'Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ]'
"
16c8b2f4d9463070faff9317b19b1c0ccb8c1c214ccc3d71f8e08fef7bb61dac,"Except Predicate [ B.Template_Type_Code = T.Template_Type_Code ] Output [ B.Template_Type_Code ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]
  In: Scan Table [ Templates ] Distinct [ true ] Output [ Template_Type_Code ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ]"", ""output"": ""#1.Template_Type_Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Template_Type_Code""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Template_ID = #3.Template_ID ]"", ""output"": ""#3.Template_Type_Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code
  predicate: Distinct [ true ]
  table: Templates
- children:
  - id: '#2'
    operation: Scan Table
    output: Template_ID
    table: Documents
  - id: '#3'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#4'
  operation: Join
  output: '#3.Template_Type_Code'
  predicate: 'Predicate [ #2.Template_ID = #3.Template_ID ]'
id: '#5'
operation: Except
output: '#1.Template_Type_Code'
predicate: 'Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ]'
"
a07879731338a04cef67baf9770bf287adb98fcd9c64d0ac6e36ecd3427e69ad,"Scan Table [ Ref_Template_Types ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""output"": ""Template_Type_Code , Template_Type_Description""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_Type_Description
table: Ref_Template_Types
"
293ca51746fc9d32a1dd66c427eca16fb5c854a5a331c121a91808f0c9fb49a7,"Scan Table [ Ref_Template_Types ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""output"": ""Template_Type_Code , Template_Type_Description""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_Type_Description
table: Ref_Template_Types
"
f8570300943103954805da5211d88f9110b2dfd81e138e50b0a6fa6285117742,"Scan Table [ Ref_Template_Types ] Predicate [ Template_Type_Code = 'AD' ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""predicate"": ""Predicate [ Template_Type_Code = 'AD' ]"", ""output"": ""Template_Type_Code , Template_Type_Description""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_Type_Description
predicate: Predicate [ Template_Type_Code = 'AD' ]
table: Ref_Template_Types
"
53552c392e22e333152e2693ed0474d4840881992fc15562e483b439b6782b5d,"Scan Table [ Ref_Template_Types ] Predicate [ Template_Type_Code = 'AD' ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""predicate"": ""Predicate [ Template_Type_Code = 'AD' ]"", ""output"": ""Template_Type_Code , Template_Type_Description""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_Type_Description
predicate: Predicate [ Template_Type_Code = 'AD' ]
table: Ref_Template_Types
"
f2835d4663242f441aa3f03c81b9ec20269ac042793a9eca922c9cca3f737d5a,"Scan Table [ Ref_Template_Types ] Predicate [ Template_Type_Description = 'Book' ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""predicate"": ""Predicate [ Template_Type_Description = 'Book' ]"", ""output"": ""Template_Type_Code , Template_Type_Description""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_Type_Description
predicate: Predicate [ Template_Type_Description = 'Book' ]
table: Ref_Template_Types
"
79080aff1d071f0394c8b61de5cf2fff5f294694291ca094959f8b8e56a97e01,"Scan Table [ Ref_Template_Types ] Predicate [ Template_Type_Description = 'Book' ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""predicate"": ""Predicate [ Template_Type_Description = 'Book' ]"", ""output"": ""Template_Type_Code , Template_Type_Description""}","id: '#1'
operation: Scan Table
output: Template_Type_Code , Template_Type_Description
predicate: Predicate [ Template_Type_Description = 'Book' ]
table: Ref_Template_Types
"
a5c6e42a1d24d3732f7b16dcde9891a5195f390875ae1f489359f2d7dccfb7a6,"Join Predicate [ B.Template_Type_Code = T.Template_Type_Code ] Distinct [ true ] Output [ B.Template_Type_Description ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]
  In: Scan Table [ Ref_Template_Types ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ] Distinct [ true ]"", ""output"": ""#1.Template_Type_Description"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""output"": ""Template_Type_Code , Template_Type_Description""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Template_ID = #3.Template_ID ]"", ""output"": ""#3.Template_Type_Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Template_Type_Description
  table: Ref_Template_Types
- children:
  - id: '#2'
    operation: Scan Table
    output: Template_ID
    table: Documents
  - id: '#3'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#4'
  operation: Join
  output: '#3.Template_Type_Code'
  predicate: 'Predicate [ #2.Template_ID = #3.Template_ID ]'
id: '#5'
operation: Join
output: '#1.Template_Type_Description'
predicate: 'Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ] Distinct [
  true ]'
"
ae0670f297cf9b8c324a52dc99fc74755fa27bb442814673d6e095611d79886f,"Join Predicate [ B.Template_Type_Code = T.Template_Type_Code ] Distinct [ true ] Output [ B.Template_Type_Description ]
  In: Join Predicate [ B.Template_ID = T.Template_ID ] Output [ T.Template_Type_Code ]
    In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
    In: Scan Table [ Documents ] Output [ Template_ID ]
  In: Scan Table [ Ref_Template_Types ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ] Distinct [ true ]"", ""output"": ""#1.Template_Type_Description"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""output"": ""Template_Type_Code , Template_Type_Description""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Template_ID = #3.Template_ID ]"", ""output"": ""#3.Template_Type_Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Template_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Template_Type_Description
  table: Ref_Template_Types
- children:
  - id: '#2'
    operation: Scan Table
    output: Template_ID
    table: Documents
  - id: '#3'
    operation: Scan Table
    output: Template_Type_Code , Template_ID
    table: Templates
  id: '#4'
  operation: Join
  output: '#3.Template_Type_Code'
  predicate: 'Predicate [ #2.Template_ID = #3.Template_ID ]'
id: '#5'
operation: Join
output: '#1.Template_Type_Description'
predicate: 'Predicate [ #1.Template_Type_Code = #4.Template_Type_Code ] Distinct [
  true ]'
"
db21dc13f516c2d21d6b03dd40a463b7e9d28a54dd4951c763ef689c9ac77fb9,"Join Predicate [ B.Template_Type_Code = T.Template_Type_Code ] Output [ T.Template_ID ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
  In: Scan Table [ Ref_Template_Types ] Predicate [ Template_Type_Description = 'Presentation' ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_Type_Code = #2.Template_Type_Code ]"", ""output"": ""#2.Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""predicate"": ""Predicate [ Template_Type_Description = 'Presentation' ]"", ""output"": ""Template_Type_Code , Template_Type_Description""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Template_Type_Description
  predicate: Predicate [ Template_Type_Description = 'Presentation' ]
  table: Ref_Template_Types
- id: '#2'
  operation: Scan Table
  output: Template_Type_Code , Template_ID
  table: Templates
id: '#3'
operation: Join
output: '#2.Template_ID'
predicate: 'Predicate [ #1.Template_Type_Code = #2.Template_Type_Code ]'
"
a1c640433ac0aa6246e93a4cb6c53dd0dfd6ea14e7528d4c9080d31beb9bc5db,"Join Predicate [ B.Template_Type_Code = T.Template_Type_Code ] Output [ T.Template_ID ]
  In: Scan Table [ Templates ] Output [ Template_Type_Code , Template_ID ]
  In: Scan Table [ Ref_Template_Types ] Predicate [ Template_Type_Description = 'Presentation' ] Output [ Template_Type_Code , Template_Type_Description ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Template_Type_Code = #2.Template_Type_Code ]"", ""output"": ""#2.Template_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Ref_Template_Types"", ""predicate"": ""Predicate [ Template_Type_Description = 'Presentation' ]"", ""output"": ""Template_Type_Code , Template_Type_Description""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Templates"", ""output"": ""Template_Type_Code , Template_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Template_Type_Code , Template_Type_Description
  predicate: Predicate [ Template_Type_Description = 'Presentation' ]
  table: Ref_Template_Types
- id: '#2'
  operation: Scan Table
  output: Template_Type_Code , Template_ID
  table: Templates
id: '#3'
operation: Join
output: '#2.Template_ID'
predicate: 'Predicate [ #1.Template_Type_Code = #2.Template_Type_Code ]'
"
14759693b8e6ccb3b5373b3635e7c8d5e0763f8e3fd96765eeaf0cd318627e24,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Paragraphs ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Paragraphs
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
c68377e24e04a97ee2cb8d163fb6be38ae5e40a2f50c26dc500eeb8432ff76db,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Paragraphs ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Paragraphs
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
25606457dfeb99c81a178c71cf5dbdd5bc475297eaae4baba83c0b3f28a8b5d5,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Document_Name , B.Document_ID ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]
    In: Scan Table [ Documents ] Predicate [ Document_Name = 'Summer Show' ] Output [ Document_Name , Document_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#1.Document_Name , #1.Document_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Summer Show' ]"", ""output"": ""Document_Name , Document_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_Name , Document_ID
    predicate: Predicate [ Document_Name = 'Summer Show' ]
    table: Documents
  - id: '#2'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#3'
  operation: Join
  output: '#1.Document_Name , #1.Document_ID'
  predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
48d4d88081a41b0892197a3c9aa93eac81e0a2158d60ea3843a175b0f2b053c0,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Document_Name , B.Document_ID ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]
    In: Scan Table [ Documents ] Predicate [ Document_Name = 'Summer Show' ] Output [ Document_Name , Document_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#1.Document_Name , #1.Document_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Summer Show' ]"", ""output"": ""Document_Name , Document_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_Name , Document_ID
    predicate: Predicate [ Document_Name = 'Summer Show' ]
    table: Documents
  - id: '#2'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#3'
  operation: Join
  output: '#1.Document_Name , #1.Document_ID'
  predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
d2502ee559df2f596143a49e800b73f835360ae66c3ddae79b9c43c55315a820,"Scan Table [ Paragraphs ] Predicate [ Paragraph_Text like 'korea' ] Output [ Paragraph_Text , Other_Details ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""predicate"": ""Predicate [ Paragraph_Text like 'korea' ]"", ""output"": ""Paragraph_Text , Other_Details""}","id: '#1'
operation: Scan Table
output: Paragraph_Text , Other_Details
predicate: Predicate [ Paragraph_Text like 'korea' ]
table: Paragraphs
"
121311c3b8547bc02036a7ee997148efc6a18552e09213becf9d418b8b66bdec,"Scan Table [ Paragraphs ] Predicate [ Paragraph_Text like 'korea' ] Output [ Paragraph_Text , Other_Details ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""predicate"": ""Predicate [ Paragraph_Text like 'korea' ]"", ""output"": ""Paragraph_Text , Other_Details""}","id: '#1'
operation: Scan Table
output: Paragraph_Text , Other_Details
predicate: Predicate [ Paragraph_Text like 'korea' ]
table: Paragraphs
"
5c853eed095b6baf4df9f2f0070d754fac01d936f3136ee93d9295666ec32afc,"Join Predicate [ B.Document_ID = T.Document_ID ] Output [ T.Paragraph_ID , T.Paragraph_Text ]
  In: Scan Table [ Paragraphs ] Output [ Document_ID , Paragraph_Text , Paragraph_ID ]
  In: Scan Table [ Documents ] Predicate [ Document_Name = 'Welcome to NY' ] Output [ Document_Name , Document_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#2.Paragraph_ID , #2.Paragraph_Text"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Welcome to NY' ]"", ""output"": ""Document_Name , Document_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID , Paragraph_Text , Paragraph_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_Name , Document_ID
  predicate: Predicate [ Document_Name = 'Welcome to NY' ]
  table: Documents
- id: '#2'
  operation: Scan Table
  output: Document_ID , Paragraph_Text , Paragraph_ID
  table: Paragraphs
id: '#3'
operation: Join
output: '#2.Paragraph_ID , #2.Paragraph_Text'
predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
"
3d3eca8148eb50a89b259e7e52852f0bc74562a78e97347bc1fabc4ccd9f2592,"Join Predicate [ B.Document_ID = T.Document_ID ] Output [ T.Paragraph_ID , T.Paragraph_Text ]
  In: Scan Table [ Paragraphs ] Output [ Document_ID , Paragraph_Text , Paragraph_ID ]
  In: Scan Table [ Documents ] Predicate [ Document_Name = 'Welcome to NY' ] Output [ Document_Name , Document_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#2.Paragraph_ID , #2.Paragraph_Text"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Welcome to NY' ]"", ""output"": ""Document_Name , Document_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID , Paragraph_Text , Paragraph_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_Name , Document_ID
  predicate: Predicate [ Document_Name = 'Welcome to NY' ]
  table: Documents
- id: '#2'
  operation: Scan Table
  output: Document_ID , Paragraph_Text , Paragraph_ID
  table: Paragraphs
id: '#3'
operation: Join
output: '#2.Paragraph_ID , #2.Paragraph_Text'
predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
"
7b011cefaa29c94bcd921f109c6aba92f00feeee515a5c416047c8829261c99a,"Join Predicate [ B.Document_ID = T.Document_ID ] Output [ T.Paragraph_Text ]
  In: Scan Table [ Paragraphs ] Output [ Document_ID , Paragraph_Text ]
  In: Scan Table [ Documents ] Predicate [ Document_Name = 'Customer reviews' ] Output [ Document_Name , Document_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#2.Paragraph_Text"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Customer reviews' ]"", ""output"": ""Document_Name , Document_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID , Paragraph_Text""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_Name , Document_ID
  predicate: Predicate [ Document_Name = 'Customer reviews' ]
  table: Documents
- id: '#2'
  operation: Scan Table
  output: Document_ID , Paragraph_Text
  table: Paragraphs
id: '#3'
operation: Join
output: '#2.Paragraph_Text'
predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
"
7d29cad1b4024d12284567661ef0e6588258cde70692d06347b87dcde5d31d9b,"Join Predicate [ B.Document_ID = T.Document_ID ] Output [ T.Paragraph_Text ]
  In: Scan Table [ Paragraphs ] Output [ Document_ID , Paragraph_Text ]
  In: Scan Table [ Documents ] Predicate [ Document_Name = 'Customer reviews' ] Output [ Document_Name , Document_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#2.Paragraph_Text"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""predicate"": ""Predicate [ Document_Name = 'Customer reviews' ]"", ""output"": ""Document_Name , Document_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID , Paragraph_Text""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_Name , Document_ID
  predicate: Predicate [ Document_Name = 'Customer reviews' ]
  table: Documents
- id: '#2'
  operation: Scan Table
  output: Document_ID , Paragraph_Text
  table: Paragraphs
id: '#3'
operation: Join
output: '#2.Paragraph_Text'
predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
"
a2cf4e35c9235fe7fe8b7f23cd46ecbf8798764d9afd5799468de4112f0a8b3d,"Sort OrderBy [ Document_ID ] Output [ Document_ID , Count_Star ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Document_ID ]"", ""output"": ""Document_ID , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: Sort
output: Document_ID , Count_Star
predicate: OrderBy [ Document_ID ]
"
8b9d043a303b43c1a782650d2ce723fe3dcd74a534ba49ee19d1b194d80acc7b,"Sort OrderBy [ Document_ID ] Output [ Document_ID , Count_Star ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Document_ID ]"", ""output"": ""Document_ID , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: Sort
output: Document_ID , Count_Star
predicate: OrderBy [ Document_ID ]
"
5ad21a316fc1e48c6d44ed5198b1070d3760ce48bfd31f752d8ed9e39bd2f980,"Join Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Count_Star , B.Document_ID , T.Document_Name ]
  In: Scan Table [ Documents ] Output [ Document_Name , Document_ID ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Document_ID = #3.Document_ID ]"", ""output"": ""#2.Count_Star , #2.Document_ID , #3.Document_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Document_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
- id: '#3'
  operation: Scan Table
  output: Document_Name , Document_ID
  table: Documents
id: '#4'
operation: Join
output: '#2.Count_Star , #2.Document_ID , #3.Document_Name'
predicate: 'Predicate [ #2.Document_ID = #3.Document_ID ]'
"
a7a22869d73d48865b3babbf4cd9a658bca2148ab089e5178ccbfef3547536fb,"Join Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Count_Star , B.Document_ID , T.Document_Name ]
  In: Scan Table [ Documents ] Output [ Document_Name , Document_ID ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Document_ID = #3.Document_ID ]"", ""output"": ""#2.Count_Star , #2.Document_ID , #3.Document_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Document_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
- id: '#3'
  operation: Scan Table
  output: Document_Name , Document_ID
  table: Documents
id: '#4'
operation: Join
output: '#2.Count_Star , #2.Document_ID , #3.Document_Name'
predicate: 'Predicate [ #2.Document_ID = #3.Document_ID ]'
"
00d2bfa30e9d1a0eeec54a5722b019f8d9c849abe3f18da1fd96dcc51e8ab2e6,"Filter Predicate [ Count_Star >= 2 ] Output [ Document_ID ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Document_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: Filter
output: Document_ID
predicate: Predicate [ Count_Star >= 2 ]
"
18b61f884d9b62c0631faab968c6bb3a753aafc3b726e3b5dbb62a9efe12b1b4,"Filter Predicate [ Count_Star >= 2 ] Output [ Document_ID ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Document_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: Filter
output: Document_ID
predicate: Predicate [ Count_Star >= 2 ]
"
298a9f020337263ed5acf9bcfad40d6801fc573097ccc09cf57b97caf658b304,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Document_Name , Document_ID , Count_Star ]
  In: Join Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Count_Star , B.Document_ID , T.Document_Name ]
    In: Scan Table [ Documents ] Output [ Document_Name , Document_ID ]
    In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
      In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Document_Name , Document_ID , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Document_ID = #3.Document_ID ]"", ""output"": ""#2.Count_Star , #2.Document_ID , #3.Document_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Document_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Document_ID
      table: Paragraphs
    id: '#2'
    operation: Aggregate
    output: Document_ID , countstar AS Count_Star
    predicate: GroupBy [ Document_ID ]
  - id: '#3'
    operation: Scan Table
    output: Document_Name , Document_ID
    table: Documents
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #2.Document_ID , #3.Document_Name'
  predicate: 'Predicate [ #2.Document_ID = #3.Document_ID ]'
id: '#5'
operation: TopSort
output: Document_Name , Document_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
b3fbd3fffe1bdb198cce71e819e0cf49319e836a0ded36d695ce29110d2b43d3,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Document_Name , Document_ID , Count_Star ]
  In: Join Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Count_Star , B.Document_ID , T.Document_Name ]
    In: Scan Table [ Documents ] Output [ Document_Name , Document_ID ]
    In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
      In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Document_Name , Document_ID , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Document_ID = #3.Document_ID ]"", ""output"": ""#2.Count_Star , #2.Document_ID , #3.Document_Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Documents"", ""output"": ""Document_Name , Document_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Document_ID
      table: Paragraphs
    id: '#2'
    operation: Aggregate
    output: Document_ID , countstar AS Count_Star
    predicate: GroupBy [ Document_ID ]
  - id: '#3'
    operation: Scan Table
    output: Document_Name , Document_ID
    table: Documents
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #2.Document_ID , #3.Document_Name'
  predicate: 'Predicate [ #2.Document_ID = #3.Document_ID ]'
id: '#5'
operation: TopSort
output: Document_Name , Document_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
e4f3f3933094ccad96397a211a67ef8bd7f0009aa568a942929d5e84304ff8e5,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ Document_ID , Count_Star ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""Document_ID , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: TopSort
output: Document_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
8e3aad50097526966d284fe425eed6f8ffe01c3dca9060ccd62b3d3ff562e4b9,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ Document_ID , Count_Star ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""Document_ID , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: TopSort
output: Document_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
111b103537318355b92ca659ac7eb2d1145d8a72756a47d2355826c9c51c0998,"Filter Predicate [ Count_Star >= 1 AND Count_Star <= 2 ] Output [ Document_ID ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 1 AND Count_Star <= 2 ]"", ""output"": ""Document_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: Filter
output: Document_ID
predicate: Predicate [ Count_Star >= 1 AND Count_Star <= 2 ]
"
593b02f02ed6283fc7f6f920d4f2c675dd951433acf861995146b5c3a0e90968,"Filter Predicate [ Count_Star >= 1 AND Count_Star <= 2 ] Output [ Document_ID ]
  In: Aggregate GroupBy [ Document_ID ] Output [ Document_ID , countstar AS Count_Star ]
    In: Scan Table [ Paragraphs ] Output [ Document_ID ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 1 AND Count_Star <= 2 ]"", ""output"": ""Document_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Document_ID ]"", ""output"": ""Document_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""output"": ""Document_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Document_ID
    table: Paragraphs
  id: '#2'
  operation: Aggregate
  output: Document_ID , countstar AS Count_Star
  predicate: GroupBy [ Document_ID ]
id: '#3'
operation: Filter
output: Document_ID
predicate: Predicate [ Count_Star >= 1 AND Count_Star <= 2 ]
"
12d76df65c31c361eba089ea8e44faefd069c74214a2ba2d4a8b0f5dc7ed7e26,"Intersect Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Document_ID ]
  In: Scan Table [ Paragraphs ] Predicate [ Paragraph_Text = 'Ireland' ] Output [ Document_ID , Paragraph_Text ]
  In: Scan Table [ Paragraphs ] Predicate [ Paragraph_Text = 'Brazil' ] Distinct [ true ] Output [ Document_ID , Paragraph_Text ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#1.Document_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""predicate"": ""Predicate [ Paragraph_Text = 'Brazil' ] Distinct [ true ]"", ""output"": ""Document_ID , Paragraph_Text""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""predicate"": ""Predicate [ Paragraph_Text = 'Ireland' ]"", ""output"": ""Document_ID , Paragraph_Text""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_ID , Paragraph_Text
  predicate: Predicate [ Paragraph_Text = 'Brazil' ] Distinct [ true ]
  table: Paragraphs
- id: '#2'
  operation: Scan Table
  output: Document_ID , Paragraph_Text
  predicate: Predicate [ Paragraph_Text = 'Ireland' ]
  table: Paragraphs
id: '#3'
operation: Intersect
output: '#1.Document_ID'
predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
"
527a89df62df5b27b7fecaaec5caaac757cd54ef07aacbae2576450a55d385b0,"Intersect Predicate [ B.Document_ID = T.Document_ID ] Output [ B.Document_ID ]
  In: Scan Table [ Paragraphs ] Predicate [ Paragraph_Text = 'Ireland' ] Output [ Document_ID , Paragraph_Text ]
  In: Scan Table [ Paragraphs ] Predicate [ Paragraph_Text = 'Brazil' ] Distinct [ true ] Output [ Document_ID , Paragraph_Text ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Document_ID = #2.Document_ID ]"", ""output"": ""#1.Document_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""predicate"": ""Predicate [ Paragraph_Text = 'Brazil' ] Distinct [ true ]"", ""output"": ""Document_ID , Paragraph_Text""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Paragraphs"", ""predicate"": ""Predicate [ Paragraph_Text = 'Ireland' ]"", ""output"": ""Document_ID , Paragraph_Text""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Document_ID , Paragraph_Text
  predicate: Predicate [ Paragraph_Text = 'Brazil' ] Distinct [ true ]
  table: Paragraphs
- id: '#2'
  operation: Scan Table
  output: Document_ID , Paragraph_Text
  predicate: Predicate [ Paragraph_Text = 'Ireland' ]
  table: Paragraphs
id: '#3'
operation: Intersect
output: '#1.Document_ID'
predicate: 'Predicate [ #1.Document_ID = #2.Document_ID ]'
"
7bcee666dc61c24ef33d8f9dc8c2ce0f1d9fcc88e028a8ae269ea5507f2555d6,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ teacher ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: teacher
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
623537054e505047ae01d4aa98e12d75a8df926e1d7b3f51b1846adcd1990150,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ teacher ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: teacher
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
c14783a0953c100a8cdf5562d085bafac95385ffda14252282e3a01b1d41244d,"Sort OrderBy [ Age ASC ] Output [ Name , Age ]
  In: Scan Table [ teacher ] Output [ Name , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age ASC ]"", ""output"": ""Name , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Age
  table: teacher
id: '#2'
operation: Sort
output: Name , Age
predicate: OrderBy [ Age ASC ]
"
58cef4c0076830335440dd933356d6eec64df763d1e4b8b8da20e69b4b7fb390,"Sort OrderBy [ Age ASC ] Output [ Name , Age ]
  In: Scan Table [ teacher ] Output [ Name , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age ASC ]"", ""output"": ""Name , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Age
  table: teacher
id: '#2'
operation: Sort
output: Name , Age
predicate: OrderBy [ Age ASC ]
"
58b54f5a3d2293d6e55a40e44757181a2c3aed9fb41e5bb4961202045ca48c6e,"Scan Table [ teacher ] Output [ Age , Hometown ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Age , Hometown""}","id: '#1'
operation: Scan Table
output: Age , Hometown
table: teacher
"
5fd9ccaae0c96c0dbd181367f13e8533d804eda56bffe6c9cf52d2aa5bf2997c,"Scan Table [ teacher ] Output [ Age , Hometown ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Age , Hometown""}","id: '#1'
operation: Scan Table
output: Age , Hometown
table: teacher
"
68a7c7be81a8bd9b48f9750cfc34bfa65110ac9eacce30055ad944d8300f8166,"Scan Table [ teacher ] Predicate [ Hometown <> 'little lever urban district' ] Output [ Name , Hometown ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""predicate"": ""Predicate [ Hometown <> 'little lever urban district' ]"", ""output"": ""Name , Hometown""}","id: '#1'
operation: Scan Table
output: Name , Hometown
predicate: Predicate [ Hometown <> 'little lever urban district' ]
table: teacher
"
0af2de205b31198e6eca3d7b0b73802ad3764080025941cb66a392eda65a9e13,"Scan Table [ teacher ] Predicate [ Hometown <> 'little lever urban district' ] Output [ Name , Hometown ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""predicate"": ""Predicate [ Hometown <> 'little lever urban district' ]"", ""output"": ""Name , Hometown""}","id: '#1'
operation: Scan Table
output: Name , Hometown
predicate: Predicate [ Hometown <> 'little lever urban district' ]
table: teacher
"
874d7f27668df1183762770b3c6571180db780700251069053ba4401174165ef,"Scan Table [ teacher ] Predicate [ Age = 32 OR Age = 33 ] Output [ Name , Age ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""predicate"": ""Predicate [ Age = 32 OR Age = 33 ]"", ""output"": ""Name , Age""}","id: '#1'
operation: Scan Table
output: Name , Age
predicate: Predicate [ Age = 32 OR Age = 33 ]
table: teacher
"
37c6344d0991afd89c9c159fc6a00dd71a4e656faeb14892c43cb3a1d63c0848,"Scan Table [ teacher ] Predicate [ Age = 32 OR Age = 33 ] Output [ Name , Age ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""predicate"": ""Predicate [ Age = 32 OR Age = 33 ]"", ""output"": ""Name , Age""}","id: '#1'
operation: Scan Table
output: Name , Age
predicate: Predicate [ Age = 32 OR Age = 33 ]
table: teacher
"
81ea1ebcc988a1d5cfb2f5eed7737cbd6d17b0cb15f16a9d08837af696997f07,"TopSort Rows [ 1 ] OrderBy [ Age ASC ] Output [ Age , Hometown ]
  In: Scan Table [ teacher ] Output [ Age , Hometown ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Age ASC ]"", ""output"": ""Age , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Age , Hometown""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Age , Hometown
  table: teacher
id: '#2'
operation: TopSort
output: Age , Hometown
predicate: Rows [ 1 ] OrderBy [ Age ASC ]
"
3a98eaad53fc81c47f32a49cd7ec2e73520ec75e0536d99059050386a10ee590,"TopSort Rows [ 1 ] OrderBy [ Age ASC ] Output [ Age , Hometown ]
  In: Scan Table [ teacher ] Output [ Age , Hometown ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Age ASC ]"", ""output"": ""Age , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Age , Hometown""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Age , Hometown
  table: teacher
id: '#2'
operation: TopSort
output: Age , Hometown
predicate: Rows [ 1 ] OrderBy [ Age ASC ]
"
603bc70182ffde705ac9eac27f319a5aba32804cf32d8fb791f32b264dd03922,"Aggregate GroupBy [ Hometown ] Output [ countstar AS Count_Star , Hometown ]
  In: Scan Table [ teacher ] Output [ Hometown ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Hometown ]"", ""output"": ""countstar AS Count_Star , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Hometown""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Hometown
  table: teacher
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Hometown
predicate: GroupBy [ Hometown ]
"
e2b8750d45f4e92cca02f5e87e2becaf9a4b4744049c22ccedd4cfd3a3d0dfd7,"Aggregate GroupBy [ Hometown ] Output [ countstar AS Count_Star , Hometown ]
  In: Scan Table [ teacher ] Output [ Hometown ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Hometown ]"", ""output"": ""countstar AS Count_Star , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Hometown""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Hometown
  table: teacher
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Hometown
predicate: GroupBy [ Hometown ]
"
6b47ad0390ba5a23811643ceb795c832310e9b535c05f9d935d83a9fe79d8f85,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Hometown ]
  In: Aggregate GroupBy [ Hometown ] Output [ countstar AS Count_Star , Hometown ]
    In: Scan Table [ teacher ] Output [ Hometown ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Hometown"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Hometown ]"", ""output"": ""countstar AS Count_Star , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Hometown""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Hometown
    table: teacher
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Hometown
  predicate: GroupBy [ Hometown ]
id: '#3'
operation: TopSort
output: Count_Star , Hometown
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
4611a9d09e6d3dd627d95b6c315e97d00104bed81aa905e8c242ca35c0671678,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Hometown ]
  In: Aggregate GroupBy [ Hometown ] Output [ countstar AS Count_Star , Hometown ]
    In: Scan Table [ teacher ] Output [ Hometown ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Hometown"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Hometown ]"", ""output"": ""countstar AS Count_Star , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Hometown""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Hometown
    table: teacher
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Hometown
  predicate: GroupBy [ Hometown ]
id: '#3'
operation: TopSort
output: Count_Star , Hometown
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
6b280b59c701284ea7d360487270d2cdccc7b55f90b65e9d7e7484f4be0a3e78,"Filter Predicate [ Count_Star >= 2 ] Output [ Hometown ]
  In: Aggregate GroupBy [ Hometown ] Output [ countstar AS Count_Star , Hometown ]
    In: Scan Table [ teacher ] Output [ Hometown ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Hometown"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Hometown ]"", ""output"": ""countstar AS Count_Star , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Hometown""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Hometown
    table: teacher
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Hometown
  predicate: GroupBy [ Hometown ]
id: '#3'
operation: Filter
output: Hometown
predicate: Predicate [ Count_Star >= 2 ]
"
0e79c74a5610e5c303a789fad6b46b6a88e4328a1f400bf558be69eaac43af46,"Filter Predicate [ Count_Star >= 2 ] Output [ Hometown ]
  In: Aggregate GroupBy [ Hometown ] Output [ countstar AS Count_Star , Hometown ]
    In: Scan Table [ teacher ] Output [ Hometown ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Hometown"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Hometown ]"", ""output"": ""countstar AS Count_Star , Hometown"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Hometown""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Hometown
    table: teacher
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Hometown
  predicate: GroupBy [ Hometown ]
id: '#3'
operation: Filter
output: Hometown
predicate: Predicate [ Count_Star >= 2 ]
"
8bdd139d26705091a90878940a67335d43bde42567b0dbcd021c9dd118a84d20,"Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name , B.Course ]
  In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
  In: Join Predicate [ B.Course_ID = T.Course_ID ] Output [ T.Course , B.Teacher_ID ]
    In: Scan Table [ course ] Output [ Course_ID , Course ]
    In: Scan Table [ course_arrange ] Output [ Course_ID , Teacher_ID ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Teacher_ID = #4.Teacher_ID ]"", ""output"": ""#4.Name , #3.Course"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Course_ID = #2.Course_ID ]"", ""output"": ""#2.Course , #1.Teacher_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Course_ID , Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course"", ""output"": ""Course_ID , Course""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Course_ID , Teacher_ID
    table: course_arrange
  - id: '#2'
    operation: Scan Table
    output: Course_ID , Course
    table: course
  id: '#3'
  operation: Join
  output: '#2.Course , #1.Teacher_ID'
  predicate: 'Predicate [ #1.Course_ID = #2.Course_ID ]'
- id: '#4'
  operation: Scan Table
  output: Name , Teacher_ID
  table: teacher
id: '#5'
operation: Join
output: '#4.Name , #3.Course'
predicate: 'Predicate [ #3.Teacher_ID = #4.Teacher_ID ]'
"
e39c8aa6302e480ebe544ab36de4875b9b45d00eee51f4cc97c46be201830fa9,"Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name , B.Course ]
  In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
  In: Join Predicate [ B.Course_ID = T.Course_ID ] Output [ T.Course , B.Teacher_ID ]
    In: Scan Table [ course ] Output [ Course_ID , Course ]
    In: Scan Table [ course_arrange ] Output [ Course_ID , Teacher_ID ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Teacher_ID = #4.Teacher_ID ]"", ""output"": ""#4.Name , #3.Course"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Course_ID = #2.Course_ID ]"", ""output"": ""#2.Course , #1.Teacher_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Course_ID , Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course"", ""output"": ""Course_ID , Course""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Course_ID , Teacher_ID
    table: course_arrange
  - id: '#2'
    operation: Scan Table
    output: Course_ID , Course
    table: course
  id: '#3'
  operation: Join
  output: '#2.Course , #1.Teacher_ID'
  predicate: 'Predicate [ #1.Course_ID = #2.Course_ID ]'
- id: '#4'
  operation: Scan Table
  output: Name , Teacher_ID
  table: teacher
id: '#5'
operation: Join
output: '#4.Name , #3.Course'
predicate: 'Predicate [ #3.Teacher_ID = #4.Teacher_ID ]'
"
9ae78bb93870f4f5e609eea4e7be9e17d17f90eedf2b3f5d801460325259aff7,"Sort OrderBy [ Name ASC ] Output [ Name , Course ]
  In: Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name , B.Course ]
    In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
    In: Join Predicate [ B.Course_ID = T.Course_ID ] Output [ T.Course , B.Teacher_ID ]
      In: Scan Table [ course ] Output [ Course_ID , Course ]
      In: Scan Table [ course_arrange ] Output [ Course_ID , Teacher_ID ]","{""id"": ""#6"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Name ASC ]"", ""output"": ""Name , Course"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Teacher_ID = #4.Teacher_ID ]"", ""output"": ""#4.Name , #3.Course"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Course_ID = #2.Course_ID ]"", ""output"": ""#2.Course , #1.Teacher_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Course_ID , Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course"", ""output"": ""Course_ID , Course""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Course_ID , Teacher_ID
      table: course_arrange
    - id: '#2'
      operation: Scan Table
      output: Course_ID , Course
      table: course
    id: '#3'
    operation: Join
    output: '#2.Course , #1.Teacher_ID'
    predicate: 'Predicate [ #1.Course_ID = #2.Course_ID ]'
  - id: '#4'
    operation: Scan Table
    output: Name , Teacher_ID
    table: teacher
  id: '#5'
  operation: Join
  output: '#4.Name , #3.Course'
  predicate: 'Predicate [ #3.Teacher_ID = #4.Teacher_ID ]'
id: '#6'
operation: Sort
output: Name , Course
predicate: OrderBy [ Name ASC ]
"
02c89bd982dfca591b480780bb255fb46d9d7c0a268f6bb76ecdce5f1f7f6bf2,"Sort OrderBy [ Name ASC ] Output [ Name , Course ]
  In: Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name , B.Course ]
    In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
    In: Join Predicate [ B.Course_ID = T.Course_ID ] Output [ T.Course , B.Teacher_ID ]
      In: Scan Table [ course ] Output [ Course_ID , Course ]
      In: Scan Table [ course_arrange ] Output [ Course_ID , Teacher_ID ]","{""id"": ""#6"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Name ASC ]"", ""output"": ""Name , Course"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Teacher_ID = #4.Teacher_ID ]"", ""output"": ""#4.Name , #3.Course"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Course_ID = #2.Course_ID ]"", ""output"": ""#2.Course , #1.Teacher_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Course_ID , Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course"", ""output"": ""Course_ID , Course""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Course_ID , Teacher_ID
      table: course_arrange
    - id: '#2'
      operation: Scan Table
      output: Course_ID , Course
      table: course
    id: '#3'
    operation: Join
    output: '#2.Course , #1.Teacher_ID'
    predicate: 'Predicate [ #1.Course_ID = #2.Course_ID ]'
  - id: '#4'
    operation: Scan Table
    output: Name , Teacher_ID
    table: teacher
  id: '#5'
  operation: Join
  output: '#4.Name , #3.Course'
  predicate: 'Predicate [ #3.Teacher_ID = #4.Teacher_ID ]'
id: '#6'
operation: Sort
output: Name , Course
predicate: OrderBy [ Name ASC ]
"
2e8baf9e453be42a11b71337dbfa3196ce81ab88196a3965e5d9eaef85ff4a28,"Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name ]
  In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
  In: Join Predicate [ B.Course_ID = T.Course_ID ] Output [ T.Teacher_ID ]
    In: Scan Table [ course_arrange ] Output [ Course_ID , Teacher_ID ]
    In: Scan Table [ course ] Predicate [ Course = 'Math' ] Output [ Course_ID , Course ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Teacher_ID = #4.Teacher_ID ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Course_ID = #2.Course_ID ]"", ""output"": ""#2.Teacher_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course"", ""predicate"": ""Predicate [ Course = 'Math' ]"", ""output"": ""Course_ID , Course""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Course_ID , Teacher_ID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Course_ID , Course
    predicate: Predicate [ Course = 'Math' ]
    table: course
  - id: '#2'
    operation: Scan Table
    output: Course_ID , Teacher_ID
    table: course_arrange
  id: '#3'
  operation: Join
  output: '#2.Teacher_ID'
  predicate: 'Predicate [ #1.Course_ID = #2.Course_ID ]'
- id: '#4'
  operation: Scan Table
  output: Name , Teacher_ID
  table: teacher
id: '#5'
operation: Join
output: '#4.Name'
predicate: 'Predicate [ #3.Teacher_ID = #4.Teacher_ID ]'
"
3bd79e8079339ca598e74c333c4128f10638b4de9de645b52185fcd23d3115a4,"Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name ]
  In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
  In: Join Predicate [ B.Course_ID = T.Course_ID ] Output [ T.Teacher_ID ]
    In: Scan Table [ course_arrange ] Output [ Course_ID , Teacher_ID ]
    In: Scan Table [ course ] Predicate [ Course = 'Math' ] Output [ Course_ID , Course ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Teacher_ID = #4.Teacher_ID ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Course_ID = #2.Course_ID ]"", ""output"": ""#2.Teacher_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course"", ""predicate"": ""Predicate [ Course = 'Math' ]"", ""output"": ""Course_ID , Course""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Course_ID , Teacher_ID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Course_ID , Course
    predicate: Predicate [ Course = 'Math' ]
    table: course
  - id: '#2'
    operation: Scan Table
    output: Course_ID , Teacher_ID
    table: course_arrange
  id: '#3'
  operation: Join
  output: '#2.Teacher_ID'
  predicate: 'Predicate [ #1.Course_ID = #2.Course_ID ]'
- id: '#4'
  operation: Scan Table
  output: Name , Teacher_ID
  table: teacher
id: '#5'
operation: Join
output: '#4.Name'
predicate: 'Predicate [ #3.Teacher_ID = #4.Teacher_ID ]'
"
6b56664c45bbe45ade08c28a7892035d10283d0f493698f906bdc3a78a9ca431,"Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
  In: Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name ]
    In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
    In: Scan Table [ course_arrange ] Output [ Teacher_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Teacher_ID = #2.Teacher_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Teacher_ID
    table: course_arrange
  - id: '#2'
    operation: Scan Table
    output: Name , Teacher_ID
    table: teacher
  id: '#3'
  operation: Join
  output: '#2.Name'
  predicate: 'Predicate [ #1.Teacher_ID = #2.Teacher_ID ]'
id: '#4'
operation: Aggregate
output: Name , countstar AS Count_Star
predicate: GroupBy [ Name ]
"
287c13b7cc426c370cd220879683109522739aad32877db06c470639a03a973a,"Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
  In: Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name ]
    In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
    In: Scan Table [ course_arrange ] Output [ Teacher_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Teacher_ID = #2.Teacher_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Teacher_ID
    table: course_arrange
  - id: '#2'
    operation: Scan Table
    output: Name , Teacher_ID
    table: teacher
  id: '#3'
  operation: Join
  output: '#2.Name'
  predicate: 'Predicate [ #1.Teacher_ID = #2.Teacher_ID ]'
id: '#4'
operation: Aggregate
output: Name , countstar AS Count_Star
predicate: GroupBy [ Name ]
"
5a00e81d064799fc71f61f7eddc83f1fcad00988da1b787b02501bb425797671,"Filter Predicate [ Count_Star >= 2 ] Output [ Name ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name ]
      In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
      In: Scan Table [ course_arrange ] Output [ Teacher_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Teacher_ID = #2.Teacher_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Teacher_ID
      table: course_arrange
    - id: '#2'
      operation: Scan Table
      output: Name , Teacher_ID
      table: teacher
    id: '#3'
    operation: Join
    output: '#2.Name'
    predicate: 'Predicate [ #1.Teacher_ID = #2.Teacher_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: Filter
output: Name
predicate: Predicate [ Count_Star >= 2 ]
"
402c83aa7e9857cd245b007d9858090ddba77f61656583eb61ff34afc92fa7b2,"Filter Predicate [ Count_Star >= 2 ] Output [ Name ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Teacher_ID = T.Teacher_ID ] Output [ T.Name ]
      In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]
      In: Scan Table [ course_arrange ] Output [ Teacher_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Teacher_ID = #2.Teacher_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Teacher_ID
      table: course_arrange
    - id: '#2'
      operation: Scan Table
      output: Name , Teacher_ID
      table: teacher
    id: '#3'
    operation: Join
    output: '#2.Name'
    predicate: 'Predicate [ #1.Teacher_ID = #2.Teacher_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: Filter
output: Name
predicate: Predicate [ Count_Star >= 2 ]
"
caa8cc9af95a5c1b20b0bf682fe3c0c874b0f7df744592b557c3a30bbd608e52,"Except Predicate [ T.Teacher_ID = B.Teacher_ID ] Output [ B.Name ]
  In: Scan Table [ course_arrange ] Output [ Teacher_ID ]
  In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Teacher_ID = #1.Teacher_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Teacher_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Teacher_ID
  table: teacher
- id: '#2'
  operation: Scan Table
  output: Teacher_ID
  table: course_arrange
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Teacher_ID = #1.Teacher_ID ]'
"
ef3355a7fe3ce05cbe2e30e7a414c19cd64cc838a7d6cdb2e91aaea1f1811886,"Except Predicate [ T.Teacher_ID = B.Teacher_ID ] Output [ B.Name ]
  In: Scan Table [ course_arrange ] Output [ Teacher_ID ]
  In: Scan Table [ teacher ] Output [ Name , Teacher_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Teacher_ID = #1.Teacher_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""teacher"", ""output"": ""Name , Teacher_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""course_arrange"", ""output"": ""Teacher_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Teacher_ID
  table: teacher
- id: '#2'
  operation: Scan Table
  output: Teacher_ID
  table: course_arrange
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Teacher_ID = #1.Teacher_ID ]'
"
ccf0a1234580e327589862c55c99a5568deaaa030d338a8f77d11c02036eab31,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ visitor ] Predicate [ Age < 30 ] Output [ Age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""predicate"": ""Predicate [ Age < 30 ]"", ""output"": ""Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Age
  predicate: Predicate [ Age < 30 ]
  table: visitor
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2b4311470404464d3aceb7aa1ee3fe0b8a84f764405a2eec8a7224e91344cc85,"Sort OrderBy [ Level_of_membership DESC ] Output [ Name , Level_of_membership ]
  In: Scan Table [ visitor ] Predicate [ Level_of_membership > 4 ] Output [ Name , Level_of_membership ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Level_of_membership DESC ]"", ""output"": ""Name , Level_of_membership"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""predicate"": ""Predicate [ Level_of_membership > 4 ]"", ""output"": ""Name , Level_of_membership""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Level_of_membership
  predicate: Predicate [ Level_of_membership > 4 ]
  table: visitor
id: '#2'
operation: Sort
output: Name , Level_of_membership
predicate: OrderBy [ Level_of_membership DESC ]
"
e55c321fe2277cb22a4cdb52e32820d830e29d08212b93e1f6ed54a5c0f64e43,"Aggregate Output [ AVG(Age) AS Avg_Age ]
  In: Scan Table [ visitor ] Predicate [ Level_of_membership <= 4 ] Output [ Level_of_membership , Age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Age) AS Avg_Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""predicate"": ""Predicate [ Level_of_membership <= 4 ]"", ""output"": ""Level_of_membership , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Level_of_membership , Age
  predicate: Predicate [ Level_of_membership <= 4 ]
  table: visitor
id: '#2'
operation: Aggregate
output: AVG(Age) AS Avg_Age
"
c3bc8027a1635183c2a5ab079b6bd0b8d12076ab770b908c0ea6bfc617303969,"Sort OrderBy [ Age DESC ] Output [ Name , Level_of_membership , Age ]
  In: Scan Table [ visitor ] Predicate [ Level_of_membership > 4 ] Output [ Name , Level_of_membership , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age DESC ]"", ""output"": ""Name , Level_of_membership , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""predicate"": ""Predicate [ Level_of_membership > 4 ]"", ""output"": ""Name , Level_of_membership , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Level_of_membership , Age
  predicate: Predicate [ Level_of_membership > 4 ]
  table: visitor
id: '#2'
operation: Sort
output: Name , Level_of_membership , Age
predicate: OrderBy [ Age DESC ]
"
60e9a83821454bd3ff7a90d11440f1e090c22d5ce2e40674a210dd1189f47522,"TopSort Rows [ 1 ] OrderBy [ Num_of_Staff DESC ] Output [ Name , Num_of_Staff , Museum_ID ]
  In: Scan Table [ museum ] Output [ Name , Num_of_Staff , Museum_ID ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Num_of_Staff DESC ]"", ""output"": ""Name , Num_of_Staff , Museum_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""output"": ""Name , Num_of_Staff , Museum_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Num_of_Staff , Museum_ID
  table: museum
id: '#2'
operation: TopSort
output: Name , Num_of_Staff , Museum_ID
predicate: Rows [ 1 ] OrderBy [ Num_of_Staff DESC ]
"
5c3c8a98e8d4b701ff4536883ed85090028f3f9d26cd21f026fd0d2664bc61c8,"Aggregate Output [ AVG(Num_of_Staff) AS Avg_Num_of_Staff ]
  In: Scan Table [ museum ] Predicate [ Open_Year < 2009 ] Output [ Num_of_Staff , Open_Year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Num_of_Staff) AS Avg_Num_of_Staff"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Open_Year < 2009 ]"", ""output"": ""Num_of_Staff , Open_Year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Num_of_Staff , Open_Year
  predicate: Predicate [ Open_Year < 2009 ]
  table: museum
id: '#2'
operation: Aggregate
output: AVG(Num_of_Staff) AS Avg_Num_of_Staff
"
de129d84d27db6a0fb572077f40706c07205c6e5de0feaa6dda6ccf452c57217,"Scan Table [ museum ] Predicate [ Name = 'Plaza Museum' ] Output [ Name , Num_of_Staff , Open_Year ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Name = 'Plaza Museum' ]"", ""output"": ""Name , Num_of_Staff , Open_Year""}","id: '#1'
operation: Scan Table
output: Name , Num_of_Staff , Open_Year
predicate: Predicate [ Name = 'Plaza Museum' ]
table: museum
"
179c60a2a7a0834d0afcd9c0c07b9051c8adb59bea2837c5aef588b199ee14dd,"Join Predicate [ T.Num_of_Staff > B.Min_Num_of_Staff ] Output [ T.Name ]
  In: Scan Table [ museum ] Output [ Name , Num_of_Staff ]
  In: Aggregate Output [ MIN(Num_of_Staff) AS Min_Num_of_Staff ]
    In: Scan Table [ museum ] Predicate [ Open_Year > 2010 ] Output [ Num_of_Staff , Open_Year ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Num_of_Staff > #2.Min_Num_of_Staff ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(Num_of_Staff) AS Min_Num_of_Staff"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Open_Year > 2010 ]"", ""output"": ""Num_of_Staff , Open_Year""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""output"": ""Name , Num_of_Staff""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Num_of_Staff , Open_Year
    predicate: Predicate [ Open_Year > 2010 ]
    table: museum
  id: '#2'
  operation: Aggregate
  output: MIN(Num_of_Staff) AS Min_Num_of_Staff
- id: '#3'
  operation: Scan Table
  output: Name , Num_of_Staff
  table: museum
id: '#4'
operation: Join
output: '#3.Name'
predicate: 'Predicate [ #3.Num_of_Staff > #2.Min_Num_of_Staff ]'
"
0a0317dc30dddb0490383d219a1b1f2002d1ff2a27e96ed69090c468a73e9bcb,"Filter Predicate [ Count_Star > 1 ] Output [ Name , ID , Age ]
  In: Join Predicate [ B.visitor_ID = T.ID ] Output [ T.Name , B.Count_Star , T.ID , T.Age ]
    In: Scan Table [ visitor ] Output [ Name , ID , Age ]
    In: Aggregate GroupBy [ visitor_ID ] Output [ visitor_ID , countstar AS Count_Star ]
      In: Scan Table [ visit ] Output [ visitor_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Name , ID , Age"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.visitor_ID = #3.ID ]"", ""output"": ""#3.Name , #2.Count_Star , #3.ID , #3.Age"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ visitor_ID ]"", ""output"": ""visitor_ID , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""output"": ""Name , ID , Age""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: visitor_ID
      table: visit
    id: '#2'
    operation: Aggregate
    output: visitor_ID , countstar AS Count_Star
    predicate: GroupBy [ visitor_ID ]
  - id: '#3'
    operation: Scan Table
    output: Name , ID , Age
    table: visitor
  id: '#4'
  operation: Join
  output: '#3.Name , #2.Count_Star , #3.ID , #3.Age'
  predicate: 'Predicate [ #2.visitor_ID = #3.ID ]'
id: '#5'
operation: Filter
output: Name , ID , Age
predicate: Predicate [ Count_Star > 1 ]
"
35123af8dc9b9ee62fb89c900e54cbc078224381186a88392dae10e50a7427b8,"TopSort Rows [ 1 ] OrderBy [ Sum_Total_spent DESC ] Output [ Name , Level_of_membership , visitor_ID , Sum_Total_spent ]
  In: Join Predicate [ B.visitor_ID = T.ID ] Output [ B.Sum_Total_spent , T.Name , B.visitor_ID , T.Level_of_membership ]
    In: Scan Table [ visitor ] Output [ Name , Level_of_membership , ID ]
    In: Aggregate GroupBy [ visitor_ID ] Output [ visitor_ID , SUM(Total_spent) AS Sum_Total_spent ]
      In: Scan Table [ visit ] Output [ visitor_ID , Total_spent ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Sum_Total_spent DESC ]"", ""output"": ""Name , Level_of_membership , visitor_ID , Sum_Total_spent"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.visitor_ID = #3.ID ]"", ""output"": ""#2.Sum_Total_spent , #3.Name , #2.visitor_ID , #3.Level_of_membership"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ visitor_ID ]"", ""output"": ""visitor_ID , SUM(Total_spent) AS Sum_Total_spent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID , Total_spent""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""output"": ""Name , Level_of_membership , ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: visitor_ID , Total_spent
      table: visit
    id: '#2'
    operation: Aggregate
    output: visitor_ID , SUM(Total_spent) AS Sum_Total_spent
    predicate: GroupBy [ visitor_ID ]
  - id: '#3'
    operation: Scan Table
    output: Name , Level_of_membership , ID
    table: visitor
  id: '#4'
  operation: Join
  output: '#2.Sum_Total_spent , #3.Name , #2.visitor_ID , #3.Level_of_membership'
  predicate: 'Predicate [ #2.visitor_ID = #3.ID ]'
id: '#5'
operation: TopSort
output: Name , Level_of_membership , visitor_ID , Sum_Total_spent
predicate: Rows [ 1 ] OrderBy [ Sum_Total_spent DESC ]
"
9904b062c563102b86314357314958e0648753b448df996620cdf9be065e0f0e,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Museum_ID , Count_Star ]
  In: Join Predicate [ B.Museum_ID = T.Museum_ID ] Output [ T.Name , B.Count_Star , B.Museum_ID ]
    In: Scan Table [ museum ] Output [ Name , Museum_ID ]
    In: Aggregate GroupBy [ Museum_ID ] Output [ countstar AS Count_Star , Museum_ID ]
      In: Scan Table [ visit ] Output [ Museum_ID ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Museum_ID , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Museum_ID = #3.Museum_ID ]"", ""output"": ""#3.Name , #2.Count_Star , #2.Museum_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Museum_ID ]"", ""output"": ""countstar AS Count_Star , Museum_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""Museum_ID""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""output"": ""Name , Museum_ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Museum_ID
      table: visit
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , Museum_ID
    predicate: GroupBy [ Museum_ID ]
  - id: '#3'
    operation: Scan Table
    output: Name , Museum_ID
    table: museum
  id: '#4'
  operation: Join
  output: '#3.Name , #2.Count_Star , #2.Museum_ID'
  predicate: 'Predicate [ #2.Museum_ID = #3.Museum_ID ]'
id: '#5'
operation: TopSort
output: Name , Museum_ID , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
8ae2a94a239d725b450e3f2319fccfc633f24c3e2b702c94b1e3933c301ff2ea,"Except Predicate [ T.Museum_ID = B.Museum_ID ] Output [ B.Name ]
  In: Aggregate GroupBy [ Museum_ID ] Output [ Museum_ID ]
    In: Scan Table [ visit ] Output [ Museum_ID ]
  In: Scan Table [ museum ] Output [ Name , Museum_ID ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.Museum_ID = #1.Museum_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""output"": ""Name , Museum_ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Museum_ID ]"", ""output"": ""Museum_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""Museum_ID""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Museum_ID
  table: museum
- children:
  - id: '#2'
    operation: Scan Table
    output: Museum_ID
    table: visit
  id: '#3'
  operation: Aggregate
  output: Museum_ID
  predicate: GroupBy [ Museum_ID ]
id: '#4'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #3.Museum_ID = #1.Museum_ID ]'
"
f00fb87bd37e2b2945ed497ba5ea69eac0f7d33f744a55657896bdbfc31dd036,"TopSort Rows [ 1 ] OrderBy [ Num_of_Ticket DESC ] Output [ Name , Num_of_Ticket , Age ]
  In: Join Predicate [ B.visitor_ID = T.ID ] Output [ T.Age , T.Name , B.Num_of_Ticket ]
    In: Scan Table [ visitor ] Output [ Name , ID , Age ]
    In: Scan Table [ visit ] Output [ visitor_ID , Num_of_Ticket ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Num_of_Ticket DESC ]"", ""output"": ""Name , Num_of_Ticket , Age"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.visitor_ID = #2.ID ]"", ""output"": ""#2.Age , #2.Name , #1.Num_of_Ticket"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID , Num_of_Ticket""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""output"": ""Name , ID , Age""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: visitor_ID , Num_of_Ticket
    table: visit
  - id: '#2'
    operation: Scan Table
    output: Name , ID , Age
    table: visitor
  id: '#3'
  operation: Join
  output: '#2.Age , #2.Name , #1.Num_of_Ticket'
  predicate: 'Predicate [ #1.visitor_ID = #2.ID ]'
id: '#4'
operation: TopSort
output: Name , Num_of_Ticket , Age
predicate: Rows [ 1 ] OrderBy [ Num_of_Ticket DESC ]
"
50a9673efed62eae22b4c202df67633cef3c1493a63dcfa415e75c65c29580f2,"Aggregate Output [ MAX(Num_of_Ticket) AS Max_Num_of_Ticket , AVG(Num_of_Ticket) AS Avg_Num_of_Ticket ]
  In: Scan Table [ visit ] Output [ Num_of_Ticket ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Num_of_Ticket) AS Max_Num_of_Ticket , AVG(Num_of_Ticket) AS Avg_Num_of_Ticket"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""Num_of_Ticket""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Num_of_Ticket
  table: visit
id: '#2'
operation: Aggregate
output: MAX(Num_of_Ticket) AS Max_Num_of_Ticket , AVG(Num_of_Ticket) AS Avg_Num_of_Ticket
"
61bb655bcee5c11242e7ae7ad2bb18245dcaaad4ade6d8d621789af648b98cd6,"Aggregate Output [ SUM(Total_spent) AS Sum_Total_spent ]
  In: Join Predicate [ B.ID = T.visitor_ID ] Output [ T.Total_spent ]
    In: Scan Table [ visit ] Output [ visitor_ID , Total_spent ]
    In: Scan Table [ visitor ] Predicate [ Level_of_membership = 1 ] Output [ Level_of_membership , ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""SUM(Total_spent) AS Sum_Total_spent"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.visitor_ID ]"", ""output"": ""#2.Total_spent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""predicate"": ""Predicate [ Level_of_membership = 1 ]"", ""output"": ""Level_of_membership , ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID , Total_spent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Level_of_membership , ID
    predicate: Predicate [ Level_of_membership = 1 ]
    table: visitor
  - id: '#2'
    operation: Scan Table
    output: visitor_ID , Total_spent
    table: visit
  id: '#3'
  operation: Join
  output: '#2.Total_spent'
  predicate: 'Predicate [ #1.ID = #2.visitor_ID ]'
id: '#4'
operation: Aggregate
output: SUM(Total_spent) AS Sum_Total_spent
"
524c108e3bf0acdbbb82209403f005db8b11506bdae75cbd4850a8235c714cf5,"Intersect Predicate [ B.Name = T.Name ] Output [ B.Name ]
  In: Join Predicate [ B.visitor_ID = T.ID ] Output [ T.Name ]
    In: Scan Table [ visitor ] Output [ Name , ID ]
    In: Join Predicate [ B.Museum_ID = T.Museum_ID ] Output [ T.visitor_ID ]
      In: Scan Table [ visit ] Output [ visitor_ID , Museum_ID ]
      In: Scan Table [ museum ] Predicate [ Open_Year > 2011 ] Output [ Open_Year , Museum_ID ]
  In: Join Predicate [ B.visitor_ID = T.ID ] Distinct [ true ] Output [ T.Name ]
    In: Scan Table [ visitor ] Output [ Name , ID ]
    In: Join Predicate [ B.Museum_ID = T.Museum_ID ] Output [ T.visitor_ID ]
      In: Scan Table [ visit ] Output [ visitor_ID , Museum_ID ]
      In: Scan Table [ museum ] Predicate [ Open_Year < 2009 ] Output [ Open_Year , Museum_ID ]","{""id"": ""#11"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.Name = #10.Name ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.visitor_ID = #4.ID ] Distinct [ true ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Museum_ID = #2.Museum_ID ]"", ""output"": ""#2.visitor_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Open_Year < 2009 ]"", ""output"": ""Open_Year , Museum_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID , Museum_ID""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""output"": ""Name , ID""}]}, {""id"": ""#10"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #8.visitor_ID = #9.ID ]"", ""output"": ""#9.Name"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Museum_ID = #7.Museum_ID ]"", ""output"": ""#7.visitor_ID"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Open_Year > 2011 ]"", ""output"": ""Open_Year , Museum_ID""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID , Museum_ID""}]}, {""id"": ""#9"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""output"": ""Name , ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Open_Year , Museum_ID
      predicate: Predicate [ Open_Year < 2009 ]
      table: museum
    - id: '#2'
      operation: Scan Table
      output: visitor_ID , Museum_ID
      table: visit
    id: '#3'
    operation: Join
    output: '#2.visitor_ID'
    predicate: 'Predicate [ #1.Museum_ID = #2.Museum_ID ]'
  - id: '#4'
    operation: Scan Table
    output: Name , ID
    table: visitor
  id: '#5'
  operation: Join
  output: '#4.Name'
  predicate: 'Predicate [ #3.visitor_ID = #4.ID ] Distinct [ true ]'
- children:
  - children:
    - id: '#6'
      operation: Scan Table
      output: Open_Year , Museum_ID
      predicate: Predicate [ Open_Year > 2011 ]
      table: museum
    - id: '#7'
      operation: Scan Table
      output: visitor_ID , Museum_ID
      table: visit
    id: '#8'
    operation: Join
    output: '#7.visitor_ID'
    predicate: 'Predicate [ #6.Museum_ID = #7.Museum_ID ]'
  - id: '#9'
    operation: Scan Table
    output: Name , ID
    table: visitor
  id: '#10'
  operation: Join
  output: '#9.Name'
  predicate: 'Predicate [ #8.visitor_ID = #9.ID ]'
id: '#11'
operation: Intersect
output: '#5.Name'
predicate: 'Predicate [ #5.Name = #10.Name ]'
"
ae181dcca46228f38a78aa5acf558f35f920c5e4bdb8b56ce47a9945cfb18458,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ T.visitor_ID = B.ID ] Output [ 1 AS One ]
    In: Join Predicate [ B.Museum_ID = T.Museum_ID ] Output [ T.visitor_ID ]
      In: Scan Table [ visit ] Output [ visitor_ID , Museum_ID ]
      In: Scan Table [ museum ] Predicate [ Open_Year > 2010 ] Output [ Open_Year , Museum_ID ]
    In: Scan Table [ visitor ] Output [ ID ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #4.visitor_ID = #1.ID ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""visitor"", ""output"": ""ID""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Museum_ID = #3.Museum_ID ]"", ""output"": ""#3.visitor_ID"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Open_Year > 2010 ]"", ""output"": ""Open_Year , Museum_ID""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""visit"", ""output"": ""visitor_ID , Museum_ID""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID
    table: visitor
  - children:
    - id: '#2'
      operation: Scan Table
      output: Open_Year , Museum_ID
      predicate: Predicate [ Open_Year > 2010 ]
      table: museum
    - id: '#3'
      operation: Scan Table
      output: visitor_ID , Museum_ID
      table: visit
    id: '#4'
    operation: Join
    output: '#3.visitor_ID'
    predicate: 'Predicate [ #2.Museum_ID = #3.Museum_ID ]'
  id: '#5'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #4.visitor_ID = #1.ID ]'
id: '#6'
operation: Aggregate
output: countstar AS Count_Star
"
ea13f16bad44cab1f5519ae833248e98e84d09409acf52956eae0675e9cf159e,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ museum ] Predicate [ Open_Year > 2013 OR Open_Year < 2008 ] Output [ Open_Year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""museum"", ""predicate"": ""Predicate [ Open_Year > 2013 OR Open_Year < 2008 ]"", ""output"": ""Open_Year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Open_Year
  predicate: Predicate [ Open_Year > 2013 OR Open_Year < 2008 ]
  table: museum
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
4631e248fadb782ac6922779f4289d6c953b3c5d345b58dc7b86b67be4b17b1f,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ players ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: players
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b89f7b5db1f8857f0713223621e84ae4f40ed97b45e2b2ba79a26641c096d8ed,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ players ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: players
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
a138de21c6fb3c215e42c91746c2e9841522ae6a2bf1e80bde7978850e711477,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ matches ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: matches
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2d1ff3bdc9e4e167beb08971a10a8d8d149cc138b1bf5491f2dfdeb69f47e4d2,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ matches ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: matches
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
d612319015bf64e8590a72838cdd91e35aaaaaa0b6c436634cc43acf73848f15,"Scan Table [ players ] Predicate [ country_code = 'USA' ] Output [ first_name , birth_date , country_code ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""predicate"": ""Predicate [ country_code = 'USA' ]"", ""output"": ""first_name , birth_date , country_code""}","id: '#1'
operation: Scan Table
output: first_name , birth_date , country_code
predicate: Predicate [ country_code = 'USA' ]
table: players
"
c6eaf80201ad8d7f85db0df294c33fed7080cd547a81a9a164d9c2ef59b662e3,"Scan Table [ players ] Predicate [ country_code = 'USA' ] Output [ first_name , birth_date , country_code ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""predicate"": ""Predicate [ country_code = 'USA' ]"", ""output"": ""first_name , birth_date , country_code""}","id: '#1'
operation: Scan Table
output: first_name , birth_date , country_code
predicate: Predicate [ country_code = 'USA' ]
table: players
"
2ae1a5a8d079e1ddb3c830c69f555e616cc82ca7a5d386879eb5085591970c7c,"Aggregate Output [ AVG(winner_age) AS Avg_winner_age , AVG(loser_age) AS Avg_loser_age ]
  In: Scan Table [ matches ] Output [ winner_age , loser_age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(winner_age) AS Avg_winner_age , AVG(loser_age) AS Avg_loser_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_age , loser_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_age , loser_age
  table: matches
id: '#2'
operation: Aggregate
output: AVG(winner_age) AS Avg_winner_age , AVG(loser_age) AS Avg_loser_age
"
b3db64365a68c90a44de3089b599cbb27ffa0e6a1d83bc09344beac1c5cfaa6b,"Aggregate Output [ AVG(winner_age) AS Avg_winner_age , AVG(loser_age) AS Avg_loser_age ]
  In: Scan Table [ matches ] Output [ winner_age , loser_age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(winner_age) AS Avg_winner_age , AVG(loser_age) AS Avg_loser_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_age , loser_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_age , loser_age
  table: matches
id: '#2'
operation: Aggregate
output: AVG(winner_age) AS Avg_winner_age , AVG(loser_age) AS Avg_loser_age
"
139fe90e20205c170d6167b71f0e43f1bc29925a7d457c55605f62f830b59678,"Aggregate Output [ AVG(winner_rank) AS Avg_winner_rank ]
  In: Scan Table [ matches ] Output [ winner_rank ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(winner_rank) AS Avg_winner_rank"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_rank""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_rank
  table: matches
id: '#2'
operation: Aggregate
output: AVG(winner_rank) AS Avg_winner_rank
"
d6d0dc5db8b689d4c0ac7ea1f9baae2fc6d0363c22531ceab894610838fbd534,"Aggregate Output [ AVG(winner_rank) AS Avg_winner_rank ]
  In: Scan Table [ matches ] Output [ winner_rank ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(winner_rank) AS Avg_winner_rank"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_rank""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_rank
  table: matches
id: '#2'
operation: Aggregate
output: AVG(winner_rank) AS Avg_winner_rank
"
a64d6f482d2ebdc30710080c6687dabf2623b14791148768a43369e54265ec45,"Aggregate Output [ MIN(loser_rank) AS Min_loser_rank ]
  In: Scan Table [ matches ] Output [ loser_rank ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(loser_rank) AS Min_loser_rank"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""loser_rank""}]}","children:
- id: '#1'
  operation: Scan Table
  output: loser_rank
  table: matches
id: '#2'
operation: Aggregate
output: MIN(loser_rank) AS Min_loser_rank
"
a17adb01c205ee4acecf59e8282753026f4bcbfac86be64aba1ac37290f2415c,"Aggregate Output [ MIN(loser_rank) AS Min_loser_rank ]
  In: Scan Table [ matches ] Output [ loser_rank ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(loser_rank) AS Min_loser_rank"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""loser_rank""}]}","children:
- id: '#1'
  operation: Scan Table
  output: loser_rank
  table: matches
id: '#2'
operation: Aggregate
output: MIN(loser_rank) AS Min_loser_rank
"
8376e9086290a914bac06f17b3d831a833daedaa3449dbcbb5c6881a573673e1,"Aggregate Output [ COUNT(DISTINCT country_code) AS Count_Dist_country_code ]
  In: Scan Table [ players ] Distinct [ true ] Output [ country_code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT country_code) AS Count_Dist_country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""predicate"": ""Distinct [ true ]"", ""output"": ""country_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: country_code
  predicate: Distinct [ true ]
  table: players
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT country_code) AS Count_Dist_country_code
"
7d0952affa592f943383d85f82a3cdbae6b653e87a16d0198cd69070d06cd9ab,"Aggregate Output [ COUNT(DISTINCT country_code) AS Count_Dist_country_code ]
  In: Scan Table [ players ] Distinct [ true ] Output [ country_code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT country_code) AS Count_Dist_country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""predicate"": ""Distinct [ true ]"", ""output"": ""country_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: country_code
  predicate: Distinct [ true ]
  table: players
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT country_code) AS Count_Dist_country_code
"
456cfce7f4f9a1bf5059801519fd02ec3ef4b74df8dd9289c623633591d50cce,"Aggregate Output [ COUNT(DISTINCT loser_name) AS Count_Dist_loser_name ]
  In: Scan Table [ matches ] Distinct [ true ] Output [ loser_name ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT loser_name) AS Count_Dist_loser_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Distinct [ true ]"", ""output"": ""loser_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: loser_name
  predicate: Distinct [ true ]
  table: matches
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT loser_name) AS Count_Dist_loser_name
"
180b86428841fc7e75e3b1a8d8a95e2bf8b8b3b4b445be82d19fc0c34bf51e2f,"Aggregate Output [ COUNT(DISTINCT loser_name) AS Count_Dist_loser_name ]
  In: Scan Table [ matches ] Distinct [ true ] Output [ loser_name ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT loser_name) AS Count_Dist_loser_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Distinct [ true ]"", ""output"": ""loser_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: loser_name
  predicate: Distinct [ true ]
  table: matches
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT loser_name) AS Count_Dist_loser_name
"
f0a3396077268cb93b9b22bee78d31feaf8e636a88216d5d2f568ffd491ea915,"Filter Predicate [ Count_Star > 10 ] Output [ tourney_name ]
  In: Aggregate GroupBy [ tourney_name ] Output [ tourney_name , countstar AS Count_Star ]
    In: Scan Table [ matches ] Output [ tourney_name ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 10 ]"", ""output"": ""tourney_name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ tourney_name ]"", ""output"": ""tourney_name , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""tourney_name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: tourney_name
    table: matches
  id: '#2'
  operation: Aggregate
  output: tourney_name , countstar AS Count_Star
  predicate: GroupBy [ tourney_name ]
id: '#3'
operation: Filter
output: tourney_name
predicate: Predicate [ Count_Star > 10 ]
"
6c2fcf353449efb9231d6c798d779d0168d424c399c9c362f5a6da5654716338,"Filter Predicate [ Count_Star > 10 ] Output [ tourney_name ]
  In: Aggregate GroupBy [ tourney_name ] Output [ tourney_name , countstar AS Count_Star ]
    In: Scan Table [ matches ] Output [ tourney_name ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 10 ]"", ""output"": ""tourney_name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ tourney_name ]"", ""output"": ""tourney_name , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""tourney_name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: tourney_name
    table: matches
  id: '#2'
  operation: Aggregate
  output: tourney_name , countstar AS Count_Star
  predicate: GroupBy [ tourney_name ]
id: '#3'
operation: Filter
output: tourney_name
predicate: Predicate [ Count_Star > 10 ]
"
e173f111341c71e2a837c8c0f18342105c3339de0e08e545b831d9f159845ed3,"Intersect Predicate [ B.winner_name = T.winner_name ] Output [ B.winner_name ]
  In: Scan Table [ matches ] Predicate [ year = 2016 ] Output [ year , winner_name ]
  In: Scan Table [ matches ] Predicate [ year = 2013 ] Distinct [ true ] Output [ year , winner_name ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.winner_name = #2.winner_name ]"", ""output"": ""#1.winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ year = 2013 ] Distinct [ true ]"", ""output"": ""year , winner_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ year = 2016 ]"", ""output"": ""year , winner_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: year , winner_name
  predicate: Predicate [ year = 2013 ] Distinct [ true ]
  table: matches
- id: '#2'
  operation: Scan Table
  output: year , winner_name
  predicate: Predicate [ year = 2016 ]
  table: matches
id: '#3'
operation: Intersect
output: '#1.winner_name'
predicate: 'Predicate [ #1.winner_name = #2.winner_name ]'
"
ed32d95c06b758a201d5b6a501e55481c633acf085ca4187edd64f37741a20c1,"Intersect Predicate [ B.winner_name = T.winner_name ] Output [ B.winner_name ]
  In: Scan Table [ matches ] Predicate [ year = 2016 ] Output [ year , winner_name ]
  In: Scan Table [ matches ] Predicate [ year = 2013 ] Distinct [ true ] Output [ year , winner_name ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.winner_name = #2.winner_name ]"", ""output"": ""#1.winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ year = 2013 ] Distinct [ true ]"", ""output"": ""year , winner_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ year = 2016 ]"", ""output"": ""year , winner_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: year , winner_name
  predicate: Predicate [ year = 2013 ] Distinct [ true ]
  table: matches
- id: '#2'
  operation: Scan Table
  output: year , winner_name
  predicate: Predicate [ year = 2016 ]
  table: matches
id: '#3'
operation: Intersect
output: '#1.winner_name'
predicate: 'Predicate [ #1.winner_name = #2.winner_name ]'
"
560524f03cef0b0c2248599274a33d9621b0f01f721c71d46382408e6c0e6f56,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ matches ] Predicate [ year = 2013 OR year = 2016 ] Output [ year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ year = 2013 OR year = 2016 ]"", ""output"": ""year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: year
  predicate: Predicate [ year = 2013 OR year = 2016 ]
  table: matches
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
0e52fbec4158ca7c3cfba053e57807319098341d3583da7d1076f728ea86df2b,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ matches ] Predicate [ year = 2013 OR year = 2016 ] Output [ year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ year = 2013 OR year = 2016 ]"", ""output"": ""year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: year
  predicate: Predicate [ year = 2013 OR year = 2016 ]
  table: matches
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
4e761a9127f36296f20021c44a8cadca031a57c3bb317ef82e3f9b28cfc2fee5,"Intersect Predicate [ B.country_code = T.country_code ] Output [ B.first_name , B.country_code ]
  In: Join Predicate [ B.winner_id = T.player_id ] Output [ T.first_name , T.country_code ]
    In: Scan Table [ players ] Output [ first_name , player_id , country_code ]
    In: Scan Table [ matches ] Predicate [ tourney_name = 'Australian Open' ] Output [ tourney_name , winner_id ]
  In: Join Predicate [ B.winner_id = T.player_id ] Distinct [ true ] Output [ T.country_code , T.first_name ]
    In: Scan Table [ players ] Output [ first_name , player_id , country_code ]
    In: Scan Table [ matches ] Predicate [ tourney_name = 'WTA Championships' ] Output [ tourney_name , winner_id ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.country_code = #6.country_code ]"", ""output"": ""#3.first_name , #3.country_code"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.winner_id = #2.player_id ] Distinct [ true ]"", ""output"": ""#2.country_code , #2.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'WTA Championships' ]"", ""output"": ""tourney_name , winner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , country_code""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.winner_id = #5.player_id ]"", ""output"": ""#5.first_name , #5.country_code"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'Australian Open' ]"", ""output"": ""tourney_name , winner_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: tourney_name , winner_id
    predicate: Predicate [ tourney_name = 'WTA Championships' ]
    table: matches
  - id: '#2'
    operation: Scan Table
    output: first_name , player_id , country_code
    table: players
  id: '#3'
  operation: Join
  output: '#2.country_code , #2.first_name'
  predicate: 'Predicate [ #1.winner_id = #2.player_id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: tourney_name , winner_id
    predicate: Predicate [ tourney_name = 'Australian Open' ]
    table: matches
  - id: '#5'
    operation: Scan Table
    output: first_name , player_id , country_code
    table: players
  id: '#6'
  operation: Join
  output: '#5.first_name , #5.country_code'
  predicate: 'Predicate [ #4.winner_id = #5.player_id ]'
id: '#7'
operation: Intersect
output: '#3.first_name , #3.country_code'
predicate: 'Predicate [ #3.country_code = #6.country_code ]'
"
2a4a5e75c0774a24355f23685b6e1e35bf529fbe6c142f94efbf6a9f24a57f6d,"Intersect Predicate [ B.country_code = T.country_code ] Output [ B.first_name , B.country_code ]
  In: Join Predicate [ B.winner_id = T.player_id ] Output [ T.first_name , T.country_code ]
    In: Scan Table [ players ] Output [ first_name , player_id , country_code ]
    In: Scan Table [ matches ] Predicate [ tourney_name = 'Australian Open' ] Output [ tourney_name , winner_id ]
  In: Join Predicate [ B.winner_id = T.player_id ] Distinct [ true ] Output [ T.country_code , T.first_name ]
    In: Scan Table [ players ] Output [ first_name , player_id , country_code ]
    In: Scan Table [ matches ] Predicate [ tourney_name = 'WTA Championships' ] Output [ tourney_name , winner_id ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.country_code = #6.country_code ]"", ""output"": ""#3.first_name , #3.country_code"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.winner_id = #2.player_id ] Distinct [ true ]"", ""output"": ""#2.country_code , #2.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'WTA Championships' ]"", ""output"": ""tourney_name , winner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , country_code""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.winner_id = #5.player_id ]"", ""output"": ""#5.first_name , #5.country_code"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'Australian Open' ]"", ""output"": ""tourney_name , winner_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: tourney_name , winner_id
    predicate: Predicate [ tourney_name = 'WTA Championships' ]
    table: matches
  - id: '#2'
    operation: Scan Table
    output: first_name , player_id , country_code
    table: players
  id: '#3'
  operation: Join
  output: '#2.country_code , #2.first_name'
  predicate: 'Predicate [ #1.winner_id = #2.player_id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: tourney_name , winner_id
    predicate: Predicate [ tourney_name = 'Australian Open' ]
    table: matches
  - id: '#5'
    operation: Scan Table
    output: first_name , player_id , country_code
    table: players
  id: '#6'
  operation: Join
  output: '#5.first_name , #5.country_code'
  predicate: 'Predicate [ #4.winner_id = #5.player_id ]'
id: '#7'
operation: Intersect
output: '#3.first_name , #3.country_code'
predicate: 'Predicate [ #3.country_code = #6.country_code ]'
"
d48e7fe6972cb8e21a3c6394d53980bdf7e37fc28a78f91f9fb7230c24136dae,"TopSort Rows [ 1 ] OrderBy [ birth_date ASC ] Output [ first_name , birth_date , country_code ]
  In: Scan Table [ players ] Output [ first_name , birth_date , country_code ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ birth_date ASC ]"", ""output"": ""first_name , birth_date , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , birth_date , country_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: first_name , birth_date , country_code
  table: players
id: '#2'
operation: TopSort
output: first_name , birth_date , country_code
predicate: Rows [ 1 ] OrderBy [ birth_date ASC ]
"
baa9a1483242a0a237f97714d50d97a1b5a523b10b592594eae08f5e9e0280e6,"TopSort Rows [ 1 ] OrderBy [ birth_date ASC ] Output [ first_name , birth_date , country_code ]
  In: Scan Table [ players ] Output [ first_name , birth_date , country_code ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ birth_date ASC ]"", ""output"": ""first_name , birth_date , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , birth_date , country_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: first_name , birth_date , country_code
  table: players
id: '#2'
operation: TopSort
output: first_name , birth_date , country_code
predicate: Rows [ 1 ] OrderBy [ birth_date ASC ]
"
6e5a3955c039c7de8941e2b20560eb004bf6273531145bbe4f9433d229b66a37,"Sort OrderBy [ birth_date ASC ] Output [ first_name , last_name , birth_date ]
  In: Scan Table [ players ] Output [ first_name , last_name , birth_date ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ birth_date ASC ]"", ""output"": ""first_name , last_name , birth_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , last_name , birth_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: first_name , last_name , birth_date
  table: players
id: '#2'
operation: Sort
output: first_name , last_name , birth_date
predicate: OrderBy [ birth_date ASC ]
"
2cccadad4927cf8f0d910ca98ba5bd58effcdffa734554dc162d4da321a9f158,"Sort OrderBy [ birth_date ASC ] Output [ first_name , last_name , birth_date ]
  In: Scan Table [ players ] Output [ first_name , last_name , birth_date ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ birth_date ASC ]"", ""output"": ""first_name , last_name , birth_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , last_name , birth_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: first_name , last_name , birth_date
  table: players
id: '#2'
operation: Sort
output: first_name , last_name , birth_date
predicate: OrderBy [ birth_date ASC ]
"
da1dbbcc0a1c8a817f65ae6ee6fce3dabc45b38d66111fc4c7bee9adec5000cb,"Sort OrderBy [ birth_date ASC ] Output [ first_name , last_name , birth_date ]
  In: Scan Table [ players ] Predicate [ hand = 'L' ] Output [ hand , first_name , last_name , birth_date ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ birth_date ASC ]"", ""output"": ""first_name , last_name , birth_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""predicate"": ""Predicate [ hand = 'L' ]"", ""output"": ""hand , first_name , last_name , birth_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: hand , first_name , last_name , birth_date
  predicate: Predicate [ hand = 'L' ]
  table: players
id: '#2'
operation: Sort
output: first_name , last_name , birth_date
predicate: OrderBy [ birth_date ASC ]
"
295988b244a1dd78a84417dd6e2054e99798ab87f1f153e3cae281c302e1c32e,"Sort OrderBy [ birth_date ASC ] Output [ first_name , last_name , birth_date ]
  In: Scan Table [ players ] Predicate [ hand = 'L' ] Output [ hand , first_name , last_name , birth_date ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ birth_date ASC ]"", ""output"": ""first_name , last_name , birth_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""predicate"": ""Predicate [ hand = 'L' ]"", ""output"": ""hand , first_name , last_name , birth_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: hand , first_name , last_name , birth_date
  predicate: Predicate [ hand = 'L' ]
  table: players
id: '#2'
operation: Sort
output: first_name , last_name , birth_date
predicate: OrderBy [ birth_date ASC ]
"
8a97b1f2dce33f93402760747b78c771827c6f87f26cd8b79c78e074a69bf916,"TopSort Rows [ 1 ] OrderBy [ tours DESC ] Output [ tours , first_name , country_code ]
  In: Join Predicate [ B.player_id = T.player_id ] Output [ T.tours , B.country_code , B.first_name ]
    In: Scan Table [ rankings ] Output [ tours , player_id ]
    In: Scan Table [ players ] Output [ first_name , player_id , country_code ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ tours DESC ]"", ""output"": ""tours , first_name , country_code"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.player_id = #2.player_id ]"", ""output"": ""#2.tours , #1.country_code , #1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , country_code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""tours , player_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: first_name , player_id , country_code
    table: players
  - id: '#2'
    operation: Scan Table
    output: tours , player_id
    table: rankings
  id: '#3'
  operation: Join
  output: '#2.tours , #1.country_code , #1.first_name'
  predicate: 'Predicate [ #1.player_id = #2.player_id ]'
id: '#4'
operation: TopSort
output: tours , first_name , country_code
predicate: Rows [ 1 ] OrderBy [ tours DESC ]
"
108ae9411be5efb3b8c13a863ccd27c25db8bb6f388e077086e5a293dfcddf27,"TopSort Rows [ 1 ] OrderBy [ tours DESC ] Output [ tours , first_name , country_code ]
  In: Join Predicate [ B.player_id = T.player_id ] Output [ T.tours , B.country_code , B.first_name ]
    In: Scan Table [ rankings ] Output [ tours , player_id ]
    In: Scan Table [ players ] Output [ first_name , player_id , country_code ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ tours DESC ]"", ""output"": ""tours , first_name , country_code"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.player_id = #2.player_id ]"", ""output"": ""#2.tours , #1.country_code , #1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , country_code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""tours , player_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: first_name , player_id , country_code
    table: players
  - id: '#2'
    operation: Scan Table
    output: tours , player_id
    table: rankings
  id: '#3'
  operation: Join
  output: '#2.tours , #1.country_code , #1.first_name'
  predicate: 'Predicate [ #1.player_id = #2.player_id ]'
id: '#4'
operation: TopSort
output: tours , first_name , country_code
predicate: Rows [ 1 ] OrderBy [ tours DESC ]
"
72e0cde1414ecaa5cdc66b35b9cd074f48422ec83080c25ee226bf95fe4a35d4,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ year , Count_Star ]
  In: Aggregate GroupBy [ year ] Output [ countstar AS Count_Star , year ]
    In: Scan Table [ matches ] Output [ year ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""year , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ year ]"", ""output"": ""countstar AS Count_Star , year"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""year""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: year
    table: matches
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , year
  predicate: GroupBy [ year ]
id: '#3'
operation: TopSort
output: year , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
ea75910ba3afc10a0d59dae128d0c75acb7487d6b9222ffa99e6fdc28fa60845,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ year , Count_Star ]
  In: Aggregate GroupBy [ year ] Output [ countstar AS Count_Star , year ]
    In: Scan Table [ matches ] Output [ year ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""year , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ year ]"", ""output"": ""countstar AS Count_Star , year"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""year""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: year
    table: matches
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , year
  predicate: GroupBy [ year ]
id: '#3'
operation: TopSort
output: year , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
141841cbe0cbd647aee9c2aafc35639203dbf2df3604e6c80a0c387bb04ceae0,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ winner_rank_points , winner_name , Count_Star ]
  In: Aggregate GroupBy [ winner_rank_points , winner_name ] Output [ winner_rank_points , countstar AS Count_Star , winner_name ]
    In: Scan Table [ matches ] Output [ winner_rank_points , winner_name ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""winner_rank_points , winner_name , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ winner_rank_points , winner_name ]"", ""output"": ""winner_rank_points , countstar AS Count_Star , winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_rank_points , winner_name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: winner_rank_points , winner_name
    table: matches
  id: '#2'
  operation: Aggregate
  output: winner_rank_points , countstar AS Count_Star , winner_name
  predicate: GroupBy [ winner_rank_points , winner_name ]
id: '#3'
operation: TopSort
output: winner_rank_points , winner_name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
ee837d790c1052adcb9de495cfc9af05e217e5ad8839eeddf75d4cadfbd199fd,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ winner_rank_points , winner_name , Count_Star ]
  In: Aggregate GroupBy [ winner_rank_points , winner_name ] Output [ winner_rank_points , countstar AS Count_Star , winner_name ]
    In: Scan Table [ matches ] Output [ winner_rank_points , winner_name ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""winner_rank_points , winner_name , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ winner_rank_points , winner_name ]"", ""output"": ""winner_rank_points , countstar AS Count_Star , winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_rank_points , winner_name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: winner_rank_points , winner_name
    table: matches
  id: '#2'
  operation: Aggregate
  output: winner_rank_points , countstar AS Count_Star , winner_name
  predicate: GroupBy [ winner_rank_points , winner_name ]
id: '#3'
operation: TopSort
output: winner_rank_points , winner_name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
c501736c887bf86ce56b90e4db34439faacb5416059971b688fd5830afa86a07,"TopSort Rows [ 1 ] OrderBy [ winner_rank_points DESC ] Output [ winner_rank_points , winner_name ]
  In: Scan Table [ matches ] Predicate [ tourney_name = 'Australian Open' ] Output [ winner_rank_points , tourney_name , winner_name ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ winner_rank_points DESC ]"", ""output"": ""winner_rank_points , winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'Australian Open' ]"", ""output"": ""winner_rank_points , tourney_name , winner_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_rank_points , tourney_name , winner_name
  predicate: Predicate [ tourney_name = 'Australian Open' ]
  table: matches
id: '#2'
operation: TopSort
output: winner_rank_points , winner_name
predicate: Rows [ 1 ] OrderBy [ winner_rank_points DESC ]
"
d8dfc34cdbedc21a0d90ad298cde344397edb67285973cccaf4929b8f06682d8,"TopSort Rows [ 1 ] OrderBy [ winner_rank_points DESC ] Output [ winner_rank_points , winner_name ]
  In: Scan Table [ matches ] Predicate [ tourney_name = 'Australian Open' ] Output [ winner_rank_points , tourney_name , winner_name ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ winner_rank_points DESC ]"", ""output"": ""winner_rank_points , winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'Australian Open' ]"", ""output"": ""winner_rank_points , tourney_name , winner_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_rank_points , tourney_name , winner_name
  predicate: Predicate [ tourney_name = 'Australian Open' ]
  table: matches
id: '#2'
operation: TopSort
output: winner_rank_points , winner_name
predicate: Rows [ 1 ] OrderBy [ winner_rank_points DESC ]
"
1a52ea66e61e79d0c7556af1d81db30038d734dc4d84fcc7157edcb76b0e0f84,"TopSort Rows [ 1 ] OrderBy [ minutes DESC ] Output [ winner_name , minutes , loser_name ]
  In: Scan Table [ matches ] Output [ winner_name , minutes , loser_name ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ minutes DESC ]"", ""output"": ""winner_name , minutes , loser_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_name , minutes , loser_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_name , minutes , loser_name
  table: matches
id: '#2'
operation: TopSort
output: winner_name , minutes , loser_name
predicate: Rows [ 1 ] OrderBy [ minutes DESC ]
"
f1c050489e77aa36a4a6916315d9101c4fc31dd87f4c21d1a86f6de09e54aa1b,"TopSort Rows [ 1 ] OrderBy [ minutes DESC ] Output [ winner_name , minutes , loser_name ]
  In: Scan Table [ matches ] Output [ winner_name , minutes , loser_name ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ minutes DESC ]"", ""output"": ""winner_name , minutes , loser_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_name , minutes , loser_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_name , minutes , loser_name
  table: matches
id: '#2'
operation: TopSort
output: winner_name , minutes , loser_name
predicate: Rows [ 1 ] OrderBy [ minutes DESC ]
"
086087399d35549efbe7ca776ed64b5eb84b62ea11f7dc4585b96c2c26eb7d5a,"Aggregate GroupBy [ first_name ] Output [ AVG(ranking) AS Avg_ranking , first_name ]
  In: Join Predicate [ B.player_id = T.player_id ] Output [ T.ranking , B.first_name ]
    In: Scan Table [ rankings ] Output [ player_id , ranking ]
    In: Scan Table [ players ] Output [ player_id , first_name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ first_name ]"", ""output"": ""AVG(ranking) AS Avg_ranking , first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.player_id = #2.player_id ]"", ""output"": ""#2.ranking , #1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""player_id , first_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""player_id , ranking""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: player_id , first_name
    table: players
  - id: '#2'
    operation: Scan Table
    output: player_id , ranking
    table: rankings
  id: '#3'
  operation: Join
  output: '#2.ranking , #1.first_name'
  predicate: 'Predicate [ #1.player_id = #2.player_id ]'
id: '#4'
operation: Aggregate
output: AVG(ranking) AS Avg_ranking , first_name
predicate: GroupBy [ first_name ]
"
c21404f628622b0b31a04806e09664651daff826371944fb1be63ecf5b1627a7,"Aggregate GroupBy [ first_name ] Output [ AVG(ranking) AS Avg_ranking , first_name ]
  In: Join Predicate [ B.player_id = T.player_id ] Output [ T.ranking , B.first_name ]
    In: Scan Table [ rankings ] Output [ player_id , ranking ]
    In: Scan Table [ players ] Output [ player_id , first_name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ first_name ]"", ""output"": ""AVG(ranking) AS Avg_ranking , first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.player_id = #2.player_id ]"", ""output"": ""#2.ranking , #1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""player_id , first_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""player_id , ranking""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: player_id , first_name
    table: players
  - id: '#2'
    operation: Scan Table
    output: player_id , ranking
    table: rankings
  id: '#3'
  operation: Join
  output: '#2.ranking , #1.first_name'
  predicate: 'Predicate [ #1.player_id = #2.player_id ]'
id: '#4'
operation: Aggregate
output: AVG(ranking) AS Avg_ranking , first_name
predicate: GroupBy [ first_name ]
"
fc6edbd3e37d50acc7d2b3f1a3c6d66eccec37a36afcf02f8f6a14bfc7f951bc,"Aggregate GroupBy [ first_name ] Output [ SUM(ranking_points) AS Sum_ranking_points , first_name ]
  In: Join Predicate [ B.player_id = T.player_id ] Output [ T.ranking_points , B.first_name ]
    In: Scan Table [ rankings ] Output [ player_id , ranking_points ]
    In: Scan Table [ players ] Output [ player_id , first_name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ first_name ]"", ""output"": ""SUM(ranking_points) AS Sum_ranking_points , first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.player_id = #2.player_id ]"", ""output"": ""#2.ranking_points , #1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""player_id , first_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""player_id , ranking_points""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: player_id , first_name
    table: players
  - id: '#2'
    operation: Scan Table
    output: player_id , ranking_points
    table: rankings
  id: '#3'
  operation: Join
  output: '#2.ranking_points , #1.first_name'
  predicate: 'Predicate [ #1.player_id = #2.player_id ]'
id: '#4'
operation: Aggregate
output: SUM(ranking_points) AS Sum_ranking_points , first_name
predicate: GroupBy [ first_name ]
"
78180afbb85c0ff5153d14edb5060ddbd3cc213bd221da87adef21a8d4c73e41,"Aggregate GroupBy [ first_name ] Output [ SUM(ranking_points) AS Sum_ranking_points , first_name ]
  In: Join Predicate [ B.player_id = T.player_id ] Output [ T.ranking_points , B.first_name ]
    In: Scan Table [ rankings ] Output [ player_id , ranking_points ]
    In: Scan Table [ players ] Output [ player_id , first_name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ first_name ]"", ""output"": ""SUM(ranking_points) AS Sum_ranking_points , first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.player_id = #2.player_id ]"", ""output"": ""#2.ranking_points , #1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""player_id , first_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""player_id , ranking_points""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: player_id , first_name
    table: players
  - id: '#2'
    operation: Scan Table
    output: player_id , ranking_points
    table: rankings
  id: '#3'
  operation: Join
  output: '#2.ranking_points , #1.first_name'
  predicate: 'Predicate [ #1.player_id = #2.player_id ]'
id: '#4'
operation: Aggregate
output: SUM(ranking_points) AS Sum_ranking_points , first_name
predicate: GroupBy [ first_name ]
"
277b5c8f864f36802e3bf5a4fdb43007f4b02f4575e48575970786bce9af05ee,"Aggregate GroupBy [ country_code ] Output [ countstar AS Count_Star , country_code ]
  In: Scan Table [ players ] Output [ country_code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country_code ]"", ""output"": ""countstar AS Count_Star , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""country_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: country_code
  table: players
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , country_code
predicate: GroupBy [ country_code ]
"
e14b091525b0605611e8ca7329ecc05141580545c11b68d81e0d40d9b9eed55f,"Aggregate GroupBy [ country_code ] Output [ countstar AS Count_Star , country_code ]
  In: Scan Table [ players ] Output [ country_code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country_code ]"", ""output"": ""countstar AS Count_Star , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""country_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: country_code
  table: players
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , country_code
predicate: GroupBy [ country_code ]
"
01647ae7e0cf6d752409dfd6fdd41d79bc9a878d51fe2a086123887c87b38554,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , country_code ]
  In: Aggregate GroupBy [ country_code ] Output [ countstar AS Count_Star , country_code ]
    In: Scan Table [ players ] Output [ country_code ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , country_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country_code ]"", ""output"": ""countstar AS Count_Star , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: country_code
    table: players
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , country_code
  predicate: GroupBy [ country_code ]
id: '#3'
operation: TopSort
output: Count_Star , country_code
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
bf536a5accf17fc5f50fe4a88831ffb0eddf2c053cfd010f4e496faec5a26fbc,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , country_code ]
  In: Aggregate GroupBy [ country_code ] Output [ countstar AS Count_Star , country_code ]
    In: Scan Table [ players ] Output [ country_code ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , country_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country_code ]"", ""output"": ""countstar AS Count_Star , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: country_code
    table: players
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , country_code
  predicate: GroupBy [ country_code ]
id: '#3'
operation: TopSort
output: Count_Star , country_code
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
425bff2bfebdbee3e9137540cf2239f10e3986898173aa49e7bbbba2d55064a9,"Filter Predicate [ Count_Star > 50 ] Output [ country_code ]
  In: Aggregate GroupBy [ country_code ] Output [ countstar AS Count_Star , country_code ]
    In: Scan Table [ players ] Output [ country_code ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 50 ]"", ""output"": ""country_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country_code ]"", ""output"": ""countstar AS Count_Star , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: country_code
    table: players
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , country_code
  predicate: GroupBy [ country_code ]
id: '#3'
operation: Filter
output: country_code
predicate: Predicate [ Count_Star > 50 ]
"
5322a644022dbc15036fe0c0099125fa375687c8e4eeb4917d45d70c1b33f836,"Filter Predicate [ Count_Star > 50 ] Output [ country_code ]
  In: Aggregate GroupBy [ country_code ] Output [ countstar AS Count_Star , country_code ]
    In: Scan Table [ players ] Output [ country_code ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 50 ]"", ""output"": ""country_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country_code ]"", ""output"": ""countstar AS Count_Star , country_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: country_code
    table: players
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , country_code
  predicate: GroupBy [ country_code ]
id: '#3'
operation: Filter
output: country_code
predicate: Predicate [ Count_Star > 50 ]
"
4defbf0359c1037bfe89c5403c7cdb8c67b0f82ae96d81d003691e8e0500a564,"Aggregate GroupBy [ ranking_date ] Output [ SUM(tours) AS Sum_tours , ranking_date ]
  In: Scan Table [ rankings ] Output [ tours , ranking_date ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ ranking_date ]"", ""output"": ""SUM(tours) AS Sum_tours , ranking_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""tours , ranking_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: tours , ranking_date
  table: rankings
id: '#2'
operation: Aggregate
output: SUM(tours) AS Sum_tours , ranking_date
predicate: GroupBy [ ranking_date ]
"
1355c0cdad34ed6843f0c7be4c8311e7c04c5e47498de15c69206fb41203297b,"Aggregate GroupBy [ ranking_date ] Output [ SUM(tours) AS Sum_tours , ranking_date ]
  In: Scan Table [ rankings ] Output [ tours , ranking_date ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ ranking_date ]"", ""output"": ""SUM(tours) AS Sum_tours , ranking_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""rankings"", ""output"": ""tours , ranking_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: tours , ranking_date
  table: rankings
id: '#2'
operation: Aggregate
output: SUM(tours) AS Sum_tours , ranking_date
predicate: GroupBy [ ranking_date ]
"
620308662187c344a0e108bb40e62440d3db5e674d02984ac1edc18328782d6e,"Aggregate GroupBy [ year ] Output [ countstar AS Count_Star , year ]
  In: Scan Table [ matches ] Output [ year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ year ]"", ""output"": ""countstar AS Count_Star , year"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: year
  table: matches
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , year
predicate: GroupBy [ year ]
"
14d7ca6040f3fd88253dc36d52a5dc3f8c9fddca5527843daae9a68e3513cdfd,"Aggregate GroupBy [ year ] Output [ countstar AS Count_Star , year ]
  In: Scan Table [ matches ] Output [ year ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ year ]"", ""output"": ""countstar AS Count_Star , year"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""year""}]}","children:
- id: '#1'
  operation: Scan Table
  output: year
  table: matches
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , year
predicate: GroupBy [ year ]
"
5f825d0ca7aab228d5c0ae6793b47a6d6044a166df89612088071c3bbdf4a22e,"TopSort Rows [ 3 ] OrderBy [ winner_age , winner_name , winner_rank ] Output [ winner_rank , winner_name , winner_age ]
  In: Scan Table [ matches ] Distinct [ true ] Output [ winner_rank , winner_name , winner_age ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ winner_age , winner_name , winner_rank ]"", ""output"": ""winner_rank , winner_name , winner_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Distinct [ true ]"", ""output"": ""winner_rank , winner_name , winner_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_rank , winner_name , winner_age
  predicate: Distinct [ true ]
  table: matches
id: '#2'
operation: TopSort
output: winner_rank , winner_name , winner_age
predicate: Rows [ 3 ] OrderBy [ winner_age , winner_name , winner_rank ]
"
1d475eb098ce0ad96f35972c2d26c617cfcc6e15efde805ae7ee5dbca0616181,"Top Rows [ 3 ] OrderBy [ winner_age , winner_name , winner_rank ] Output [ winner_rank , winner_name , winner_age ]
  In: Scan Table [ matches ] Distinct [ true ] Output [ winner_rank , winner_name , winner_age ]","{""id"": ""#2"", ""operation"": ""Top"", ""predicate"": ""Rows [ 3 ] OrderBy [ winner_age , winner_name , winner_rank ]"", ""output"": ""winner_rank , winner_name , winner_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Distinct [ true ]"", ""output"": ""winner_rank , winner_name , winner_age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: winner_rank , winner_name , winner_age
  predicate: Distinct [ true ]
  table: matches
id: '#2'
operation: Top
output: winner_rank , winner_name , winner_age
predicate: Rows [ 3 ] OrderBy [ winner_age , winner_name , winner_rank ]
"
1b4a7a6a4a6edbd99f288bea34b33440647837c357c6aaea4af04799805c576e,"Aggregate Output [ COUNT(DISTINCT winner_name) AS Count_Dist_winner_name ]
  In: Scan Table [ matches ] Predicate [ tourney_name = 'WTA Championships' AND winner_hand = 'L' ] Distinct [ true ] Output [ tourney_name , winner_hand , winner_name ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT winner_name) AS Count_Dist_winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'WTA Championships' AND winner_hand = 'L' ] Distinct [ true ]"", ""output"": ""tourney_name , winner_hand , winner_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: tourney_name , winner_hand , winner_name
  predicate: Predicate [ tourney_name = 'WTA Championships' AND winner_hand = 'L'
    ] Distinct [ true ]
  table: matches
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT winner_name) AS Count_Dist_winner_name
"
08b917ef83c5cde81cdece7e98cfef78e82f1bd17c0dc8b77e8759f9fa88485a,"Aggregate Output [ COUNT(DISTINCT winner_name) AS Count_Dist_winner_name ]
  In: Scan Table [ matches ] Predicate [ tourney_name = 'WTA Championships' AND winner_hand = 'L' ] Distinct [ true ] Output [ tourney_name , winner_hand , winner_name ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT winner_name) AS Count_Dist_winner_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""predicate"": ""Predicate [ tourney_name = 'WTA Championships' AND winner_hand = 'L' ] Distinct [ true ]"", ""output"": ""tourney_name , winner_hand , winner_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: tourney_name , winner_hand , winner_name
  predicate: Predicate [ tourney_name = 'WTA Championships' AND winner_hand = 'L'
    ] Distinct [ true ]
  table: matches
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT winner_name) AS Count_Dist_winner_name
"
867cde5170a26741ae4655d22fca0ab3bb8617a3498fc46fe257463dea794d20,"TopSort Rows [ 1 ] OrderBy [ winner_rank_points DESC ] Output [ winner_rank_points , first_name , birth_date , country_code ]
  In: Join Predicate [ B.winner_id = T.player_id ] Output [ T.country_code , T.birth_date , T.first_name , B.winner_rank_points ]
    In: Scan Table [ players ] Output [ first_name , player_id , birth_date , country_code ]
    In: Scan Table [ matches ] Output [ winner_rank_points , winner_id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ winner_rank_points DESC ]"", ""output"": ""winner_rank_points , first_name , birth_date , country_code"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.winner_id = #2.player_id ]"", ""output"": ""#2.country_code , #2.birth_date , #2.first_name , #1.winner_rank_points"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_rank_points , winner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , birth_date , country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: winner_rank_points , winner_id
    table: matches
  - id: '#2'
    operation: Scan Table
    output: first_name , player_id , birth_date , country_code
    table: players
  id: '#3'
  operation: Join
  output: '#2.country_code , #2.birth_date , #2.first_name , #1.winner_rank_points'
  predicate: 'Predicate [ #1.winner_id = #2.player_id ]'
id: '#4'
operation: TopSort
output: winner_rank_points , first_name , birth_date , country_code
predicate: Rows [ 1 ] OrderBy [ winner_rank_points DESC ]
"
1a6d7284f609f767a7d2bbc05f7e125020d7b13ecf4c7f2f2de8e63338e8f6fe,"TopSort Rows [ 1 ] OrderBy [ winner_rank_points DESC ] Output [ winner_rank_points , first_name , birth_date , country_code ]
  In: Join Predicate [ B.winner_id = T.player_id ] Output [ T.country_code , T.birth_date , T.first_name , B.winner_rank_points ]
    In: Scan Table [ players ] Output [ first_name , player_id , birth_date , country_code ]
    In: Scan Table [ matches ] Output [ winner_rank_points , winner_id ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ winner_rank_points DESC ]"", ""output"": ""winner_rank_points , first_name , birth_date , country_code"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.winner_id = #2.player_id ]"", ""output"": ""#2.country_code , #2.birth_date , #2.first_name , #1.winner_rank_points"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""matches"", ""output"": ""winner_rank_points , winner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""first_name , player_id , birth_date , country_code""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: winner_rank_points , winner_id
    table: matches
  - id: '#2'
    operation: Scan Table
    output: first_name , player_id , birth_date , country_code
    table: players
  id: '#3'
  operation: Join
  output: '#2.country_code , #2.birth_date , #2.first_name , #1.winner_rank_points'
  predicate: 'Predicate [ #1.winner_id = #2.player_id ]'
id: '#4'
operation: TopSort
output: winner_rank_points , first_name , birth_date , country_code
predicate: Rows [ 1 ] OrderBy [ winner_rank_points DESC ]
"
e5bb7493553ebb3687bf1cdb55d5edfc06663219cc39e255956981437ab3d826,"Aggregate GroupBy [ hand ] Output [ hand , countstar AS Count_Star ]
  In: Scan Table [ players ] Output [ hand ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ hand ]"", ""output"": ""hand , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""hand""}]}","children:
- id: '#1'
  operation: Scan Table
  output: hand
  table: players
id: '#2'
operation: Aggregate
output: hand , countstar AS Count_Star
predicate: GroupBy [ hand ]
"
fcffebd3ff6c929d806e7b4ea91b3ad91aa2d65799cc8b9af47caed7c6fb1f68,"Aggregate GroupBy [ hand ] Output [ hand , countstar AS Count_Star ]
  In: Scan Table [ players ] Output [ hand ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ hand ]"", ""output"": ""hand , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""players"", ""output"": ""hand""}]}","children:
- id: '#1'
  operation: Scan Table
  output: hand
  table: players
id: '#2'
operation: Aggregate
output: hand , countstar AS Count_Star
predicate: GroupBy [ hand ]
"
65eeff6ba62debfd324c1369719ec178496b3f06a7b1df6fc9760d2bd4d00bc0,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ ship ] Predicate [ disposition_of_ship = 'Captured' ] Output [ disposition_of_ship ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ disposition_of_ship = 'Captured' ]"", ""output"": ""disposition_of_ship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: disposition_of_ship
  predicate: Predicate [ disposition_of_ship = 'Captured' ]
  table: ship
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2ccd32ac0d180b828be858b0bf0735ce6f91ee1507751a8ac74b2614fb9dda0e,"Sort OrderBy [ name DESC ] Output [ tonnage , name ]
  In: Scan Table [ ship ] Output [ tonnage , name ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ name DESC ]"", ""output"": ""tonnage , name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""output"": ""tonnage , name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: tonnage , name
  table: ship
id: '#2'
operation: Sort
output: tonnage , name
predicate: OrderBy [ name DESC ]
"
3356268778a1d181ee966ca9d917f094aa438755a17a6c70463309f229a4dcff,"Scan Table [ battle ] Output [ name , date ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""name , date""}","id: '#1'
operation: Scan Table
output: name , date
table: battle
"
efc3d6b583061fdac5b1192e6644f9c76d5ae824ba2e041fabcadee05b13cb63,"Aggregate Output [ MAX(killed) AS Max_killed , MIN(killed) AS Min_killed ]
  In: Scan Table [ death ] Output [ killed ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(killed) AS Max_killed , MIN(killed) AS Min_killed"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""death"", ""output"": ""killed""}]}","children:
- id: '#1'
  operation: Scan Table
  output: killed
  table: death
id: '#2'
operation: Aggregate
output: MAX(killed) AS Max_killed , MIN(killed) AS Min_killed
"
0ee950e67cdbf2bef9cf54225445cebf182b136e6592005c3991f6b2a08a2d9e,"Aggregate Output [ AVG(injured) AS Avg_injured ]
  In: Scan Table [ death ] Output [ injured ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(injured) AS Avg_injured"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""death"", ""output"": ""injured""}]}","children:
- id: '#1'
  operation: Scan Table
  output: injured
  table: death
id: '#2'
operation: Aggregate
output: AVG(injured) AS Avg_injured
"
b1386d93c89b01508f84c2462d3dcc0f4f8ecec266f8b78d947bbe90436733a8,"Join Predicate [ B.id = T.caused_by_ship_id ] Output [ T.injured , T.killed ]
  In: Scan Table [ death ] Output [ injured , caused_by_ship_id , killed ]
  In: Scan Table [ ship ] Predicate [ tonnage = 't' ] Output [ id , tonnage ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.id = #2.caused_by_ship_id ]"", ""output"": ""#2.injured , #2.killed"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ tonnage = 't' ]"", ""output"": ""id , tonnage""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""death"", ""output"": ""injured , caused_by_ship_id , killed""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , tonnage
  predicate: Predicate [ tonnage = 't' ]
  table: ship
- id: '#2'
  operation: Scan Table
  output: injured , caused_by_ship_id , killed
  table: death
id: '#3'
operation: Join
output: '#2.injured , #2.killed'
predicate: 'Predicate [ #1.id = #2.caused_by_ship_id ]'
"
55ed9a583e8099eef15899b28809eab0db5d06e127a724e4cc65ad722df4beed,"Scan Table [ battle ] Predicate [ bulgarian_commander <> 'Boril' ] Output [ bulgarian_commander , result , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""predicate"": ""Predicate [ bulgarian_commander <> 'Boril' ]"", ""output"": ""bulgarian_commander , result , name""}","id: '#1'
operation: Scan Table
output: bulgarian_commander , result , name
predicate: Predicate [ bulgarian_commander <> 'Boril' ]
table: battle
"
3f394f24a9ffba65e83de378069abbc3c6dc21d0e6858fd28bcaf8a4c44c069c,"Intersect Predicate [ T.lost_in_battle = B.id ] Output [ B.id , B.name ]
  In: Scan Table [ ship ] Predicate [ ship_type = 'Brig' ] Output [ lost_in_battle , ship_type ]
  In: Scan Table [ battle ] Output [ id , name ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #2.lost_in_battle = #1.id ]"", ""output"": ""#1.id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""id , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ ship_type = 'Brig' ]"", ""output"": ""lost_in_battle , ship_type""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , name
  table: battle
- id: '#2'
  operation: Scan Table
  output: lost_in_battle , ship_type
  predicate: Predicate [ ship_type = 'Brig' ]
  table: ship
id: '#3'
operation: Intersect
output: '#1.id , #1.name'
predicate: 'Predicate [ #2.lost_in_battle = #1.id ]'
"
c08c23e7cc708242ee88a3d2b2b77fcc6eba87f51093769a204df2c410d443ae,"Filter Predicate [ Sum_killed > 10 ] Output [ name , id ]
  In: Aggregate GroupBy [ id ] Output [ SUM(killed) AS Sum_killed , name , id ]
    In: Join Predicate [ B.id = T.caused_by_ship_id ] Output [ B.id , B.name , T.killed ]
      In: Scan Table [ death ] Output [ caused_by_ship_id , killed ]
      In: Join Predicate [ B.lost_in_battle = T.id ] Output [ T.id , T.name ]
        In: Scan Table [ battle ] Output [ name , id ]
        In: Scan Table [ ship ] Output [ lost_in_battle , id ]","{""id"": ""#7"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Sum_killed > 10 ]"", ""output"": ""name , id"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ id ]"", ""output"": ""SUM(killed) AS Sum_killed , name , id"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.id = #4.caused_by_ship_id ]"", ""output"": ""#3.id , #3.name , #4.killed"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.lost_in_battle = #2.id ]"", ""output"": ""#2.id , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""output"": ""lost_in_battle , id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""name , id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""death"", ""output"": ""caused_by_ship_id , killed""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: lost_in_battle , id
        table: ship
      - id: '#2'
        operation: Scan Table
        output: name , id
        table: battle
      id: '#3'
      operation: Join
      output: '#2.id , #2.name'
      predicate: 'Predicate [ #1.lost_in_battle = #2.id ]'
    - id: '#4'
      operation: Scan Table
      output: caused_by_ship_id , killed
      table: death
    id: '#5'
    operation: Join
    output: '#3.id , #3.name , #4.killed'
    predicate: 'Predicate [ #3.id = #4.caused_by_ship_id ]'
  id: '#6'
  operation: Aggregate
  output: SUM(killed) AS Sum_killed , name , id
  predicate: GroupBy [ id ]
id: '#7'
operation: Filter
output: name , id
predicate: Predicate [ Sum_killed > 10 ]
"
1d303a4c9be0e889f0579981273206eb3953935055b14be901616cc6fc92ba5f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ id , Count_Star , name ]
  In: Join Predicate [ B.caused_by_ship_id = T.id ] Output [ T.id , B.Count_Star , T.name ]
    In: Scan Table [ ship ] Output [ id , name ]
    In: Aggregate GroupBy [ caused_by_ship_id ] Output [ countstar AS Count_Star , caused_by_ship_id ]
      In: Scan Table [ death ] Output [ caused_by_ship_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""id , Count_Star , name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.caused_by_ship_id = #3.id ]"", ""output"": ""#3.id , #2.Count_Star , #3.name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ caused_by_ship_id ]"", ""output"": ""countstar AS Count_Star , caused_by_ship_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""death"", ""output"": ""caused_by_ship_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""output"": ""id , name""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: caused_by_ship_id
      table: death
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , caused_by_ship_id
    predicate: GroupBy [ caused_by_ship_id ]
  - id: '#3'
    operation: Scan Table
    output: id , name
    table: ship
  id: '#4'
  operation: Join
  output: '#3.id , #2.Count_Star , #3.name'
  predicate: 'Predicate [ #2.caused_by_ship_id = #3.id ]'
id: '#5'
operation: TopSort
output: id , Count_Star , name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
03a299a92f3839f2c0bb5e82bfe834b731538003186dcd06f7dea307ba81cee7,"Scan Table [ battle ] Predicate [ bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I' ] Output [ latin_commander , bulgarian_commander , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""predicate"": ""Predicate [ bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I' ]"", ""output"": ""latin_commander , bulgarian_commander , name""}","id: '#1'
operation: Scan Table
output: latin_commander , bulgarian_commander , name
predicate: Predicate [ bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin
  I' ]
table: battle
"
fe556df1566300f7d867bf85a0acea81c1ec223b682d1513e1b388040c727efe,"Aggregate Output [ COUNT(DISTINCT result) AS Count_Dist_result ]
  In: Scan Table [ battle ] Distinct [ true ] Output [ result ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT result) AS Count_Dist_result"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""predicate"": ""Distinct [ true ]"", ""output"": ""result""}]}","children:
- id: '#1'
  operation: Scan Table
  output: result
  predicate: Distinct [ true ]
  table: battle
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT result) AS Count_Dist_result
"
efc2abfda824f8537f7433476f8c634f1afe5c44f1e47895e62966073e995993,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ T.lost_in_battle IS NULL OR B.id = T.lost_in_battle ] Output [ B.id ]
    In: Scan Table [ ship ] Predicate [ tonnage = '225' ] Output [ tonnage , lost_in_battle ]
    In: Scan Table [ battle ] Output [ id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.lost_in_battle IS NULL OR #1.id = #2.lost_in_battle ]"", ""output"": ""#1.id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ tonnage = '225' ]"", ""output"": ""tonnage , lost_in_battle""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: id
    table: battle
  - id: '#2'
    operation: Scan Table
    output: tonnage , lost_in_battle
    predicate: Predicate [ tonnage = '225' ]
    table: ship
  id: '#3'
  operation: Except
  output: '#1.id'
  predicate: 'Predicate [ #2.lost_in_battle IS NULL OR #1.id = #2.lost_in_battle ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
bd21f664a846bc1fe7d88e638adb44527375b28722a48eb0c8675360b6696489,"Intersect Predicate [ B.name = T.name ] Output [ B.date , B.name ]
  In: Join Predicate [ B.lost_in_battle = T.id ] Output [ T.name , T.date ]
    In: Scan Table [ battle ] Output [ id , name , date ]
    In: Scan Table [ ship ] Predicate [ name = 'HMS Atalanta' ] Output [ name , lost_in_battle ]
  In: Join Predicate [ B.lost_in_battle = T.id ] Distinct [ true ] Output [ T.date , T.name ]
    In: Scan Table [ battle ] Output [ id , name , date ]
    In: Scan Table [ ship ] Predicate [ name = 'Lettice' ] Output [ name , lost_in_battle ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.name = #6.name ]"", ""output"": ""#3.date , #3.name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.lost_in_battle = #2.id ] Distinct [ true ]"", ""output"": ""#2.date , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ name = 'Lettice' ]"", ""output"": ""name , lost_in_battle""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""id , name , date""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.lost_in_battle = #5.id ]"", ""output"": ""#5.name , #5.date"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ name = 'HMS Atalanta' ]"", ""output"": ""name , lost_in_battle""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""id , name , date""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: name , lost_in_battle
    predicate: Predicate [ name = 'Lettice' ]
    table: ship
  - id: '#2'
    operation: Scan Table
    output: id , name , date
    table: battle
  id: '#3'
  operation: Join
  output: '#2.date , #2.name'
  predicate: 'Predicate [ #1.lost_in_battle = #2.id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: name , lost_in_battle
    predicate: Predicate [ name = 'HMS Atalanta' ]
    table: ship
  - id: '#5'
    operation: Scan Table
    output: id , name , date
    table: battle
  id: '#6'
  operation: Join
  output: '#5.name , #5.date'
  predicate: 'Predicate [ #4.lost_in_battle = #5.id ]'
id: '#7'
operation: Intersect
output: '#3.date , #3.name'
predicate: 'Predicate [ #3.name = #6.name ]'
"
2ff92e902d385f0d3c7c7ac8839232b8f21877f00a5e4efad288d1204c1383cd,"Except Predicate [ B.name = T.name ] Output [ B.result , B.bulgarian_commander , B.name ]
  In: Join Predicate [ B.lost_in_battle = T.id ] Output [ T.result , T.name , T.bulgarian_commander ]
    In: Scan Table [ battle ] Output [ id , bulgarian_commander , name , result ]
    In: Scan Table [ ship ] Predicate [ location = 'English Channel' ] Output [ location , lost_in_battle ]
  In: Scan Table [ battle ] Distinct [ true ] Output [ bulgarian_commander , name , result ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.name = #4.name ]"", ""output"": ""#1.result , #1.bulgarian_commander , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""predicate"": ""Distinct [ true ]"", ""output"": ""bulgarian_commander , name , result""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.lost_in_battle = #3.id ]"", ""output"": ""#3.result , #3.name , #3.bulgarian_commander"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""ship"", ""predicate"": ""Predicate [ location = 'English Channel' ]"", ""output"": ""location , lost_in_battle""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""battle"", ""output"": ""id , bulgarian_commander , name , result""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: bulgarian_commander , name , result
  predicate: Distinct [ true ]
  table: battle
- children:
  - id: '#2'
    operation: Scan Table
    output: location , lost_in_battle
    predicate: Predicate [ location = 'English Channel' ]
    table: ship
  - id: '#3'
    operation: Scan Table
    output: id , bulgarian_commander , name , result
    table: battle
  id: '#4'
  operation: Join
  output: '#3.result , #3.name , #3.bulgarian_commander'
  predicate: 'Predicate [ #2.lost_in_battle = #3.id ]'
id: '#5'
operation: Except
output: '#1.result , #1.bulgarian_commander , #1.name'
predicate: 'Predicate [ #1.name = #4.name ]'
"
1b35f7d7b149e16fedff1f5ae56a8bb5a21a6a4e93ab8f12af0f265c757d44bd,Scan Table [ death ] Predicate [ note like '%East%' ] Output [ note ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""death"", ""predicate"": ""Predicate [ note like '%East%' ]"", ""output"": ""note""}","id: '#1'
operation: Scan Table
output: note
predicate: Predicate [ note like '%East%' ]
table: death
"
2ac1015ed0642af90685a98b50fb7c5ab2fd9c6dc918f84b974bfc879d519cfe,"Scan Table [ Addresses ] Output [ line_2 , line_1 ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""output"": ""line_2 , line_1""}","id: '#1'
operation: Scan Table
output: line_2 , line_1
table: Addresses
"
db4fbaa64e0ce68cfcc60c590b0bb1bff812a2a61390293307fba0d9cf1d1be2,"Scan Table [ Addresses ] Output [ line_2 , line_1 ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""output"": ""line_2 , line_1""}","id: '#1'
operation: Scan Table
output: line_2 , line_1
table: Addresses
"
c54e9172bd8c8469719531b90d2bcd9a3ae3a106a373164fcaa4f4b968821e42,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Courses ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Courses
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b53627579d8711d98990593ed80847023e92dbca50b1ca0ac0b92653554ca0c9,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Courses ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Courses
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
c799c2d3a69ce74de70092294fcae7075d54975ef156b0e53763fecc34b61ff3,"Scan Table [ Courses ] Predicate [ course_name = 'math' ] Output [ course_description , course_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""predicate"": ""Predicate [ course_name = 'math' ]"", ""output"": ""course_description , course_name""}","id: '#1'
operation: Scan Table
output: course_description , course_name
predicate: Predicate [ course_name = 'math' ]
table: Courses
"
e5bc7ae30bf83fb8eed96dab217d730ef7479ca2974ab899b2c5de3a57b5d83f,"Scan Table [ Courses ] Predicate [ course_name = 'math' ] Output [ course_description , course_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""predicate"": ""Predicate [ course_name = 'math' ]"", ""output"": ""course_description , course_name""}","id: '#1'
operation: Scan Table
output: course_description , course_name
predicate: Predicate [ course_name = 'math' ]
table: Courses
"
a96906121bf8107ed5d7287ea51641686047ef0e777391884145b07db87baad4,"Scan Table [ Addresses ] Predicate [ city = 'Port Chelsea' ] Output [ zip_postcode , city ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""predicate"": ""Predicate [ city = 'Port Chelsea' ]"", ""output"": ""zip_postcode , city""}","id: '#1'
operation: Scan Table
output: zip_postcode , city
predicate: Predicate [ city = 'Port Chelsea' ]
table: Addresses
"
99902bf465647b9de71fa5b3a255675bf1cf550f6095bced50a1103e60932e10,"Scan Table [ Addresses ] Predicate [ city = 'Port Chelsea' ] Output [ zip_postcode , city ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""predicate"": ""Predicate [ city = 'Port Chelsea' ]"", ""output"": ""zip_postcode , city""}","id: '#1'
operation: Scan Table
output: zip_postcode , city
predicate: Predicate [ city = 'Port Chelsea' ]
table: Addresses
"
594047a3f87d0aa4e97ebf98f5d3e84a42a74422b787725d5ca6a6f0d75c94fb,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ department_id , Count_Star , department_name ]
  In: Join Predicate [ B.department_id = T.department_id ] Output [ B.Count_Star , B.department_id , T.department_name ]
    In: Scan Table [ Departments ] Output [ department_id , department_name ]
    In: Aggregate GroupBy [ department_id ] Output [ department_id , countstar AS Count_Star ]
      In: Scan Table [ Degree_Programs ] Output [ department_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""department_id , Count_Star , department_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.department_id = #3.department_id ]"", ""output"": ""#2.Count_Star , #2.department_id , #3.department_name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ department_id ]"", ""output"": ""department_id , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""department_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Departments"", ""output"": ""department_id , department_name""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: department_id
      table: Degree_Programs
    id: '#2'
    operation: Aggregate
    output: department_id , countstar AS Count_Star
    predicate: GroupBy [ department_id ]
  - id: '#3'
    operation: Scan Table
    output: department_id , department_name
    table: Departments
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #2.department_id , #3.department_name'
  predicate: 'Predicate [ #2.department_id = #3.department_id ]'
id: '#5'
operation: TopSort
output: department_id , Count_Star , department_name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
b81b808b3e493817e0147dc7b225dd4243187c2fcb355ad2bced48ea5131cc90,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ department_id , Count_Star , department_name ]
  In: Join Predicate [ B.department_id = T.department_id ] Output [ B.Count_Star , B.department_id , T.department_name ]
    In: Scan Table [ Departments ] Output [ department_id , department_name ]
    In: Aggregate GroupBy [ department_id ] Output [ department_id , countstar AS Count_Star ]
      In: Scan Table [ Degree_Programs ] Output [ department_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""department_id , Count_Star , department_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.department_id = #3.department_id ]"", ""output"": ""#2.Count_Star , #2.department_id , #3.department_name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ department_id ]"", ""output"": ""department_id , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""department_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Departments"", ""output"": ""department_id , department_name""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: department_id
      table: Degree_Programs
    id: '#2'
    operation: Aggregate
    output: department_id , countstar AS Count_Star
    predicate: GroupBy [ department_id ]
  - id: '#3'
    operation: Scan Table
    output: department_id , department_name
    table: Departments
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #2.department_id , #3.department_name'
  predicate: 'Predicate [ #2.department_id = #3.department_id ]'
id: '#5'
operation: TopSort
output: department_id , Count_Star , department_name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
8dd28dfa3877846461c9ca5ff24f1cf529cd5aa35599c46a87fbe88ad5a40e83,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Degree_Programs ] Distinct [ true ] Output [ department_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Distinct [ true ]"", ""output"": ""department_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: department_id
  predicate: Distinct [ true ]
  table: Degree_Programs
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
6b818bfc5b7ecb4ae741d03d4ff61323fd33d7453db6ca50c0b0a72664470020,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Degree_Programs ] Distinct [ true ] Output [ department_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Distinct [ true ]"", ""output"": ""department_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: department_id
  predicate: Distinct [ true ]
  table: Degree_Programs
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
40bb6ce78af5916e027bb54942e97bb6cf361c0fd77103510be85af50772caa2,"Aggregate Output [ COUNT(DISTINCT degree_summary_name) AS Count_Dist_degree_summary_name ]
  In: Scan Table [ Degree_Programs ] Distinct [ true ] Output [ degree_summary_name ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT degree_summary_name) AS Count_Dist_degree_summary_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Distinct [ true ]"", ""output"": ""degree_summary_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: degree_summary_name
  predicate: Distinct [ true ]
  table: Degree_Programs
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT degree_summary_name) AS Count_Dist_degree_summary_name
"
898c347eb5c12469a2246087c9e41c6d25d26c018c7d1456e41bcc557448867e,"Aggregate Output [ COUNT(DISTINCT degree_summary_name) AS Count_Dist_degree_summary_name ]
  In: Scan Table [ Degree_Programs ] Distinct [ true ] Output [ degree_summary_name ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT degree_summary_name) AS Count_Dist_degree_summary_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Distinct [ true ]"", ""output"": ""degree_summary_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: degree_summary_name
  predicate: Distinct [ true ]
  table: Degree_Programs
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT degree_summary_name) AS Count_Dist_degree_summary_name
"
e2a8016205c76a65594123511298f5a3b3c80cdcda2a34b2d5958b3b76357407,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.department_id = T.department_id ] Output [ B.department_id , B.department_name ]
    In: Scan Table [ Degree_Programs ] Output [ department_id ]
    In: Scan Table [ Departments ] Predicate [ department_name = 'engineer' ] Output [ department_id , department_name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.department_id = #2.department_id ]"", ""output"": ""#1.department_id , #1.department_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Departments"", ""predicate"": ""Predicate [ department_name = 'engineer' ]"", ""output"": ""department_id , department_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""department_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: department_id , department_name
    predicate: Predicate [ department_name = 'engineer' ]
    table: Departments
  - id: '#2'
    operation: Scan Table
    output: department_id
    table: Degree_Programs
  id: '#3'
  operation: Join
  output: '#1.department_id , #1.department_name'
  predicate: 'Predicate [ #1.department_id = #2.department_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
6c0f1803add8e16276df518874b943504f46798a505b30fcd496ca3f2a5ef9e3,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.department_id = T.department_id ] Output [ B.department_id , B.department_name ]
    In: Scan Table [ Degree_Programs ] Output [ department_id ]
    In: Scan Table [ Departments ] Predicate [ department_name = 'engineer' ] Output [ department_id , department_name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.department_id = #2.department_id ]"", ""output"": ""#1.department_id , #1.department_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Departments"", ""predicate"": ""Predicate [ department_name = 'engineer' ]"", ""output"": ""department_id , department_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""department_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: department_id , department_name
    predicate: Predicate [ department_name = 'engineer' ]
    table: Departments
  - id: '#2'
    operation: Scan Table
    output: department_id
    table: Degree_Programs
  id: '#3'
  operation: Join
  output: '#1.department_id , #1.department_name'
  predicate: 'Predicate [ #1.department_id = #2.department_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
9dfedf1ed380083968565ef5a9823ced768e51cfdfa1f398b7cfde5337d6a06d,"Scan Table [ Sections ] Output [ section_description , section_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""output"": ""section_description , section_name""}","id: '#1'
operation: Scan Table
output: section_description , section_name
table: Sections
"
4a4ef13b7b975976a31902cf7be1396d6d291bb928fecc469235c9d646f33b5d,"Scan Table [ Sections ] Output [ section_description , section_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""output"": ""section_description , section_name""}","id: '#1'
operation: Scan Table
output: section_description , section_name
table: Sections
"
57a37b0501428222f4c8034672ee226bc3ec6d001972e5e1b7a7218189e3276c,"Filter Predicate [ Count_Star <= 2 ] Output [ course_id , course_name ]
  In: Aggregate GroupBy [ course_id ] Output [ countstar AS Count_Star , course_id , course_name ]
    In: Join Predicate [ B.course_id = T.course_id ] Output [ T.course_name , T.course_id ]
      In: Scan Table [ Courses ] Output [ course_id , course_name ]
      In: Scan Table [ Sections ] Output [ course_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star <= 2 ]"", ""output"": ""course_id , course_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ course_id ]"", ""output"": ""countstar AS Count_Star , course_id , course_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.course_id = #2.course_id ]"", ""output"": ""#2.course_name , #2.course_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""output"": ""course_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""course_id , course_name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: course_id
      table: Sections
    - id: '#2'
      operation: Scan Table
      output: course_id , course_name
      table: Courses
    id: '#3'
    operation: Join
    output: '#2.course_name , #2.course_id'
    predicate: 'Predicate [ #1.course_id = #2.course_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , course_id , course_name
  predicate: GroupBy [ course_id ]
id: '#5'
operation: Filter
output: course_id , course_name
predicate: Predicate [ Count_Star <= 2 ]
"
3941c44dd86826e64780268e4986fd9beabdcb24cc002665fe4249303f2d9fd1,"Filter Predicate [ Count_Star <= 2 ] Output [ course_id , course_name ]
  In: Aggregate GroupBy [ course_id ] Output [ countstar AS Count_Star , course_id , course_name ]
    In: Join Predicate [ B.course_id = T.course_id ] Output [ T.course_name , T.course_id ]
      In: Scan Table [ Courses ] Output [ course_id , course_name ]
      In: Scan Table [ Sections ] Output [ course_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star <= 2 ]"", ""output"": ""course_id , course_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ course_id ]"", ""output"": ""countstar AS Count_Star , course_id , course_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.course_id = #2.course_id ]"", ""output"": ""#2.course_name , #2.course_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""output"": ""course_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""course_id , course_name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: course_id
      table: Sections
    - id: '#2'
      operation: Scan Table
      output: course_id , course_name
      table: Courses
    id: '#3'
    operation: Join
    output: '#2.course_name , #2.course_id'
    predicate: 'Predicate [ #1.course_id = #2.course_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , course_id , course_name
  predicate: GroupBy [ course_id ]
id: '#5'
operation: Filter
output: course_id , course_name
predicate: Predicate [ Count_Star <= 2 ]
"
0d4d196cc026090096873dca60f9f9112235e305878c0d7bab7b6fd404e4a148,"Sort OrderBy [ section_name DESC ] Output [ section_name ]
  In: Scan Table [ Sections ] Output [ section_name ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ section_name DESC ]"", ""output"": ""section_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""output"": ""section_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: section_name
  table: Sections
id: '#2'
operation: Sort
output: section_name
predicate: OrderBy [ section_name DESC ]
"
84e29240b001575ac46e8f3eebcf206cf49d7fc7fb2a26cca0199b1123c01bdd,"Sort OrderBy [ section_name DESC ] Output [ section_name ]
  In: Scan Table [ Sections ] Output [ section_name ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ section_name DESC ]"", ""output"": ""section_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""output"": ""section_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: section_name
  table: Sections
id: '#2'
operation: Sort
output: section_name
predicate: OrderBy [ section_name DESC ]
"
4ee8e06d6ea0494afddda0a73ba51a5f3c93bfded92d39d8fef5436b57c0689b,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ semester_name , Count_Star , semester_id ]
  In: Join Predicate [ B.semester_id = T.semester_id ] Output [ B.Count_Star , T.semester_name , T.semester_id ]
    In: Scan Table [ Semesters ] Output [ semester_name , semester_id ]
    In: Aggregate GroupBy [ semester_id ] Output [ countstar AS Count_Star , semester_id ]
      In: Scan Table [ Student_Enrolment ] Output [ semester_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""semester_name , Count_Star , semester_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.semester_id = #3.semester_id ]"", ""output"": ""#2.Count_Star , #3.semester_name , #3.semester_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ semester_id ]"", ""output"": ""countstar AS Count_Star , semester_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""semester_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Semesters"", ""output"": ""semester_name , semester_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: semester_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , semester_id
    predicate: GroupBy [ semester_id ]
  - id: '#3'
    operation: Scan Table
    output: semester_name , semester_id
    table: Semesters
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.semester_name , #3.semester_id'
  predicate: 'Predicate [ #2.semester_id = #3.semester_id ]'
id: '#5'
operation: TopSort
output: semester_name , Count_Star , semester_id
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
fd3ab86c1726ff82dfae3f950d230250d8b8d89f8ebb0146cad28b2fb7ba5ecb,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ semester_name , Count_Star , semester_id ]
  In: Join Predicate [ B.semester_id = T.semester_id ] Output [ B.Count_Star , T.semester_name , T.semester_id ]
    In: Scan Table [ Semesters ] Output [ semester_name , semester_id ]
    In: Aggregate GroupBy [ semester_id ] Output [ countstar AS Count_Star , semester_id ]
      In: Scan Table [ Student_Enrolment ] Output [ semester_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""semester_name , Count_Star , semester_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.semester_id = #3.semester_id ]"", ""output"": ""#2.Count_Star , #3.semester_name , #3.semester_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ semester_id ]"", ""output"": ""countstar AS Count_Star , semester_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""semester_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Semesters"", ""output"": ""semester_name , semester_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: semester_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , semester_id
    predicate: GroupBy [ semester_id ]
  - id: '#3'
    operation: Scan Table
    output: semester_name , semester_id
    table: Semesters
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.semester_name , #3.semester_id'
  predicate: 'Predicate [ #2.semester_id = #3.semester_id ]'
id: '#5'
operation: TopSort
output: semester_name , Count_Star , semester_id
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
e213cd4fec20daef85edf43f959e494d49e9cfc209bf8d906ddc0e163d0b7736,"Scan Table [ Departments ] Predicate [ department_name like '%computer%' ] Output [ department_description , department_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Departments"", ""predicate"": ""Predicate [ department_name like '%computer%' ]"", ""output"": ""department_description , department_name""}","id: '#1'
operation: Scan Table
output: department_description , department_name
predicate: Predicate [ department_name like '%computer%' ]
table: Departments
"
edd55d4ed905a820d6ca16947655a80dec3a03568e863d01d3c67c42ddaac344,"Scan Table [ Departments ] Predicate [ department_name like '%computer%' ] Output [ department_description , department_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Departments"", ""predicate"": ""Predicate [ department_name like '%computer%' ]"", ""output"": ""department_description , department_name""}","id: '#1'
operation: Scan Table
output: department_description , department_name
predicate: Predicate [ department_name like '%computer%' ]
table: Departments
"
728498cf775875068b9bab8aa842056887ff0d7f89672525110cc65529a4fbef,"Filter Predicate [ Count_Star = 2 ] Output [ middle_name , first_name , last_name , student_id ]
  In: Join Predicate [ B.student_id = T.student_id ] Output [ T.first_name , T.middle_name , T.last_name , T.student_id , B.Count_Star ]
    In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , student_id ]
    In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
      In: Scan Table [ Student_Enrolment ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star = 2 ]"", ""output"": ""middle_name , first_name , last_name , student_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.student_id ]"", ""output"": ""#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , student_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: middle_name , first_name , last_name , student_id
    table: Students
  id: '#4'
  operation: Join
  output: '#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star'
  predicate: 'Predicate [ #2.student_id = #3.student_id ]'
id: '#5'
operation: Filter
output: middle_name , first_name , last_name , student_id
predicate: Predicate [ Count_Star = 2 ]
"
f85c2f09f4eae3cc1aaf881656ac6d56ca396023118851906c9efa64f26e905d,"Filter Predicate [ Count_Star = 2 ] Output [ middle_name , first_name , last_name , student_id ]
  In: Join Predicate [ B.student_id = T.student_id ] Output [ T.first_name , T.middle_name , T.last_name , T.student_id , B.Count_Star ]
    In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , student_id ]
    In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
      In: Scan Table [ Student_Enrolment ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star = 2 ]"", ""output"": ""middle_name , first_name , last_name , student_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.student_id ]"", ""output"": ""#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , student_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: middle_name , first_name , last_name , student_id
    table: Students
  id: '#4'
  operation: Join
  output: '#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star'
  predicate: 'Predicate [ #2.student_id = #3.student_id ]'
id: '#5'
operation: Filter
output: middle_name , first_name , last_name , student_id
predicate: Predicate [ Count_Star = 2 ]
"
154ade6ec7a46682d047b9181ae3c0a84374232035fcf506874a2219cdd09599,"Join Predicate [ B.student_id = T.student_id ] Distinct [ true ] Output [ T.middle_name , T.first_name , T.last_name ]
  In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , student_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Output [ T.student_id ]
    In: Scan Table [ Student_Enrolment ] Output [ student_id , degree_program_id ]
    In: Scan Table [ Degree_Programs ] Predicate [ degree_summary_name = 'Bachelor' ] Output [ degree_summary_name , degree_program_id ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.student_id = #4.student_id ] Distinct [ true ]"", ""output"": ""#4.middle_name , #4.first_name , #4.last_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.degree_program_id = #2.degree_program_id ]"", ""output"": ""#2.student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Predicate [ degree_summary_name = 'Bachelor' ]"", ""output"": ""degree_summary_name , degree_program_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id , degree_program_id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , student_id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    predicate: Predicate [ degree_summary_name = 'Bachelor' ]
    table: Degree_Programs
  - id: '#2'
    operation: Scan Table
    output: student_id , degree_program_id
    table: Student_Enrolment
  id: '#3'
  operation: Join
  output: '#2.student_id'
  predicate: 'Predicate [ #1.degree_program_id = #2.degree_program_id ]'
- id: '#4'
  operation: Scan Table
  output: middle_name , first_name , last_name , student_id
  table: Students
id: '#5'
operation: Join
output: '#4.middle_name , #4.first_name , #4.last_name'
predicate: 'Predicate [ #3.student_id = #4.student_id ] Distinct [ true ]'
"
2302a1b8bb2111d71497b49f79a57e7db73f1de39aa54c60c1bab8fae0217a10,"Join Predicate [ B.student_id = T.student_id ] Distinct [ true ] Output [ T.middle_name , T.first_name , T.last_name ]
  In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , student_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Output [ T.student_id ]
    In: Scan Table [ Student_Enrolment ] Output [ student_id , degree_program_id ]
    In: Scan Table [ Degree_Programs ] Predicate [ degree_summary_name = 'Bachelor' ] Output [ degree_summary_name , degree_program_id ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.student_id = #4.student_id ] Distinct [ true ]"", ""output"": ""#4.middle_name , #4.first_name , #4.last_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.degree_program_id = #2.degree_program_id ]"", ""output"": ""#2.student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Predicate [ degree_summary_name = 'Bachelor' ]"", ""output"": ""degree_summary_name , degree_program_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id , degree_program_id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , student_id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    predicate: Predicate [ degree_summary_name = 'Bachelor' ]
    table: Degree_Programs
  - id: '#2'
    operation: Scan Table
    output: student_id , degree_program_id
    table: Student_Enrolment
  id: '#3'
  operation: Join
  output: '#2.student_id'
  predicate: 'Predicate [ #1.degree_program_id = #2.degree_program_id ]'
- id: '#4'
  operation: Scan Table
  output: middle_name , first_name , last_name , student_id
  table: Students
id: '#5'
operation: Join
output: '#4.middle_name , #4.first_name , #4.last_name'
predicate: 'Predicate [ #3.student_id = #4.student_id ] Distinct [ true ]'
"
a10ef1dc84070e92c63477211ea1738d364aca09cd140fdcb5d8d7685285a26d,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ degree_summary_name , Count_Star ]
  In: Aggregate GroupBy [ degree_summary_name ] Output [ countstar AS Count_Star , degree_summary_name ]
    In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Output [ T.degree_summary_name ]
      In: Scan Table [ Degree_Programs ] Output [ degree_summary_name , degree_program_id ]
      In: Scan Table [ Student_Enrolment ] Output [ degree_program_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""degree_summary_name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ degree_summary_name ]"", ""output"": ""countstar AS Count_Star , degree_summary_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.degree_program_id = #2.degree_program_id ]"", ""output"": ""#2.degree_summary_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""degree_summary_name , degree_program_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: degree_program_id
      table: Student_Enrolment
    - id: '#2'
      operation: Scan Table
      output: degree_summary_name , degree_program_id
      table: Degree_Programs
    id: '#3'
    operation: Join
    output: '#2.degree_summary_name'
    predicate: 'Predicate [ #1.degree_program_id = #2.degree_program_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , degree_summary_name
  predicate: GroupBy [ degree_summary_name ]
id: '#5'
operation: TopSort
output: degree_summary_name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
d25d036afc69baf9a3904e24917c7343ef491033d06727dec986ad7c1acc8f97,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ degree_summary_name , Count_Star ]
  In: Aggregate GroupBy [ degree_summary_name ] Output [ countstar AS Count_Star , degree_summary_name ]
    In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Output [ T.degree_summary_name ]
      In: Scan Table [ Degree_Programs ] Output [ degree_summary_name , degree_program_id ]
      In: Scan Table [ Student_Enrolment ] Output [ degree_program_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""degree_summary_name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ degree_summary_name ]"", ""output"": ""countstar AS Count_Star , degree_summary_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.degree_program_id = #2.degree_program_id ]"", ""output"": ""#2.degree_summary_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""degree_summary_name , degree_program_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: degree_program_id
      table: Student_Enrolment
    - id: '#2'
      operation: Scan Table
      output: degree_summary_name , degree_program_id
      table: Degree_Programs
    id: '#3'
    operation: Join
    output: '#2.degree_summary_name'
    predicate: 'Predicate [ #1.degree_program_id = #2.degree_program_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , degree_summary_name
  predicate: GroupBy [ degree_summary_name ]
id: '#5'
operation: TopSort
output: degree_summary_name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
d0a296f1837c86b98749f120148d725826c46b39b052aeb796e95d08240be359,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ degree_summary_name , Count_Star , degree_program_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Output [ B.Count_Star , T.degree_summary_name , T.degree_program_id ]
    In: Scan Table [ Degree_Programs ] Output [ degree_summary_name , degree_program_id ]
    In: Aggregate GroupBy [ degree_program_id ] Output [ countstar AS Count_Star , degree_program_id ]
      In: Scan Table [ Student_Enrolment ] Output [ degree_program_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""degree_summary_name , Count_Star , degree_program_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.degree_program_id = #3.degree_program_id ]"", ""output"": ""#2.Count_Star , #3.degree_summary_name , #3.degree_program_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ degree_program_id ]"", ""output"": ""countstar AS Count_Star , degree_program_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""degree_summary_name , degree_program_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: degree_program_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , degree_program_id
    predicate: GroupBy [ degree_program_id ]
  - id: '#3'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    table: Degree_Programs
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.degree_summary_name , #3.degree_program_id'
  predicate: 'Predicate [ #2.degree_program_id = #3.degree_program_id ]'
id: '#5'
operation: TopSort
output: degree_summary_name , Count_Star , degree_program_id
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
34572d6690f52e3ae8b1930d673e5bb162d889950786a5123cf119a1dab9cc1e,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ degree_summary_name , Count_Star , degree_program_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Output [ B.Count_Star , T.degree_summary_name , T.degree_program_id ]
    In: Scan Table [ Degree_Programs ] Output [ degree_summary_name , degree_program_id ]
    In: Aggregate GroupBy [ degree_program_id ] Output [ countstar AS Count_Star , degree_program_id ]
      In: Scan Table [ Student_Enrolment ] Output [ degree_program_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""degree_summary_name , Count_Star , degree_program_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.degree_program_id = #3.degree_program_id ]"", ""output"": ""#2.Count_Star , #3.degree_summary_name , #3.degree_program_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ degree_program_id ]"", ""output"": ""countstar AS Count_Star , degree_program_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""output"": ""degree_summary_name , degree_program_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: degree_program_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , degree_program_id
    predicate: GroupBy [ degree_program_id ]
  - id: '#3'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    table: Degree_Programs
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.degree_summary_name , #3.degree_program_id'
  predicate: 'Predicate [ #2.degree_program_id = #3.degree_program_id ]'
id: '#5'
operation: TopSort
output: degree_summary_name , Count_Star , degree_program_id
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
25e6219ead2bf27a2598b9113dc3d3af8c1960671ba08542f364e3d1cf519404,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ first_name , last_name , student_id , middle_name , Count_Star ]
  In: Join Predicate [ B.student_id = T.student_id ] Output [ T.first_name , T.middle_name , T.last_name , T.student_id , B.Count_Star ]
    In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , student_id ]
    In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
      In: Scan Table [ Student_Enrolment ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""first_name , last_name , student_id , middle_name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.student_id ]"", ""output"": ""#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , student_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: middle_name , first_name , last_name , student_id
    table: Students
  id: '#4'
  operation: Join
  output: '#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star'
  predicate: 'Predicate [ #2.student_id = #3.student_id ]'
id: '#5'
operation: TopSort
output: first_name , last_name , student_id , middle_name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
24a2b7acc32937966d07d1265d8dc136e4be76b7cfe7bf73b2ac90793d0c310b,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ first_name , last_name , student_id , middle_name , Count_Star ]
  In: Join Predicate [ B.student_id = T.student_id ] Output [ T.first_name , T.middle_name , T.last_name , T.student_id , B.Count_Star ]
    In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , student_id ]
    In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
      In: Scan Table [ Student_Enrolment ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""first_name , last_name , student_id , middle_name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.student_id ]"", ""output"": ""#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , student_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Student_Enrolment
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: middle_name , first_name , last_name , student_id
    table: Students
  id: '#4'
  operation: Join
  output: '#3.first_name , #3.middle_name , #3.last_name , #3.student_id , #2.Count_Star'
  predicate: 'Predicate [ #2.student_id = #3.student_id ]'
id: '#5'
operation: TopSort
output: first_name , last_name , student_id , middle_name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
8f8dd95299a63e06a826543a636d943555a7b97b7b1a3fae24cebc48ce2f8de4,"Except Predicate [ T.semester_id = B.semester_id ] Output [ B.semester_name ]
  In: Scan Table [ Student_Enrolment ] Output [ semester_id ]
  In: Scan Table [ Semesters ] Output [ semester_name , semester_id ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.semester_id = #1.semester_id ]"", ""output"": ""#1.semester_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Semesters"", ""output"": ""semester_name , semester_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""semester_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: semester_name , semester_id
  table: Semesters
- id: '#2'
  operation: Scan Table
  output: semester_id
  table: Student_Enrolment
id: '#3'
operation: Except
output: '#1.semester_name'
predicate: 'Predicate [ #2.semester_id = #1.semester_id ]'
"
9fd7819b14bde9ee74ec0e3209b223ce84e293f99d29e2ac8a51f4ac4e6a787c,"Except Predicate [ T.semester_id = B.semester_id ] Output [ B.semester_name ]
  In: Scan Table [ Student_Enrolment ] Output [ semester_id ]
  In: Scan Table [ Semesters ] Output [ semester_name , semester_id ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.semester_id = #1.semester_id ]"", ""output"": ""#1.semester_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Semesters"", ""output"": ""semester_name , semester_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""semester_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: semester_name , semester_id
  table: Semesters
- id: '#2'
  operation: Scan Table
  output: semester_id
  table: Student_Enrolment
id: '#3'
operation: Except
output: '#1.semester_name'
predicate: 'Predicate [ #2.semester_id = #1.semester_id ]'
"
ca275588e6a1888e3ee9ac925a1f679efdc98638946b70168e6eb08bd0b42247,"Join Predicate [ B.course_id = T.course_id ] Distinct [ true ] Output [ T.course_name ]
  In: Scan Table [ Courses ] Output [ course_id , course_name ]
  In: Scan Table [ Student_Enrolment_Courses ] Output [ course_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.course_id = #2.course_id ] Distinct [ true ]"", ""output"": ""#2.course_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment_Courses"", ""output"": ""course_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""course_id , course_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: course_id
  table: Student_Enrolment_Courses
- id: '#2'
  operation: Scan Table
  output: course_id , course_name
  table: Courses
id: '#3'
operation: Join
output: '#2.course_name'
predicate: 'Predicate [ #1.course_id = #2.course_id ] Distinct [ true ]'
"
c3c0c78ed6a2f30afcfd3f309300640fd3f03dc8619ee2ab43d1b39f24566e90,"Join Predicate [ B.course_id = T.course_id ] Distinct [ true ] Output [ T.course_name ]
  In: Scan Table [ Courses ] Output [ course_id , course_name ]
  In: Scan Table [ Student_Enrolment_Courses ] Output [ course_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.course_id = #2.course_id ] Distinct [ true ]"", ""output"": ""#2.course_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment_Courses"", ""output"": ""course_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""course_id , course_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: course_id
  table: Student_Enrolment_Courses
- id: '#2'
  operation: Scan Table
  output: course_id , course_name
  table: Courses
id: '#3'
operation: Join
output: '#2.course_name'
predicate: 'Predicate [ #1.course_id = #2.course_id ] Distinct [ true ]'
"
1bd94e2f18aa0acb7fb193440870a60c58d392889f7f5282908b639d56d1d35e,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , course_name ]
  In: Aggregate GroupBy [ course_name ] Output [ countstar AS Count_Star , course_name ]
    In: Join Predicate [ B.course_id = T.course_id ] Output [ T.course_name ]
      In: Scan Table [ Courses ] Output [ course_id , course_name ]
      In: Scan Table [ Student_Enrolment_Courses ] Output [ course_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , course_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ course_name ]"", ""output"": ""countstar AS Count_Star , course_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.course_id = #2.course_id ]"", ""output"": ""#2.course_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment_Courses"", ""output"": ""course_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""course_id , course_name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: course_id
      table: Student_Enrolment_Courses
    - id: '#2'
      operation: Scan Table
      output: course_id , course_name
      table: Courses
    id: '#3'
    operation: Join
    output: '#2.course_name'
    predicate: 'Predicate [ #1.course_id = #2.course_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , course_name
  predicate: GroupBy [ course_name ]
id: '#5'
operation: TopSort
output: Count_Star , course_name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
8d8d7be0915ab938d82fc0dc6b68687fa8a87c94b363531168932afc2034e978,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , course_name ]
  In: Aggregate GroupBy [ course_name ] Output [ countstar AS Count_Star , course_name ]
    In: Join Predicate [ B.course_id = T.course_id ] Output [ T.course_name ]
      In: Scan Table [ Courses ] Output [ course_id , course_name ]
      In: Scan Table [ Student_Enrolment_Courses ] Output [ course_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , course_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ course_name ]"", ""output"": ""countstar AS Count_Star , course_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.course_id = #2.course_id ]"", ""output"": ""#2.course_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment_Courses"", ""output"": ""course_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Courses"", ""output"": ""course_id , course_name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: course_id
      table: Student_Enrolment_Courses
    - id: '#2'
      operation: Scan Table
      output: course_id , course_name
      table: Courses
    id: '#3'
    operation: Join
    output: '#2.course_name'
    predicate: 'Predicate [ #1.course_id = #2.course_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , course_name
  predicate: GroupBy [ course_name ]
id: '#5'
operation: TopSort
output: Count_Star , course_name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
90fe37982799391287e4f0d346699f1b44e07bfa60c82d7570607cd1983a3094,"Except Predicate [ B.last_name = T.last_name ] Output [ B.last_name ]
  In: Join Predicate [ B.student_id = T.student_id ] Distinct [ true ] Output [ T.last_name ]
    In: Scan Table [ Students ] Output [ last_name , student_id ]
    In: Scan Table [ Student_Enrolment ] Output [ student_id ]
  In: Join Predicate [ B.address_id = T.current_address_id ] Distinct [ true ] Output [ T.last_name ]
    In: Scan Table [ Students ] Output [ current_address_id , last_name ]
    In: Scan Table [ Addresses ] Predicate [ state_province_county = 'NorthCarolina' ] Output [ address_id , state_province_county ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.last_name = #6.last_name ]"", ""output"": ""#3.last_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.address_id = #2.current_address_id ] Distinct [ true ]"", ""output"": ""#2.last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""predicate"": ""Predicate [ state_province_county = 'NorthCarolina' ]"", ""output"": ""address_id , state_province_county""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""current_address_id , last_name""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.student_id = #5.student_id ] Distinct [ true ]"", ""output"": ""#5.last_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""last_name , student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: address_id , state_province_county
    predicate: Predicate [ state_province_county = 'NorthCarolina' ]
    table: Addresses
  - id: '#2'
    operation: Scan Table
    output: current_address_id , last_name
    table: Students
  id: '#3'
  operation: Join
  output: '#2.last_name'
  predicate: 'Predicate [ #1.address_id = #2.current_address_id ] Distinct [ true
    ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: student_id
    table: Student_Enrolment
  - id: '#5'
    operation: Scan Table
    output: last_name , student_id
    table: Students
  id: '#6'
  operation: Join
  output: '#5.last_name'
  predicate: 'Predicate [ #4.student_id = #5.student_id ] Distinct [ true ]'
id: '#7'
operation: Except
output: '#3.last_name'
predicate: 'Predicate [ #3.last_name = #6.last_name ]'
"
c0a96b9f9d0925f4b25d2753c394e50199efd3b2e713af2553e63e9a993cd92f,"Except Predicate [ B.last_name = T.last_name ] Output [ B.last_name ]
  In: Join Predicate [ B.student_id = T.student_id ] Distinct [ true ] Output [ T.last_name ]
    In: Scan Table [ Students ] Output [ last_name , student_id ]
    In: Scan Table [ Student_Enrolment ] Output [ student_id ]
  In: Join Predicate [ B.address_id = T.current_address_id ] Distinct [ true ] Output [ T.last_name ]
    In: Scan Table [ Students ] Output [ current_address_id , last_name ]
    In: Scan Table [ Addresses ] Predicate [ state_province_county = 'NorthCarolina' ] Output [ address_id , state_province_county ]","{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.last_name = #6.last_name ]"", ""output"": ""#3.last_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.address_id = #2.current_address_id ] Distinct [ true ]"", ""output"": ""#2.last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""predicate"": ""Predicate [ state_province_county = 'NorthCarolina' ]"", ""output"": ""address_id , state_province_county""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""current_address_id , last_name""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.student_id = #5.student_id ] Distinct [ true ]"", ""output"": ""#5.last_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""student_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""last_name , student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: address_id , state_province_county
    predicate: Predicate [ state_province_county = 'NorthCarolina' ]
    table: Addresses
  - id: '#2'
    operation: Scan Table
    output: current_address_id , last_name
    table: Students
  id: '#3'
  operation: Join
  output: '#2.last_name'
  predicate: 'Predicate [ #1.address_id = #2.current_address_id ] Distinct [ true
    ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: student_id
    table: Student_Enrolment
  - id: '#5'
    operation: Scan Table
    output: last_name , student_id
    table: Students
  id: '#6'
  operation: Join
  output: '#5.last_name'
  predicate: 'Predicate [ #4.student_id = #5.student_id ] Distinct [ true ]'
id: '#7'
operation: Except
output: '#3.last_name'
predicate: 'Predicate [ #3.last_name = #6.last_name ]'
"
681cf03b6d36068143ee1116a534b9ea3ea9ab0b38428280e350f80987598ba7,"Filter Predicate [ Count_Star >= 2 ] Output [ transcript_id , transcript_date ]
  In: Join Predicate [ B.transcript_id = T.transcript_id ] Output [ B.transcript_id , B.Count_Star , T.transcript_date ]
    In: Scan Table [ Transcripts ] Output [ transcript_id , transcript_date ]
    In: Aggregate GroupBy [ transcript_id ] Output [ countstar AS Count_Star , transcript_id ]
      In: Scan Table [ Transcript_Contents ] Output [ transcript_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""transcript_id , transcript_date"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.transcript_id = #3.transcript_id ]"", ""output"": ""#2.transcript_id , #2.Count_Star , #3.transcript_date"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ transcript_id ]"", ""output"": ""countstar AS Count_Star , transcript_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcript_Contents"", ""output"": ""transcript_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_id , transcript_date""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: transcript_id
      table: Transcript_Contents
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , transcript_id
    predicate: GroupBy [ transcript_id ]
  - id: '#3'
    operation: Scan Table
    output: transcript_id , transcript_date
    table: Transcripts
  id: '#4'
  operation: Join
  output: '#2.transcript_id , #2.Count_Star , #3.transcript_date'
  predicate: 'Predicate [ #2.transcript_id = #3.transcript_id ]'
id: '#5'
operation: Filter
output: transcript_id , transcript_date
predicate: Predicate [ Count_Star >= 2 ]
"
f354038a754fe4726aab53423b47fd7259de7b16d4e90b949c9f3f0fe7c097a5,"Filter Predicate [ Count_Star >= 2 ] Output [ transcript_id , transcript_date ]
  In: Join Predicate [ B.transcript_id = T.transcript_id ] Output [ B.transcript_id , B.Count_Star , T.transcript_date ]
    In: Scan Table [ Transcripts ] Output [ transcript_id , transcript_date ]
    In: Aggregate GroupBy [ transcript_id ] Output [ countstar AS Count_Star , transcript_id ]
      In: Scan Table [ Transcript_Contents ] Output [ transcript_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""transcript_id , transcript_date"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.transcript_id = #3.transcript_id ]"", ""output"": ""#2.transcript_id , #2.Count_Star , #3.transcript_date"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ transcript_id ]"", ""output"": ""countstar AS Count_Star , transcript_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcript_Contents"", ""output"": ""transcript_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_id , transcript_date""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: transcript_id
      table: Transcript_Contents
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , transcript_id
    predicate: GroupBy [ transcript_id ]
  - id: '#3'
    operation: Scan Table
    output: transcript_id , transcript_date
    table: Transcripts
  id: '#4'
  operation: Join
  output: '#2.transcript_id , #2.Count_Star , #3.transcript_date'
  predicate: 'Predicate [ #2.transcript_id = #3.transcript_id ]'
id: '#5'
operation: Filter
output: transcript_id , transcript_date
predicate: Predicate [ Count_Star >= 2 ]
"
12f83d872b4996b26a5511d6910db085bcd48e6656dcaef27eb62b3424a06ca9,"Scan Table [ Students ] Predicate [ first_name = 'Timmothy' AND last_name = 'Ward' ] Output [ first_name , last_name , cell_mobile_number ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""predicate"": ""Predicate [ first_name = 'Timmothy' AND last_name = 'Ward' ]"", ""output"": ""first_name , last_name , cell_mobile_number""}","id: '#1'
operation: Scan Table
output: first_name , last_name , cell_mobile_number
predicate: Predicate [ first_name = 'Timmothy' AND last_name = 'Ward' ]
table: Students
"
6e07e3442e971836451c6b5d8270702979d958da915172bf10e273487e3e254d,"Scan Table [ Students ] Predicate [ first_name = 'timmothy' AND last_name = 'ward' ] Output [ first_name , last_name , cell_mobile_number ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""predicate"": ""Predicate [ first_name = 'timmothy' AND last_name = 'ward' ]"", ""output"": ""first_name , last_name , cell_mobile_number""}","id: '#1'
operation: Scan Table
output: first_name , last_name , cell_mobile_number
predicate: Predicate [ first_name = 'timmothy' AND last_name = 'ward' ]
table: Students
"
13402275c28ea205994823c1db8e3dc7acb229431deaad3cb2954b8df3778978,"TopSort Rows [ 1 ] OrderBy [ date_first_registered ASC ] Output [ middle_name , first_name , last_name , date_first_registered ]
  In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , date_first_registered ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ date_first_registered ASC ]"", ""output"": ""middle_name , first_name , last_name , date_first_registered"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , date_first_registered""}]}","children:
- id: '#1'
  operation: Scan Table
  output: middle_name , first_name , last_name , date_first_registered
  table: Students
id: '#2'
operation: TopSort
output: middle_name , first_name , last_name , date_first_registered
predicate: Rows [ 1 ] OrderBy [ date_first_registered ASC ]
"
c072e76619b9b9ee950cec35cf5f953243537d799f59ec4fca100dcca366c081,"TopSort Rows [ 1 ] OrderBy [ date_first_registered ASC ] Output [ middle_name , first_name , last_name , date_first_registered ]
  In: Scan Table [ Students ] Output [ middle_name , first_name , last_name , date_first_registered ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ date_first_registered ASC ]"", ""output"": ""middle_name , first_name , last_name , date_first_registered"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , first_name , last_name , date_first_registered""}]}","children:
- id: '#1'
  operation: Scan Table
  output: middle_name , first_name , last_name , date_first_registered
  table: Students
id: '#2'
operation: TopSort
output: middle_name , first_name , last_name , date_first_registered
predicate: Rows [ 1 ] OrderBy [ date_first_registered ASC ]
"
e7e55a8fa3c545c49218fac804bb17a8f183588046d59a33f56a1e69d025ff83,"TopSort Rows [ 1 ] OrderBy [ date_left ASC ] Output [ middle_name , date_left , first_name , last_name ]
  In: Scan Table [ Students ] Output [ middle_name , date_left , first_name , last_name ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ date_left ASC ]"", ""output"": ""middle_name , date_left , first_name , last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , date_left , first_name , last_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: middle_name , date_left , first_name , last_name
  table: Students
id: '#2'
operation: TopSort
output: middle_name , date_left , first_name , last_name
predicate: Rows [ 1 ] OrderBy [ date_left ASC ]
"
9eb49aca2584d05d0366be17ba34ccfb07f238dffed751db48a4e86346eb6789,"TopSort Rows [ 1 ] OrderBy [ date_left ASC ] Output [ middle_name , date_left , first_name , last_name ]
  In: Scan Table [ Students ] Output [ middle_name , date_left , first_name , last_name ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ date_left ASC ]"", ""output"": ""middle_name , date_left , first_name , last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""middle_name , date_left , first_name , last_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: middle_name , date_left , first_name , last_name
  table: Students
id: '#2'
operation: TopSort
output: middle_name , date_left , first_name , last_name
predicate: Rows [ 1 ] OrderBy [ date_left ASC ]
"
621f50d37306c6e356a4de3df6e3793856ee7f9d9ab9b053e9890cfa5db56c89,"Scan Table [ Students ] Predicate [ current_address_id <> permanent_address_id ] Output [ permanent_address_id , current_address_id , first_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""predicate"": ""Predicate [ current_address_id <> permanent_address_id ]"", ""output"": ""permanent_address_id , current_address_id , first_name""}","id: '#1'
operation: Scan Table
output: permanent_address_id , current_address_id , first_name
predicate: Predicate [ current_address_id <> permanent_address_id ]
table: Students
"
73c8b1da8ff7be1c1d0af01653242378ba5b079a8bde31662382b9a99834ae05,"Scan Table [ Students ] Predicate [ current_address_id <> permanent_address_id ] Output [ permanent_address_id , current_address_id , first_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""predicate"": ""Predicate [ current_address_id <> permanent_address_id ]"", ""output"": ""permanent_address_id , current_address_id , first_name""}","id: '#1'
operation: Scan Table
output: permanent_address_id , current_address_id , first_name
predicate: Predicate [ current_address_id <> permanent_address_id ]
table: Students
"
5a1add434252fa8ef88afe242d0e6f6da6ebe21eab7ebb70940db2d4060acb6e,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ address_id , line_2 , Count_Star , line_1 ]
  In: Join Predicate [ B.current_address_id = T.address_id ] Output [ B.Count_Star , T.line_2 , T.address_id , T.line_1 ]
    In: Scan Table [ Addresses ] Output [ address_id , line_2 , line_1 ]
    In: Aggregate GroupBy [ current_address_id ] Output [ countstar AS Count_Star , current_address_id ]
      In: Scan Table [ Students ] Output [ current_address_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""address_id , line_2 , Count_Star , line_1"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.current_address_id = #3.address_id ]"", ""output"": ""#2.Count_Star , #3.line_2 , #3.address_id , #3.line_1"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ current_address_id ]"", ""output"": ""countstar AS Count_Star , current_address_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""current_address_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""output"": ""address_id , line_2 , line_1""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: current_address_id
      table: Students
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , current_address_id
    predicate: GroupBy [ current_address_id ]
  - id: '#3'
    operation: Scan Table
    output: address_id , line_2 , line_1
    table: Addresses
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.line_2 , #3.address_id , #3.line_1'
  predicate: 'Predicate [ #2.current_address_id = #3.address_id ]'
id: '#5'
operation: TopSort
output: address_id , line_2 , Count_Star , line_1
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
c61132133c0884369b3656e64742fefba5bafb269a5d2e9604eed2bd4d7792f7,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ address_id , line_2 , Count_Star , line_1 ]
  In: Join Predicate [ B.current_address_id = T.address_id ] Output [ B.Count_Star , T.line_2 , T.address_id , T.line_1 ]
    In: Scan Table [ Addresses ] Output [ address_id , line_2 , line_1 ]
    In: Aggregate GroupBy [ current_address_id ] Output [ countstar AS Count_Star , current_address_id ]
      In: Scan Table [ Students ] Output [ current_address_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""address_id , line_2 , Count_Star , line_1"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.current_address_id = #3.address_id ]"", ""output"": ""#2.Count_Star , #3.line_2 , #3.address_id , #3.line_1"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ current_address_id ]"", ""output"": ""countstar AS Count_Star , current_address_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""current_address_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""output"": ""address_id , line_2 , line_1""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: current_address_id
      table: Students
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , current_address_id
    predicate: GroupBy [ current_address_id ]
  - id: '#3'
    operation: Scan Table
    output: address_id , line_2 , line_1
    table: Addresses
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.line_2 , #3.address_id , #3.line_1'
  predicate: 'Predicate [ #2.current_address_id = #3.address_id ]'
id: '#5'
operation: TopSort
output: address_id , line_2 , Count_Star , line_1
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
8671937b8fca85e18cd7d84da33377f4105cc302be5b0d30e884478c99e61450,"Aggregate Output [ AVG(transcript_date) AS Avg_transcript_date ]
  In: Scan Table [ Transcripts ] Output [ transcript_date ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(transcript_date) AS Avg_transcript_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: transcript_date
  table: Transcripts
id: '#2'
operation: Aggregate
output: AVG(transcript_date) AS Avg_transcript_date
"
c3597c57608e6709f8aa5590f37792720cf006026f950415914855999b49a2dc,"Aggregate Output [ AVG(transcript_date) AS Avg_transcript_date ]
  In: Scan Table [ Transcripts ] Output [ transcript_date ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(transcript_date) AS Avg_transcript_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: transcript_date
  table: Transcripts
id: '#2'
operation: Aggregate
output: AVG(transcript_date) AS Avg_transcript_date
"
d381b46013f0591ed9f55bae1c24b89d012b6cca147b787e06954fb2f9f1d091,"TopSort Rows [ 1 ] OrderBy [ transcript_date ASC ] Output [ other_details , transcript_date ]
  In: Scan Table [ Transcripts ] Output [ other_details , transcript_date ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ transcript_date ASC ]"", ""output"": ""other_details , transcript_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""other_details , transcript_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: other_details , transcript_date
  table: Transcripts
id: '#2'
operation: TopSort
output: other_details , transcript_date
predicate: Rows [ 1 ] OrderBy [ transcript_date ASC ]
"
f120ceebe63b91cf7d8ec2153a05da63c2f6a2cb3b1402da0f1772c73a21307e,"TopSort Rows [ 1 ] OrderBy [ transcript_date ASC ] Output [ other_details , transcript_date ]
  In: Scan Table [ Transcripts ] Output [ other_details , transcript_date ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ transcript_date ASC ]"", ""output"": ""other_details , transcript_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""other_details , transcript_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: other_details , transcript_date
  table: Transcripts
id: '#2'
operation: TopSort
output: other_details , transcript_date
predicate: Rows [ 1 ] OrderBy [ transcript_date ASC ]
"
4d616fdb35747a6d6392a417df2d25850f46e59e5970a943e380befec0675e3a,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Transcripts ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Transcripts
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
523fbe361abc1311f6b3f07e9edf236519a70dbd66130b8dce011bcb8d76bd5e,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Transcripts ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Transcripts
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
ce82a2bc66cd458fd38b1b6325e2c841b5eb71ebe89e613ef8d2356e65d99a3b,"TopSort Rows [ 1 ] OrderBy [ transcript_date DESC ] Output [ transcript_date ]
  In: Scan Table [ Transcripts ] Output [ transcript_date ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ transcript_date DESC ]"", ""output"": ""transcript_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: transcript_date
  table: Transcripts
id: '#2'
operation: TopSort
output: transcript_date
predicate: Rows [ 1 ] OrderBy [ transcript_date DESC ]
"
e3cd6248e6e7f1dba56b3d1440d38872d8d0c60b3c205be143bf0e682bee3268,"TopSort Rows [ 1 ] OrderBy [ transcript_date DESC ] Output [ transcript_date ]
  In: Scan Table [ Transcripts ] Output [ transcript_date ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ transcript_date DESC ]"", ""output"": ""transcript_date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: transcript_date
  table: Transcripts
id: '#2'
operation: TopSort
output: transcript_date
predicate: Rows [ 1 ] OrderBy [ transcript_date DESC ]
"
73eb7b4c3f37bf11cedc8f329393c4d8a8e8cfe20fd3345a5a445897b86fa329,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ student_course_id , Count_Star ]
  In: Aggregate GroupBy [ student_course_id ] Output [ student_course_id , countstar AS Count_Star ]
    In: Scan Table [ Transcript_Contents ] Output [ student_course_id ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""student_course_id , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_course_id ]"", ""output"": ""student_course_id , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcript_Contents"", ""output"": ""student_course_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: student_course_id
    table: Transcript_Contents
  id: '#2'
  operation: Aggregate
  output: student_course_id , countstar AS Count_Star
  predicate: GroupBy [ student_course_id ]
id: '#3'
operation: TopSort
output: student_course_id , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
3a3c210329f066c16ae725a134bcf591f4cb70fa224a580ef0a2c17a0f9f0c2a,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ student_course_id , Count_Star ]
  In: Aggregate GroupBy [ student_course_id ] Output [ student_course_id , countstar AS Count_Star ]
    In: Scan Table [ Transcript_Contents ] Output [ student_course_id ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""student_course_id , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_course_id ]"", ""output"": ""student_course_id , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcript_Contents"", ""output"": ""student_course_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: student_course_id
    table: Transcript_Contents
  id: '#2'
  operation: Aggregate
  output: student_course_id , countstar AS Count_Star
  predicate: GroupBy [ student_course_id ]
id: '#3'
operation: TopSort
output: student_course_id , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
bd844dd1bbe595ee1aa0d5da9010030323680dc2b4a5b47d15a2dd2bd4796d8b,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ] Output [ transcript_id , transcript_date ]
  In: Join Predicate [ T.transcript_id = B.transcript_id ] Output [ B.transcript_date , Count_Star , T.transcript_id ]
    In: Aggregate GroupBy [ transcript_id ] Output [ countstar AS Count_Star , transcript_id ]
      In: Scan Table [ Transcript_Contents ] Output [ transcript_id ]
    In: Scan Table [ Transcripts ] Output [ transcript_id , transcript_date ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ]"", ""output"": ""transcript_id , transcript_date"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.transcript_id = #1.transcript_id ]"", ""output"": ""#1.transcript_date , Count_Star , #3.transcript_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_id , transcript_date""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ transcript_id ]"", ""output"": ""countstar AS Count_Star , transcript_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Transcript_Contents"", ""output"": ""transcript_id""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: transcript_id , transcript_date
    table: Transcripts
  - children:
    - id: '#2'
      operation: Scan Table
      output: transcript_id
      table: Transcript_Contents
    id: '#3'
    operation: Aggregate
    output: countstar AS Count_Star , transcript_id
    predicate: GroupBy [ transcript_id ]
  id: '#4'
  operation: Join
  output: '#1.transcript_date , Count_Star , #3.transcript_id'
  predicate: 'Predicate [ #3.transcript_id = #1.transcript_id ]'
id: '#5'
operation: TopSort
output: transcript_id , transcript_date
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ]
"
b4b4ae10d25e46d7369817827ed4141e9c701e7046aefa27d6f88b73baff0a32,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ] Output [ transcript_id , transcript_date ]
  In: Join Predicate [ T.transcript_id = B.transcript_id ] Output [ B.transcript_date , Count_Star , T.transcript_id ]
    In: Aggregate GroupBy [ transcript_id ] Output [ countstar AS Count_Star , transcript_id ]
      In: Scan Table [ Transcript_Contents ] Output [ transcript_id ]
    In: Scan Table [ Transcripts ] Output [ transcript_id , transcript_date ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ]"", ""output"": ""transcript_id , transcript_date"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.transcript_id = #1.transcript_id ]"", ""output"": ""#1.transcript_date , Count_Star , #3.transcript_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Transcripts"", ""output"": ""transcript_id , transcript_date""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ transcript_id ]"", ""output"": ""countstar AS Count_Star , transcript_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Transcript_Contents"", ""output"": ""transcript_id""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: transcript_id , transcript_date
    table: Transcripts
  - children:
    - id: '#2'
      operation: Scan Table
      output: transcript_id
      table: Transcript_Contents
    id: '#3'
    operation: Aggregate
    output: countstar AS Count_Star , transcript_id
    predicate: GroupBy [ transcript_id ]
  id: '#4'
  operation: Join
  output: '#1.transcript_date , Count_Star , #3.transcript_id'
  predicate: 'Predicate [ #3.transcript_id = #1.transcript_id ]'
id: '#5'
operation: TopSort
output: transcript_id , transcript_date
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ]
"
ab348f161bbbba695ed592adb3a2971ae4a97acac0250ed0130c2c730c9403f5,"Join Predicate [ B.semester_id = T.semester_id ] Distinct [ true ] Output [ B.semester_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Distinct [ true ] Output [ T.semester_id ]
    In: Scan Table [ Student_Enrolment ] Output [ degree_program_id , semester_id ]
    In: Scan Table [ Degree_Programs ] Predicate [ degree_summary_name = 'Bachelor' ] Output [ degree_summary_name , degree_program_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Distinct [ true ] Output [ T.semester_id ]
    In: Scan Table [ Student_Enrolment ] Output [ degree_program_id , semester_id ]
    In: Scan Table [ Degree_Programs ] Predicate [ degree_summary_name = 'Master' ] Output [ degree_summary_name , degree_program_id ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.semester_id = #6.semester_id ] Distinct [ true ]"", ""output"": ""#3.semester_id"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.degree_program_id = #2.degree_program_id ] Distinct [ true ]"", ""output"": ""#2.semester_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Predicate [ degree_summary_name = 'Master' ]"", ""output"": ""degree_summary_name , degree_program_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id , semester_id""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.degree_program_id = #5.degree_program_id ] Distinct [ true ]"", ""output"": ""#5.semester_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Predicate [ degree_summary_name = 'Bachelor' ]"", ""output"": ""degree_summary_name , degree_program_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id , semester_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    predicate: Predicate [ degree_summary_name = 'Master' ]
    table: Degree_Programs
  - id: '#2'
    operation: Scan Table
    output: degree_program_id , semester_id
    table: Student_Enrolment
  id: '#3'
  operation: Join
  output: '#2.semester_id'
  predicate: 'Predicate [ #1.degree_program_id = #2.degree_program_id ] Distinct [
    true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    predicate: Predicate [ degree_summary_name = 'Bachelor' ]
    table: Degree_Programs
  - id: '#5'
    operation: Scan Table
    output: degree_program_id , semester_id
    table: Student_Enrolment
  id: '#6'
  operation: Join
  output: '#5.semester_id'
  predicate: 'Predicate [ #4.degree_program_id = #5.degree_program_id ] Distinct [
    true ]'
id: '#7'
operation: Join
output: '#3.semester_id'
predicate: 'Predicate [ #3.semester_id = #6.semester_id ] Distinct [ true ]'
"
51f9a9d3a8314bf9ecb1b1a87c9575af07e01bf2c3ca056692feb0849a94c29f,"Join Predicate [ B.semester_id = T.semester_id ] Distinct [ true ] Output [ B.semester_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Distinct [ true ] Output [ T.semester_id ]
    In: Scan Table [ Student_Enrolment ] Output [ degree_program_id , semester_id ]
    In: Scan Table [ Degree_Programs ] Predicate [ degree_summary_name = 'Bachelor' ] Output [ degree_summary_name , degree_program_id ]
  In: Join Predicate [ B.degree_program_id = T.degree_program_id ] Distinct [ true ] Output [ T.semester_id ]
    In: Scan Table [ Student_Enrolment ] Output [ degree_program_id , semester_id ]
    In: Scan Table [ Degree_Programs ] Predicate [ degree_summary_name = 'Master' ] Output [ degree_summary_name , degree_program_id ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.semester_id = #6.semester_id ] Distinct [ true ]"", ""output"": ""#3.semester_id"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.degree_program_id = #2.degree_program_id ] Distinct [ true ]"", ""output"": ""#2.semester_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Predicate [ degree_summary_name = 'Master' ]"", ""output"": ""degree_summary_name , degree_program_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id , semester_id""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.degree_program_id = #5.degree_program_id ] Distinct [ true ]"", ""output"": ""#5.semester_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Degree_Programs"", ""predicate"": ""Predicate [ degree_summary_name = 'Bachelor' ]"", ""output"": ""degree_summary_name , degree_program_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Student_Enrolment"", ""output"": ""degree_program_id , semester_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    predicate: Predicate [ degree_summary_name = 'Master' ]
    table: Degree_Programs
  - id: '#2'
    operation: Scan Table
    output: degree_program_id , semester_id
    table: Student_Enrolment
  id: '#3'
  operation: Join
  output: '#2.semester_id'
  predicate: 'Predicate [ #1.degree_program_id = #2.degree_program_id ] Distinct [
    true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: degree_summary_name , degree_program_id
    predicate: Predicate [ degree_summary_name = 'Bachelor' ]
    table: Degree_Programs
  - id: '#5'
    operation: Scan Table
    output: degree_program_id , semester_id
    table: Student_Enrolment
  id: '#6'
  operation: Join
  output: '#5.semester_id'
  predicate: 'Predicate [ #4.degree_program_id = #5.degree_program_id ] Distinct [
    true ]'
id: '#7'
operation: Join
output: '#3.semester_id'
predicate: 'Predicate [ #3.semester_id = #6.semester_id ] Distinct [ true ]'
"
6269b3c79bb884695b183d76877a2391ef7ff843fd60ae69ef86d1a04074438f,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Students ] Distinct [ true ] Output [ current_address_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""predicate"": ""Distinct [ true ]"", ""output"": ""current_address_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: current_address_id
  predicate: Distinct [ true ]
  table: Students
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
94c692894c8dd9304581db7b6d26ff3423973cb28e3474fb0a4dc1d552bbfe43,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Students ] Distinct [ true ] Output [ current_address_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""predicate"": ""Distinct [ true ]"", ""output"": ""current_address_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: current_address_id
  predicate: Distinct [ true ]
  table: Students
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
57ea74cc58d20b8ed0db92d1be3dd10e1fe48807fd6ec9ac1060e4fd1c7553be,"Sort OrderBy [ other_student_details DESC ] Output [ other_student_details ]
  In: Scan Table [ Students ] Output [ other_student_details ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ other_student_details DESC ]"", ""output"": ""other_student_details"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""other_student_details""}]}","children:
- id: '#1'
  operation: Scan Table
  output: other_student_details
  table: Students
id: '#2'
operation: Sort
output: other_student_details
predicate: OrderBy [ other_student_details DESC ]
"
dbbfb1513b82391695d42babdf470c3cde68b3f2eb3e972fc216e917ea6f1c48,"Sort OrderBy [ other_student_details DESC ] Output [ other_student_details ]
  In: Scan Table [ Students ] Output [ other_student_details ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ other_student_details DESC ]"", ""output"": ""other_student_details"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""other_student_details""}]}","children:
- id: '#1'
  operation: Scan Table
  output: other_student_details
  table: Students
id: '#2'
operation: Sort
output: other_student_details
predicate: OrderBy [ other_student_details DESC ]
"
b969e259f189aeb41d02cf9f2331af01a76604299a70247de3c91c3b863f3aa9,"Scan Table [ Sections ] Predicate [ section_name = 'h' ] Output [ section_description , section_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""predicate"": ""Predicate [ section_name = 'h' ]"", ""output"": ""section_description , section_name""}","id: '#1'
operation: Scan Table
output: section_description , section_name
predicate: Predicate [ section_name = 'h' ]
table: Sections
"
e8521737692fde7573e1b72b45538c2b1f7ff3b663744abb8012787667193b91,"Scan Table [ Sections ] Predicate [ section_name = 'h' ] Output [ section_description , section_name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Sections"", ""predicate"": ""Predicate [ section_name = 'h' ]"", ""output"": ""section_description , section_name""}","id: '#1'
operation: Scan Table
output: section_description , section_name
predicate: Predicate [ section_name = 'h' ]
table: Sections
"
a6c5ac5f34c3767df7ecfa7d8e8fa26d6aa081e9ae9a06b31887b21badbbe39f,"Filter Predicate [ country = 'haiti' OR cell_mobile_number = '09700166582' ] Output [ first_name ]
  In: Join Predicate [ T.permanent_address_id = B.address_id ] Output [ T.first_name , T.cell_mobile_number , B.country ]
    In: Scan Table [ Students ] Output [ cell_mobile_number , permanent_address_id , first_name ]
    In: Scan Table [ Addresses ] Output [ address_id , country ]","{""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ country = 'haiti' OR cell_mobile_number = '09700166582' ]"", ""output"": ""first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.permanent_address_id = #1.address_id ]"", ""output"": ""#2.first_name , #2.cell_mobile_number , #1.country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""output"": ""address_id , country""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""cell_mobile_number , permanent_address_id , first_name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: address_id , country
    table: Addresses
  - id: '#2'
    operation: Scan Table
    output: cell_mobile_number , permanent_address_id , first_name
    table: Students
  id: '#3'
  operation: Join
  output: '#2.first_name , #2.cell_mobile_number , #1.country'
  predicate: 'Predicate [ #2.permanent_address_id = #1.address_id ]'
id: '#4'
operation: Filter
output: first_name
predicate: Predicate [ country = 'haiti' OR cell_mobile_number = '09700166582' ]
"
d405cd0b531fc7126168977471c87d89140774601d8b1779ff31df5e3fee25af,"Filter Predicate [ country = 'haiti' OR cell_mobile_number = '09700166582' ] Output [ first_name ]
  In: Join Predicate [ T.permanent_address_id = B.address_id ] Output [ T.first_name , T.cell_mobile_number , B.country ]
    In: Scan Table [ Students ] Output [ cell_mobile_number , permanent_address_id , first_name ]
    In: Scan Table [ Addresses ] Output [ address_id , country ]","{""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ country = 'haiti' OR cell_mobile_number = '09700166582' ]"", ""output"": ""first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.permanent_address_id = #1.address_id ]"", ""output"": ""#2.first_name , #2.cell_mobile_number , #1.country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Addresses"", ""output"": ""address_id , country""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Students"", ""output"": ""cell_mobile_number , permanent_address_id , first_name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: address_id , country
    table: Addresses
  - id: '#2'
    operation: Scan Table
    output: cell_mobile_number , permanent_address_id , first_name
    table: Students
  id: '#3'
  operation: Join
  output: '#2.first_name , #2.cell_mobile_number , #1.country'
  predicate: 'Predicate [ #2.permanent_address_id = #1.address_id ]'
id: '#4'
operation: Filter
output: first_name
predicate: Predicate [ country = 'haiti' OR cell_mobile_number = '09700166582' ]
"
83393630216ab26b6fab91f2a2babda82dc85c460b21671995a86dfb3b40b45c,"Sort OrderBy [ Title ASC ] Output [ Title ]
  In: Scan Table [ Cartoon ] Output [ Title ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Title ASC ]"", ""output"": ""Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Title
  table: Cartoon
id: '#2'
operation: Sort
output: Title
predicate: OrderBy [ Title ASC ]
"
a43b9140724231649b4ddbab7229b1aa922a38418117b56994c953b9d5eaa96c,"Sort OrderBy [ Title ASC ] Output [ Title ]
  In: Scan Table [ Cartoon ] Output [ Title ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Title ASC ]"", ""output"": ""Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Title
  table: Cartoon
id: '#2'
operation: Sort
output: Title
predicate: OrderBy [ Title ASC ]
"
dbbbe82c51d0aeb8bf96cdb30d579d6edc0ac34004b3f04fcea2e9b6f8fdb3c1,"Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Title ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Title""}","id: '#1'
operation: Scan Table
output: Directed_by , Title
predicate: Predicate [ Directed_by = 'Ben Jones' ]
table: Cartoon
"
bc01be7fce4867f664d6814ae240bfc097023a0d8bcc6196449757b046ef01a3,"Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Title ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Title""}","id: '#1'
operation: Scan Table
output: Directed_by , Title
predicate: Predicate [ Directed_by = 'Ben Jones' ]
table: Cartoon
"
916a509f0948cff8af77cf3a8a8905ca4e5a6dafdc6ddb386cc27f529e15253e,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Cartoon ] Predicate [ Written_by = 'Joseph Kuhr' ] Output [ Written_by ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Written_by = 'Joseph Kuhr' ]"", ""output"": ""Written_by""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Written_by
  predicate: Predicate [ Written_by = 'Joseph Kuhr' ]
  table: Cartoon
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
4fc046eaa05a69a8810508b57112267cd85a6423220b08115f978f1ece9484c9,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Cartoon ] Predicate [ Written_by = 'Joseph Kuhr' ] Output [ Written_by ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Written_by = 'Joseph Kuhr' ]"", ""output"": ""Written_by""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Written_by
  predicate: Predicate [ Written_by = 'Joseph Kuhr' ]
  table: Cartoon
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
7a5f7faeae28debe426151c8e824472857dbcfafd49de540e5824d750266034f,"Sort OrderBy [ Original_air_date ASC ] Output [ Directed_by , Original_air_date , Title ]
  In: Scan Table [ Cartoon ] Output [ Directed_by , Original_air_date , Title ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Original_air_date ASC ]"", ""output"": ""Directed_by , Original_air_date , Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Directed_by , Original_air_date , Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Directed_by , Original_air_date , Title
  table: Cartoon
id: '#2'
operation: Sort
output: Directed_by , Original_air_date , Title
predicate: OrderBy [ Original_air_date ASC ]
"
fb9cbfdceb6a3362120b75015476a3bdc879639245debb86984e0edc8b39b35e,"Sort OrderBy [ Original_air_date ASC ] Output [ Directed_by , Original_air_date , Title ]
  In: Scan Table [ Cartoon ] Output [ Directed_by , Original_air_date , Title ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Original_air_date ASC ]"", ""output"": ""Directed_by , Original_air_date , Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Directed_by , Original_air_date , Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Directed_by , Original_air_date , Title
  table: Cartoon
id: '#2'
operation: Sort
output: Directed_by , Original_air_date , Title
predicate: OrderBy [ Original_air_date ASC ]
"
8c22247b347d4e3a016d6cf1c8b13a1bf4dc34f953f590d860f9f4901eaf98fd,"Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' ] Output [ Directed_by , Title ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' ]"", ""output"": ""Directed_by , Title""}","id: '#1'
operation: Scan Table
output: Directed_by , Title
predicate: Predicate [ Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
  ]
table: Cartoon
"
845de45b965c3b3970089c390863ec33e835ecd3505b2b6734403f82f9483f47,"Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' ] Output [ Directed_by , Title ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti' ]"", ""output"": ""Directed_by , Title""}","id: '#1'
operation: Scan Table
output: Directed_by , Title
predicate: Predicate [ Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'
  ]
table: Cartoon
"
da8cd4bbfc74b3388a037e8ca179f7adc6b22bbe197285d40fb33fa0f18b6fb2,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Country , Count_Star ]
  In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
    In: Scan Table [ TV_Channel ] Output [ Country ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Country , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""Country""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Country
    table: TV_Channel
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Country
  predicate: GroupBy [ Country ]
id: '#3'
operation: TopSort
output: Country , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
95a64f969855e9817719f0ec18278eba85b5e86a4c520343b59cce05a0f425e1,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Country , Count_Star ]
  In: Aggregate GroupBy [ Country ] Output [ countstar AS Count_Star , Country ]
    In: Scan Table [ TV_Channel ] Output [ Country ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Country , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Country ]"", ""output"": ""countstar AS Count_Star , Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""Country""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Country
    table: TV_Channel
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Country
  predicate: GroupBy [ Country ]
id: '#3'
operation: TopSort
output: Country , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
48aba4e97ed55fd23a7b7f378e185c1043acaaacc7cc04191774930eac1a2559,"Join Output [ B.Count_Dist_series_name , T.Count_Dist_Content ]
  In: Aggregate Output [ COUNT(DISTINCT Content) AS Count_Dist_Content ]
    In: Scan Table [ TV_Channel ] Distinct [ true ] Output [ Content ]
  In: Aggregate Output [ COUNT(DISTINCT series_name) AS Count_Dist_series_name ]
    In: Scan Table [ TV_Channel ] Distinct [ true ] Output [ series_name ]","{""id"": ""#5"", ""operation"": ""Join"", ""output"": ""#2.Count_Dist_series_name , #4.Count_Dist_Content"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT series_name) AS Count_Dist_series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Distinct [ true ]"", ""output"": ""series_name""}]}, {""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Content) AS Count_Dist_Content"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Content""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: series_name
    predicate: Distinct [ true ]
    table: TV_Channel
  id: '#2'
  operation: Aggregate
  output: COUNT(DISTINCT series_name) AS Count_Dist_series_name
- children:
  - id: '#3'
    operation: Scan Table
    output: Content
    predicate: Distinct [ true ]
    table: TV_Channel
  id: '#4'
  operation: Aggregate
  output: COUNT(DISTINCT Content) AS Count_Dist_Content
id: '#5'
operation: Join
output: '#2.Count_Dist_series_name , #4.Count_Dist_Content'
"
083277424cc72b24b52d3e290a538f559469a57cd0a48ed24160555273b717de,"Join Output [ B.Count_Dist_series_name , T.Count_Dist_Content ]
  In: Aggregate Output [ COUNT(DISTINCT Content) AS Count_Dist_Content ]
    In: Scan Table [ TV_Channel ] Distinct [ true ] Output [ Content ]
  In: Aggregate Output [ COUNT(DISTINCT series_name) AS Count_Dist_series_name ]
    In: Scan Table [ TV_Channel ] Distinct [ true ] Output [ series_name ]","{""id"": ""#5"", ""operation"": ""Join"", ""output"": ""#2.Count_Dist_series_name , #4.Count_Dist_Content"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT series_name) AS Count_Dist_series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Distinct [ true ]"", ""output"": ""series_name""}]}, {""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Content) AS Count_Dist_Content"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Content""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: series_name
    predicate: Distinct [ true ]
    table: TV_Channel
  id: '#2'
  operation: Aggregate
  output: COUNT(DISTINCT series_name) AS Count_Dist_series_name
- children:
  - id: '#3'
    operation: Scan Table
    output: Content
    predicate: Distinct [ true ]
    table: TV_Channel
  id: '#4'
  operation: Aggregate
  output: COUNT(DISTINCT Content) AS Count_Dist_Content
id: '#5'
operation: Join
output: '#2.Count_Dist_series_name , #4.Count_Dist_Content'
"
2ecd289b6fa8307e7eaee7f29ec9f80701fd8cde59870b09aa00e307ff7ad0f0,"Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ series_name , Content ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""series_name , Content""}","id: '#1'
operation: Scan Table
output: series_name , Content
predicate: Predicate [ series_name = 'Sky Radio' ]
table: TV_Channel
"
d0c1275920417bc3e083a6ffa3814d5dbd98e9791189c35e9c83e797092aa2c2,"Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ series_name , Content ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""series_name , Content""}","id: '#1'
operation: Scan Table
output: series_name , Content
predicate: Predicate [ series_name = 'Sky Radio' ]
table: TV_Channel
"
c88891737613a4d053e155f72e36d99af9f1e6c24735c66f1070319dacf69229,"Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ series_name , Package_Option ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""series_name , Package_Option""}","id: '#1'
operation: Scan Table
output: series_name , Package_Option
predicate: Predicate [ series_name = 'Sky Radio' ]
table: TV_Channel
"
5cc42c682b5f85b204d17a77cab55f313f590e22ca5b0bdcd9e04dc092cfa830,"Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ series_name , Package_Option ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""series_name , Package_Option""}","id: '#1'
operation: Scan Table
output: series_name , Package_Option
predicate: Predicate [ series_name = 'Sky Radio' ]
table: TV_Channel
"
42c58734b7b2117d31f7c8ae5a8fcb3ee80e9712f2b48d534c7896cc0edf9681,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ TV_Channel ] Predicate [ Language = 'English' ] Output [ Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language
  predicate: Predicate [ Language = 'English' ]
  table: TV_Channel
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
a44b097d3f024e039d7a10d6b30bd8c5732316000159a260fef28e3ea1b0471c,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ TV_Channel ] Predicate [ Language = 'English' ] Output [ Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language
  predicate: Predicate [ Language = 'English' ]
  table: TV_Channel
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
37e62b783f69df48aa3ec8d6e649c65292819d95b61eac824d791d914bc56cf0,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ Language , Count_Star ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Scan Table [ TV_Channel ] Output [ Language ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""Language , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""Language""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language
    table: TV_Channel
  id: '#2'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#3'
operation: TopSort
output: Language , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
b4bf1579616f30d8191511ad0538c28b203ba0c36abbed3cf7d6fb7af1590c25,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ Language , Count_Star ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Scan Table [ TV_Channel ] Output [ Language ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""Language , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""Language""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language
    table: TV_Channel
  id: '#2'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#3'
operation: TopSort
output: Language , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
"
3020ddb5623bc3540cb9939da3f22bd066bc0e6679425deaf65e0faadfecbd31,"Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
  In: Scan Table [ TV_Channel ] Output [ Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language
  table: TV_Channel
id: '#2'
operation: Aggregate
output: Language , countstar AS Count_Star
predicate: GroupBy [ Language ]
"
ab86e3891f95a394dbe0237a414d25eb65194fc3e353b440873e332010727c71,"Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
  In: Scan Table [ TV_Channel ] Output [ Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language
  table: TV_Channel
id: '#2'
operation: Aggregate
output: Language , countstar AS Count_Star
predicate: GroupBy [ Language ]
"
312ecca6914f2c420ffd5f838287d2bd37e5588d4adca8b138affdbf865a7f5c,"Join Predicate [ B.Channel = T.id ] Output [ T.series_name ]
  In: Scan Table [ TV_Channel ] Output [ id , series_name ]
  In: Scan Table [ Cartoon ] Predicate [ Title = 'The Rise of the Blue Beetle!' ] Output [ Channel , Title ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ]"", ""output"": ""#2.series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Title = 'The Rise of the Blue Beetle!' ]"", ""output"": ""Channel , Title""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Channel , Title
  predicate: Predicate [ Title = 'The Rise of the Blue Beetle!' ]
  table: Cartoon
- id: '#2'
  operation: Scan Table
  output: id , series_name
  table: TV_Channel
id: '#3'
operation: Join
output: '#2.series_name'
predicate: 'Predicate [ #1.Channel = #2.id ]'
"
cbabb0f4acf5348df82086edafeb33e346d67ddb5ecf5f10dedfd657044434a3,"Join Predicate [ B.Channel = T.id ] Output [ T.series_name ]
  In: Scan Table [ TV_Channel ] Output [ id , series_name ]
  In: Scan Table [ Cartoon ] Predicate [ Title = 'The Rise of the Blue Beetle!' ] Output [ Channel , Title ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ]"", ""output"": ""#2.series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Title = 'The Rise of the Blue Beetle!' ]"", ""output"": ""Channel , Title""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Channel , Title
  predicate: Predicate [ Title = 'The Rise of the Blue Beetle!' ]
  table: Cartoon
- id: '#2'
  operation: Scan Table
  output: id , series_name
  table: TV_Channel
id: '#3'
operation: Join
output: '#2.series_name'
predicate: 'Predicate [ #1.Channel = #2.id ]'
"
67ad6ffc709d3e44ff5f84c9af0a4d2e16a89919d6c6f723b770165a6314e930,"Join Predicate [ B.id = T.Channel ] Output [ T.Title ]
  In: Scan Table [ Cartoon ] Output [ Channel , Title ]
  In: Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ id , series_name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.id = #2.Channel ]"", ""output"": ""#2.Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""id , series_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Channel , Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , series_name
  predicate: Predicate [ series_name = 'Sky Radio' ]
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Channel , Title
  table: Cartoon
id: '#3'
operation: Join
output: '#2.Title'
predicate: 'Predicate [ #1.id = #2.Channel ]'
"
cc65ca5065252da2020bf5040dd74af587bed02d69e4980d862e8216f0a767b3,"Join Predicate [ B.id = T.Channel ] Output [ T.Title ]
  In: Scan Table [ Cartoon ] Output [ Channel , Title ]
  In: Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ id , series_name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.id = #2.Channel ]"", ""output"": ""#2.Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""id , series_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Channel , Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , series_name
  predicate: Predicate [ series_name = 'Sky Radio' ]
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Channel , Title
  table: Cartoon
id: '#3'
operation: Join
output: '#2.Title'
predicate: 'Predicate [ #1.id = #2.Channel ]'
"
4af53503bdc21b5142677ed8df8d47ab8618267cae7b31f47a0953918d948d2a,"Sort OrderBy [ Rating ASC ] Output [ Rating , Episode ]
  In: Scan Table [ TV_series ] Output [ Rating , Episode ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Rating ASC ]"", ""output"": ""Rating , Episode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Rating , Episode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Rating , Episode
  table: TV_series
id: '#2'
operation: Sort
output: Rating , Episode
predicate: OrderBy [ Rating ASC ]
"
4b0a022ab96f7a4a516115996f72cb33a909184ac542d5a74415bce23b7c24a8,"Sort OrderBy [ Rating ASC ] Output [ Rating , Episode ]
  In: Scan Table [ TV_series ] Output [ Rating , Episode ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Rating ASC ]"", ""output"": ""Rating , Episode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Rating , Episode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Rating , Episode
  table: TV_series
id: '#2'
operation: Sort
output: Rating , Episode
predicate: OrderBy [ Rating ASC ]
"
3b9f0f36bbd855cfee9bb2d646369dc4a8280d0621cd411f99915cdaaac6739a,"TopSort Rows [ 3 ] OrderBy [ Rating DESC ] Output [ Rating , Episode ]
  In: Scan Table [ TV_series ] Output [ Rating , Episode ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ Rating DESC ]"", ""output"": ""Rating , Episode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Rating , Episode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Rating , Episode
  table: TV_series
id: '#2'
operation: TopSort
output: Rating , Episode
predicate: Rows [ 3 ] OrderBy [ Rating DESC ]
"
680ba48e48448ad6bc596a4098af77b8f44684a2676f89ea8faf15035aa7e516,"TopSort Rows [ 3 ] OrderBy [ Rating DESC ] Output [ Rating , Episode ]
  In: Scan Table [ TV_series ] Output [ Rating , Episode ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ Rating DESC ]"", ""output"": ""Rating , Episode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Rating , Episode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Rating , Episode
  table: TV_series
id: '#2'
operation: TopSort
output: Rating , Episode
predicate: Rows [ 3 ] OrderBy [ Rating DESC ]
"
2e383ebce0c62942782b4210e6a1afa87716bc51cd92d0f5cdb21c1209ef2847,"Aggregate Output [ MAX(Share) AS Max_Share , MIN(Share) AS Min_Share ]
  In: Scan Table [ TV_series ] Output [ Share ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Share) AS Max_Share , MIN(Share) AS Min_Share"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Share""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Share
  table: TV_series
id: '#2'
operation: Aggregate
output: MAX(Share) AS Max_Share , MIN(Share) AS Min_Share
"
0d0142deb8de8f5219172ede8c642c91ddae82dd31bf4d779468a6fd3c876d10,"Aggregate Output [ MAX(Share) AS Max_Share , MIN(Share) AS Min_Share ]
  In: Scan Table [ TV_series ] Output [ Share ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Share) AS Max_Share , MIN(Share) AS Min_Share"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Share""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Share
  table: TV_series
id: '#2'
operation: Aggregate
output: MAX(Share) AS Max_Share , MIN(Share) AS Min_Share
"
3c6d87c1ae7bbff92689d133bff4b619478545457a0610d9ed0e01a8819082c3,"Scan Table [ TV_series ] Predicate [ Episode = 'A Love of a Lifetime' ] Output [ Air_Date , Episode ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""predicate"": ""Predicate [ Episode = 'A Love of a Lifetime' ]"", ""output"": ""Air_Date , Episode""}","id: '#1'
operation: Scan Table
output: Air_Date , Episode
predicate: Predicate [ Episode = 'A Love of a Lifetime' ]
table: TV_series
"
e76fdac7b3d43bfbb98970b3914f8afa9705c4d943431cbb16e627f0c60ee527,"Scan Table [ TV_series ] Predicate [ Episode = 'A Love of a Lifetime' ] Output [ Air_Date , Episode ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""predicate"": ""Predicate [ Episode = 'A Love of a Lifetime' ]"", ""output"": ""Air_Date , Episode""}","id: '#1'
operation: Scan Table
output: Air_Date , Episode
predicate: Predicate [ Episode = 'A Love of a Lifetime' ]
table: TV_series
"
e0000e04d7b1f0b4787cee1a9cad5012af99c9d21b96a02abe5b69467345fa8b,"Scan Table [ TV_series ] Predicate [ Episode = 'A Love of a Lifetime' ] Output [ Episode , Weekly_Rank ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""predicate"": ""Predicate [ Episode = 'A Love of a Lifetime' ]"", ""output"": ""Episode , Weekly_Rank""}","id: '#1'
operation: Scan Table
output: Episode , Weekly_Rank
predicate: Predicate [ Episode = 'A Love of a Lifetime' ]
table: TV_series
"
73165e09ea1c7c3e8c2058b4d3ae9211344a042bda319db31c06871c272683e2,"Scan Table [ TV_series ] Predicate [ Episode = 'A Love of a Lifetime' ] Output [ Episode , Weekly_Rank ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""predicate"": ""Predicate [ Episode = 'A Love of a Lifetime' ]"", ""output"": ""Episode , Weekly_Rank""}","id: '#1'
operation: Scan Table
output: Episode , Weekly_Rank
predicate: Predicate [ Episode = 'A Love of a Lifetime' ]
table: TV_series
"
c8b3f1ae55f0334741eb68f99155ba70466e54b6e14fdf47419475fbf841cada,"Join Predicate [ B.Channel = T.id ] Output [ T.series_name ]
  In: Scan Table [ TV_Channel ] Output [ id , series_name ]
  In: Scan Table [ TV_series ] Predicate [ Episode = 'A Love of a Lifetime' ] Output [ Episode , Channel ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ]"", ""output"": ""#2.series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""predicate"": ""Predicate [ Episode = 'A Love of a Lifetime' ]"", ""output"": ""Episode , Channel""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Episode , Channel
  predicate: Predicate [ Episode = 'A Love of a Lifetime' ]
  table: TV_series
- id: '#2'
  operation: Scan Table
  output: id , series_name
  table: TV_Channel
id: '#3'
operation: Join
output: '#2.series_name'
predicate: 'Predicate [ #1.Channel = #2.id ]'
"
dce5580fa604cef1b7013efde88ea414c1480828f0c15e0c53b05b4ef6ff025b,"Join Predicate [ B.Channel = T.id ] Output [ T.series_name ]
  In: Scan Table [ TV_Channel ] Output [ id , series_name ]
  In: Scan Table [ TV_series ] Predicate [ Episode = 'A Love of a Lifetime' ] Output [ Episode , Channel ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ]"", ""output"": ""#2.series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""predicate"": ""Predicate [ Episode = 'A Love of a Lifetime' ]"", ""output"": ""Episode , Channel""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Episode , Channel
  predicate: Predicate [ Episode = 'A Love of a Lifetime' ]
  table: TV_series
- id: '#2'
  operation: Scan Table
  output: id , series_name
  table: TV_Channel
id: '#3'
operation: Join
output: '#2.series_name'
predicate: 'Predicate [ #1.Channel = #2.id ]'
"
e75fca8acdfc313eda670c300d1d3931ee4ab7bc8f3ae5fd929fe9f48b3b1e4e,"Join Predicate [ B.id = T.Channel ] Output [ T.Episode ]
  In: Scan Table [ TV_series ] Output [ Channel , Episode ]
  In: Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ id , series_name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.id = #2.Channel ]"", ""output"": ""#2.Episode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""id , series_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Channel , Episode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , series_name
  predicate: Predicate [ series_name = 'Sky Radio' ]
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Channel , Episode
  table: TV_series
id: '#3'
operation: Join
output: '#2.Episode'
predicate: 'Predicate [ #1.id = #2.Channel ]'
"
61b6eaccc94d6d2900ca8a1d8163d9c358c6a9d2034e1abc1e0f04df540300a6,"Join Predicate [ B.id = T.Channel ] Output [ T.Episode ]
  In: Scan Table [ TV_series ] Output [ Channel , Episode ]
  In: Scan Table [ TV_Channel ] Predicate [ series_name = 'Sky Radio' ] Output [ id , series_name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.id = #2.Channel ]"", ""output"": ""#2.Episode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ series_name = 'Sky Radio' ]"", ""output"": ""id , series_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_series"", ""output"": ""Channel , Episode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , series_name
  predicate: Predicate [ series_name = 'Sky Radio' ]
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Channel , Episode
  table: TV_series
id: '#3'
operation: Join
output: '#2.Episode'
predicate: 'Predicate [ #1.id = #2.Channel ]'
"
4ab4d8bcc47a07a29ea3496adc3b48879e72fe4cfc5f8a0a2d496c8918645efc,"Aggregate GroupBy [ Directed_by ] Output [ Directed_by , countstar AS Count_Star ]
  In: Scan Table [ Cartoon ] Output [ Directed_by ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Directed_by ]"", ""output"": ""Directed_by , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Directed_by""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Directed_by
  table: Cartoon
id: '#2'
operation: Aggregate
output: Directed_by , countstar AS Count_Star
predicate: GroupBy [ Directed_by ]
"
e835c56211f4c9c6c4b47bb293e2ebc043d28551a4456f405a8473f234ffbbfa,"Aggregate GroupBy [ Directed_by ] Output [ Directed_by , countstar AS Count_Star ]
  In: Scan Table [ Cartoon ] Output [ Directed_by ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Directed_by ]"", ""output"": ""Directed_by , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Directed_by""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Directed_by
  table: Cartoon
id: '#2'
operation: Aggregate
output: Directed_by , countstar AS Count_Star
predicate: GroupBy [ Directed_by ]
"
6cb24d73bd9d6854c0c145accf850e49e98a77696072a3e9f52e58a90d56a1ae,"TopSort Rows [ 1 ] OrderBy [ Original_air_date DESC ] Output [ Original_air_date , Production_code , Channel ]
  In: Scan Table [ Cartoon ] Output [ Original_air_date , Production_code , Channel ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Original_air_date DESC ]"", ""output"": ""Original_air_date , Production_code , Channel"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Original_air_date , Production_code , Channel""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Original_air_date , Production_code , Channel
  table: Cartoon
id: '#2'
operation: TopSort
output: Original_air_date , Production_code , Channel
predicate: Rows [ 1 ] OrderBy [ Original_air_date DESC ]
"
bd73120de1d8750d59209a5ddee60a05cb1e802dcf56822cc36df4a5c48897a2,"TopSort Rows [ 1 ] OrderBy [ Original_air_date DESC ] Output [ Original_air_date , Production_code , Channel ]
  In: Scan Table [ Cartoon ] Output [ Original_air_date , Production_code , Channel ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Original_air_date DESC ]"", ""output"": ""Original_air_date , Production_code , Channel"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""output"": ""Original_air_date , Production_code , Channel""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Original_air_date , Production_code , Channel
  table: Cartoon
id: '#2'
operation: TopSort
output: Original_air_date , Production_code , Channel
predicate: Rows [ 1 ] OrderBy [ Original_air_date DESC ]
"
bf9ddbd285a985059dab1d4b5e14d0f1eb5b056a7d8547bf2194f977af1ee913,"Scan Table [ TV_Channel ] Predicate [ Hight_definition_TV = 'yes' ] Output [ series_name , Package_Option , Hight_definition_TV ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ Hight_definition_TV = 'yes' ]"", ""output"": ""series_name , Package_Option , Hight_definition_TV""}","id: '#1'
operation: Scan Table
output: series_name , Package_Option , Hight_definition_TV
predicate: Predicate [ Hight_definition_TV = 'yes' ]
table: TV_Channel
"
f0e91e76e174c126de5c9c0d6245a9120aaa03ae0ff59b30f94247798be5350f,"Scan Table [ TV_Channel ] Predicate [ Hight_definition_TV = 'yes' ] Output [ series_name , Package_Option , Hight_definition_TV ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ Hight_definition_TV = 'yes' ]"", ""output"": ""series_name , Package_Option , Hight_definition_TV""}","id: '#1'
operation: Scan Table
output: series_name , Package_Option , Hight_definition_TV
predicate: Predicate [ Hight_definition_TV = 'yes' ]
table: TV_Channel
"
64753597dc7d6d2a32db6eda3baa31e7ee2d2fb6ecd4b920fe5b970040457805,"Join Predicate [ B.Channel = T.id ] Output [ T.Country ]
  In: Scan Table [ TV_Channel ] Output [ id , Country ]
  In: Scan Table [ Cartoon ] Predicate [ Written_by = 'Todd Casey' ] Output [ Written_by , Channel ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ]"", ""output"": ""#2.Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Written_by = 'Todd Casey' ]"", ""output"": ""Written_by , Channel""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , Country""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Written_by , Channel
  predicate: Predicate [ Written_by = 'Todd Casey' ]
  table: Cartoon
- id: '#2'
  operation: Scan Table
  output: id , Country
  table: TV_Channel
id: '#3'
operation: Join
output: '#2.Country'
predicate: 'Predicate [ #1.Channel = #2.id ]'
"
0c75ccfe4d4b0ec47c5677e32113c1b28aaf51d4a93834a03fe8f1674d1f650d,"Join Predicate [ B.Channel = T.id ] Output [ T.Country ]
  In: Scan Table [ TV_Channel ] Output [ id , Country ]
  In: Scan Table [ Cartoon ] Predicate [ Written_by = 'Todd Casey' ] Output [ Written_by , Channel ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ]"", ""output"": ""#2.Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Written_by = 'Todd Casey' ]"", ""output"": ""Written_by , Channel""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , Country""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Written_by , Channel
  predicate: Predicate [ Written_by = 'Todd Casey' ]
  table: Cartoon
- id: '#2'
  operation: Scan Table
  output: id , Country
  table: TV_Channel
id: '#3'
operation: Join
output: '#2.Country'
predicate: 'Predicate [ #1.Channel = #2.id ]'
"
dc9fa93cafe7bbc0200c3ea1a4db537478df1395d50ebeb37cca2c2cf91f79c6,"Except Predicate [ B.Country = T.Country ] Output [ B.Country ]
  In: Join Predicate [ B.Channel = T.id ] Output [ T.Country ]
    In: Scan Table [ TV_Channel ] Output [ id , Country ]
    In: Scan Table [ Cartoon ] Predicate [ Written_by = 'Todd Casey' ] Output [ Written_by , Channel ]
  In: Scan Table [ TV_Channel ] Distinct [ true ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Country = #4.Country ]"", ""output"": ""#1.Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Country""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Channel = #3.id ]"", ""output"": ""#3.Country"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Written_by = 'Todd Casey' ]"", ""output"": ""Written_by , Channel""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , Country""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country
  predicate: Distinct [ true ]
  table: TV_Channel
- children:
  - id: '#2'
    operation: Scan Table
    output: Written_by , Channel
    predicate: Predicate [ Written_by = 'Todd Casey' ]
    table: Cartoon
  - id: '#3'
    operation: Scan Table
    output: id , Country
    table: TV_Channel
  id: '#4'
  operation: Join
  output: '#3.Country'
  predicate: 'Predicate [ #2.Channel = #3.id ]'
id: '#5'
operation: Except
output: '#1.Country'
predicate: 'Predicate [ #1.Country = #4.Country ]'
"
e544df3d47b4c732fba6bbe69959eb06d71a4b9701f1c2d772f07a2bd1a3e3b4,"Except Predicate [ B.Country = T.Country ] Output [ B.Country ]
  In: Join Predicate [ B.Channel = T.id ] Output [ T.Country ]
    In: Scan Table [ TV_Channel ] Output [ id , Country ]
    In: Scan Table [ Cartoon ] Predicate [ Written_by = 'Todd Casey' ] Output [ Written_by , Channel ]
  In: Scan Table [ TV_Channel ] Distinct [ true ] Output [ Country ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Country = #4.Country ]"", ""output"": ""#1.Country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Country""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Channel = #3.id ]"", ""output"": ""#3.Country"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Written_by = 'Todd Casey' ]"", ""output"": ""Written_by , Channel""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , Country""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: Country
  predicate: Distinct [ true ]
  table: TV_Channel
- children:
  - id: '#2'
    operation: Scan Table
    output: Written_by , Channel
    predicate: Predicate [ Written_by = 'Todd Casey' ]
    table: Cartoon
  - id: '#3'
    operation: Scan Table
    output: id , Country
    table: TV_Channel
  id: '#4'
  operation: Join
  output: '#3.Country'
  predicate: 'Predicate [ #2.Channel = #3.id ]'
id: '#5'
operation: Except
output: '#1.Country'
predicate: 'Predicate [ #1.Country = #4.Country ]'
"
1e794a6002b4eb201d69fd387733237b9ee039ee07e7e045ed7bcba1df37db8f,"Intersect Predicate [ B.series_name = T.series_name ] Output [ B.Country , B.series_name ]
  In: Join Predicate [ B.Channel = T.id ] Output [ T.series_name , T.Country ]
    In: Scan Table [ TV_Channel ] Output [ id , series_name , Country ]
    In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Channel ]
  In: Join Predicate [ B.Channel = T.id ] Distinct [ true ] Output [ T.Country , T.series_name ]
    In: Scan Table [ TV_Channel ] Output [ id , series_name , Country ]
    In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Michael Chang' ] Output [ Directed_by , Channel ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.series_name = #6.series_name ]"", ""output"": ""#3.Country , #3.series_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ] Distinct [ true ]"", ""output"": ""#2.Country , #2.series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Michael Chang' ]"", ""output"": ""Directed_by , Channel""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name , Country""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Channel = #5.id ]"", ""output"": ""#5.series_name , #5.Country"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Channel""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name , Country""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Directed_by , Channel
    predicate: Predicate [ Directed_by = 'Michael Chang' ]
    table: Cartoon
  - id: '#2'
    operation: Scan Table
    output: id , series_name , Country
    table: TV_Channel
  id: '#3'
  operation: Join
  output: '#2.Country , #2.series_name'
  predicate: 'Predicate [ #1.Channel = #2.id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Directed_by , Channel
    predicate: Predicate [ Directed_by = 'Ben Jones' ]
    table: Cartoon
  - id: '#5'
    operation: Scan Table
    output: id , series_name , Country
    table: TV_Channel
  id: '#6'
  operation: Join
  output: '#5.series_name , #5.Country'
  predicate: 'Predicate [ #4.Channel = #5.id ]'
id: '#7'
operation: Intersect
output: '#3.Country , #3.series_name'
predicate: 'Predicate [ #3.series_name = #6.series_name ]'
"
e6393c117f414da854c082eff60f93bd0300723381b35c6e2b65aaba840d0ea0,"Intersect Predicate [ B.series_name = T.series_name ] Output [ B.Country , B.series_name ]
  In: Join Predicate [ B.Channel = T.id ] Output [ T.series_name , T.Country ]
    In: Scan Table [ TV_Channel ] Output [ id , series_name , Country ]
    In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Channel ]
  In: Join Predicate [ B.Channel = T.id ] Distinct [ true ] Output [ T.Country , T.series_name ]
    In: Scan Table [ TV_Channel ] Output [ id , series_name , Country ]
    In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Michael Chang' ] Output [ Directed_by , Channel ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.series_name = #6.series_name ]"", ""output"": ""#3.Country , #3.series_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Channel = #2.id ] Distinct [ true ]"", ""output"": ""#2.Country , #2.series_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Michael Chang' ]"", ""output"": ""Directed_by , Channel""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name , Country""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Channel = #5.id ]"", ""output"": ""#5.series_name , #5.Country"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Channel""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , series_name , Country""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Directed_by , Channel
    predicate: Predicate [ Directed_by = 'Michael Chang' ]
    table: Cartoon
  - id: '#2'
    operation: Scan Table
    output: id , series_name , Country
    table: TV_Channel
  id: '#3'
  operation: Join
  output: '#2.Country , #2.series_name'
  predicate: 'Predicate [ #1.Channel = #2.id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: Directed_by , Channel
    predicate: Predicate [ Directed_by = 'Ben Jones' ]
    table: Cartoon
  - id: '#5'
    operation: Scan Table
    output: id , series_name , Country
    table: TV_Channel
  id: '#6'
  operation: Join
  output: '#5.series_name , #5.Country'
  predicate: 'Predicate [ #4.Channel = #5.id ]'
id: '#7'
operation: Intersect
output: '#3.Country , #3.series_name'
predicate: 'Predicate [ #3.series_name = #6.series_name ]'
"
c64e0faa9e89897971fbbb82dd7381df2d0f37bc67ff227a876b71f041eb036f,"Scan Table [ TV_Channel ] Predicate [ Language <> 'English' ] Output [ Language , Country , Pixel_aspect_ratio_PAR ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ Language <> 'English' ]"", ""output"": ""Language , Country , Pixel_aspect_ratio_PAR""}","id: '#1'
operation: Scan Table
output: Language , Country , Pixel_aspect_ratio_PAR
predicate: Predicate [ Language <> 'English' ]
table: TV_Channel
"
216deec7ce39e86c5ef67a4c5259db2aeabae0a3db17c2270cc93df36cee7e30,"Scan Table [ TV_Channel ] Predicate [ Language <> 'English' ] Output [ Language , Country , Pixel_aspect_ratio_PAR ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""predicate"": ""Predicate [ Language <> 'English' ]"", ""output"": ""Language , Country , Pixel_aspect_ratio_PAR""}","id: '#1'
operation: Scan Table
output: Language , Country , Pixel_aspect_ratio_PAR
predicate: Predicate [ Language <> 'English' ]
table: TV_Channel
"
34ae116d68862a3d031e45083c8c14f67053408224f2484c61530216d7152422,"Join Predicate [ B.country = T.country ] Output [ B.id ]
  In: Filter Predicate [ Count_Star > 2 ] Output [ country ]
    In: Aggregate GroupBy [ country ] Output [ countstar as Count_Star , country ]
      In: Scan Table [ TV_Channel ] Output [ id , country ]
  In: Scan Table [ TV_Channel ] Output [ id , country ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.country = #3.country ]"", ""output"": ""#1.id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , country""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""country"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country ]"", ""output"": ""countstar as Count_Star , country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , country""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , country
  table: TV_Channel
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: id , country
      table: TV_Channel
    id: '#2'
    operation: Aggregate
    output: countstar as Count_Star , country
    predicate: GroupBy [ country ]
  id: '#3'
  operation: Filter
  output: country
  predicate: Predicate [ Count_Star > 2 ]
id: '#4'
operation: Join
output: '#1.id'
predicate: 'Predicate [ #1.country = #3.country ]'
"
4030ca9a53a02732ea943743b6fe00d6d8750e215cf82b9ad4d9d63fd796c938,"Join Predicate [ B.country = T.country ] Output [ B.id ]
  In: Filter Predicate [ Count_Star > 2 ] Output [ country ]
    In: Aggregate GroupBy [ country ] Output [ countstar as Count_Star , country ]
      In: Scan Table [ TV_Channel ] Output [ id , country ]
  In: Scan Table [ TV_Channel ] Output [ id , country ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.country = #3.country ]"", ""output"": ""#1.id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , country""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""country"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ country ]"", ""output"": ""countstar as Count_Star , country"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , country""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , country
  table: TV_Channel
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: id , country
      table: TV_Channel
    id: '#2'
    operation: Aggregate
    output: countstar as Count_Star , country
    predicate: GroupBy [ country ]
  id: '#3'
  operation: Filter
  output: country
  predicate: Predicate [ Count_Star > 2 ]
id: '#4'
operation: Join
output: '#1.id'
predicate: 'Predicate [ #1.country = #3.country ]'
"
327bca9bb7bc2bad6f1c5c3550a309028f5d3855e7c1ec6922cdd503aa6bd187,"Except Predicate [ T.Channel = B.id ] Output [ B.id ]
  In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Channel ]
  In: Scan Table [ TV_Channel ] Output [ id ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Channel = #1.id ]"", ""output"": ""#1.id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Channel""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Directed_by , Channel
  predicate: Predicate [ Directed_by = 'Ben Jones' ]
  table: Cartoon
id: '#3'
operation: Except
output: '#1.id'
predicate: 'Predicate [ #2.Channel = #1.id ]'
"
26be22a865b394ee60cdcb1dadda77678afbeceda9793eee650b327d8025b6a4,"Except Predicate [ T.Channel = B.id ] Output [ B.id ]
  In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Channel ]
  In: Scan Table [ TV_Channel ] Output [ id ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Channel = #1.id ]"", ""output"": ""#1.id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Channel""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Directed_by , Channel
  predicate: Predicate [ Directed_by = 'Ben Jones' ]
  table: Cartoon
id: '#3'
operation: Except
output: '#1.id'
predicate: 'Predicate [ #2.Channel = #1.id ]'
"
5916846cb35aee32cb93f7b29358c8341b8cd43935cd8392e41b0cc4bd7f0183,"Except Predicate [ T.Channel IS NULL OR B.id = T.Channel ] Output [ B.Package_Option ]
  In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Channel ]
  In: Scan Table [ TV_Channel ] Output [ id , Package_Option ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Channel IS NULL OR #1.id = #2.Channel ]"", ""output"": ""#1.Package_Option"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , Package_Option""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Channel""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , Package_Option
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Directed_by , Channel
  predicate: Predicate [ Directed_by = 'Ben Jones' ]
  table: Cartoon
id: '#3'
operation: Except
output: '#1.Package_Option'
predicate: 'Predicate [ #2.Channel IS NULL OR #1.id = #2.Channel ]'
"
fe5adb59a95ba76edd9fc8f6822e8954695aa539cb3d1facb8be2529f01ddacf,"Except Predicate [ T.Channel IS NULL OR B.id = T.Channel ] Output [ B.Package_Option ]
  In: Scan Table [ Cartoon ] Predicate [ Directed_by = 'Ben Jones' ] Output [ Directed_by , Channel ]
  In: Scan Table [ TV_Channel ] Output [ id , Package_Option ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Channel IS NULL OR #1.id = #2.Channel ]"", ""output"": ""#1.Package_Option"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""TV_Channel"", ""output"": ""id , Package_Option""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Cartoon"", ""predicate"": ""Predicate [ Directed_by = 'Ben Jones' ]"", ""output"": ""Directed_by , Channel""}]}","children:
- id: '#1'
  operation: Scan Table
  output: id , Package_Option
  table: TV_Channel
- id: '#2'
  operation: Scan Table
  output: Directed_by , Channel
  predicate: Predicate [ Directed_by = 'Ben Jones' ]
  table: Cartoon
id: '#3'
operation: Except
output: '#1.Package_Option'
predicate: 'Predicate [ #2.Channel IS NULL OR #1.id = #2.Channel ]'
"
e7fcce4afab160c8a195796f3ea815d73d529587aa5c18bb9f11330e7cef0a2e,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ poker_player ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: poker_player
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
ad8d6ae8b20c0d4474d54cfe992634403c35dd7cd7909986e366c0e742b93105,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ poker_player ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: poker_player
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
7fddb3f9985c9698f0563fda7153bc19b66174ba26976910b80a60aaf59640a5,"Sort OrderBy [ Earnings DESC ] Output [ Earnings ]
  In: Scan Table [ poker_player ] Output [ Earnings ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Earnings DESC ]"", ""output"": ""Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Earnings
  table: poker_player
id: '#2'
operation: Sort
output: Earnings
predicate: OrderBy [ Earnings DESC ]
"
61f7da4b5c699fa47aef91b666d0b11804b094b4fb440fc88764c661cc7fb277,"Sort OrderBy [ Earnings DESC ] Output [ Earnings ]
  In: Scan Table [ poker_player ] Output [ Earnings ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Earnings DESC ]"", ""output"": ""Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Earnings
  table: poker_player
id: '#2'
operation: Sort
output: Earnings
predicate: OrderBy [ Earnings DESC ]
"
67d0d7311467f93130cc61ed07eb52dea243bb0b8805dada1872d0b4869b620e,"Scan Table [ poker_player ] Output [ Final_Table_Made , Best_Finish ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Final_Table_Made , Best_Finish""}","id: '#1'
operation: Scan Table
output: Final_Table_Made , Best_Finish
table: poker_player
"
501aeb236dcd162233fa7f85eef288c637da8ef7000d13a300b753843ca5d84c,"Scan Table [ poker_player ] Output [ Final_Table_Made , Best_Finish ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Final_Table_Made , Best_Finish""}","id: '#1'
operation: Scan Table
output: Final_Table_Made , Best_Finish
table: poker_player
"
c348d12b01b02a3eddb926cec1d07d17ee281ad2cebf76d0f34fbec50d2a8658,"Aggregate Output [ AVG(Earnings) AS Avg_Earnings ]
  In: Scan Table [ poker_player ] Output [ Earnings ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Earnings) AS Avg_Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Earnings
  table: poker_player
id: '#2'
operation: Aggregate
output: AVG(Earnings) AS Avg_Earnings
"
e7fa38db30c3db68836b1449b6438e029192143eb94fa382df17ec3e016760e1,"Aggregate Output [ AVG(Earnings) AS Avg_Earnings ]
  In: Scan Table [ poker_player ] Output [ Earnings ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Earnings) AS Avg_Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Earnings
  table: poker_player
id: '#2'
operation: Aggregate
output: AVG(Earnings) AS Avg_Earnings
"
4f5e7016459adb9ad44e4ca87c1111a03cc59859b725f473faf61852f6d447b4,"TopSort Rows [ 1 ] OrderBy [ Earnings DESC ] Output [ Money_Rank , Earnings ]
  In: Scan Table [ poker_player ] Output [ Money_Rank , Earnings ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Earnings DESC ]"", ""output"": ""Money_Rank , Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Money_Rank , Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Money_Rank , Earnings
  table: poker_player
id: '#2'
operation: TopSort
output: Money_Rank , Earnings
predicate: Rows [ 1 ] OrderBy [ Earnings DESC ]
"
d3843868bf41d4824aeaf42e48f823c66c1cddefe42f17b1af2797eb10d4404a,"TopSort Rows [ 1 ] OrderBy [ Earnings DESC ] Output [ Money_Rank , Earnings ]
  In: Scan Table [ poker_player ] Output [ Money_Rank , Earnings ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Earnings DESC ]"", ""output"": ""Money_Rank , Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Money_Rank , Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Money_Rank , Earnings
  table: poker_player
id: '#2'
operation: TopSort
output: Money_Rank , Earnings
predicate: Rows [ 1 ] OrderBy [ Earnings DESC ]
"
a9c17fcf19a13f223416ed82289c1000f806514655d35b1590c3ad2d5f84cebf,"Aggregate Output [ MAX(Final_Table_Made) AS Max_Final_Table_Made ]
  In: Scan Table [ poker_player ] Predicate [ Earnings < 200000.0 ] Output [ Final_Table_Made , Earnings ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Final_Table_Made) AS Max_Final_Table_Made"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""predicate"": ""Predicate [ Earnings < 200000.0 ]"", ""output"": ""Final_Table_Made , Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Final_Table_Made , Earnings
  predicate: Predicate [ Earnings < 200000.0 ]
  table: poker_player
id: '#2'
operation: Aggregate
output: MAX(Final_Table_Made) AS Max_Final_Table_Made
"
3102cd9aae10b96ebbf6c9abc056927ab9dbbab64da7a97f17bb5757b07eb70f,"Aggregate Output [ MAX(Final_Table_Made) AS Max_Final_Table_Made ]
  In: Scan Table [ poker_player ] Predicate [ Earnings < 200000.0 ] Output [ Final_Table_Made , Earnings ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Final_Table_Made) AS Max_Final_Table_Made"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""predicate"": ""Predicate [ Earnings < 200000.0 ]"", ""output"": ""Final_Table_Made , Earnings""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Final_Table_Made , Earnings
  predicate: Predicate [ Earnings < 200000.0 ]
  table: poker_player
id: '#2'
operation: Aggregate
output: MAX(Final_Table_Made) AS Max_Final_Table_Made
"
08a69a180305a344c510949c19179114ef27795b2597f6b53a9e8f126b7cde94,"Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Name ]
  In: Scan Table [ people ] Output [ Name , People_ID ]
  In: Scan Table [ poker_player ] Output [ People_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: People_ID
  table: poker_player
- id: '#2'
  operation: Scan Table
  output: Name , People_ID
  table: people
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
"
9e5201c6e248666fa311ea7cccc6d4189470d448be20a0380a4062d80f82c71e,"Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Name ]
  In: Scan Table [ people ] Output [ Name , People_ID ]
  In: Scan Table [ poker_player ] Output [ People_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: People_ID
  table: poker_player
- id: '#2'
  operation: Scan Table
  output: Name , People_ID
  table: people
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
"
3854a4726f08605b3fc8736f407fd3320c4b070be41be27a18da970a13cabf86,"Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Name ]
  In: Scan Table [ people ] Output [ Name , People_ID ]
  In: Scan Table [ poker_player ] Predicate [ Earnings > 300000.0 ] Output [ Earnings , People_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""predicate"": ""Predicate [ Earnings > 300000.0 ]"", ""output"": ""Earnings , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Earnings , People_ID
  predicate: Predicate [ Earnings > 300000.0 ]
  table: poker_player
- id: '#2'
  operation: Scan Table
  output: Name , People_ID
  table: people
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
"
0304ccac6215bdeb68fee72019cb089b06fd44940d8a52dd0a70443824e39952,"Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Name ]
  In: Scan Table [ people ] Output [ Name , People_ID ]
  In: Scan Table [ poker_player ] Predicate [ Earnings > 300000.0 ] Output [ Earnings , People_ID ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""predicate"": ""Predicate [ Earnings > 300000.0 ]"", ""output"": ""Earnings , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Earnings , People_ID
  predicate: Predicate [ Earnings > 300000.0 ]
  table: poker_player
- id: '#2'
  operation: Scan Table
  output: Name , People_ID
  table: people
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
"
044f714d672d32a325bbfb225b0075e090856f30f465f5e162edb51e8f2525c0,"Sort OrderBy [ Final_Table_Made ASC ] Output [ Name , Final_Table_Made ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ B.Final_Table_Made , T.Name ]
    In: Scan Table [ people ] Output [ Name , People_ID ]
    In: Scan Table [ poker_player ] Output [ Final_Table_Made , People_ID ]","{""id"": ""#4"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Final_Table_Made ASC ]"", ""output"": ""Name , Final_Table_Made"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Final_Table_Made , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Final_Table_Made , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Final_Table_Made , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Name , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#1.Final_Table_Made , #2.Name'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: Sort
output: Name , Final_Table_Made
predicate: OrderBy [ Final_Table_Made ASC ]
"
862cf18a84d6b570717481f1cee798370bd820600fed8d9fb547212392fc97d1,"Sort OrderBy [ Final_Table_Made ASC ] Output [ Name , Final_Table_Made ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ B.Final_Table_Made , T.Name ]
    In: Scan Table [ people ] Output [ Name , People_ID ]
    In: Scan Table [ poker_player ] Output [ Final_Table_Made , People_ID ]","{""id"": ""#4"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Final_Table_Made ASC ]"", ""output"": ""Name , Final_Table_Made"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Final_Table_Made , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Final_Table_Made , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Final_Table_Made , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Name , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#1.Final_Table_Made , #2.Name'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: Sort
output: Name , Final_Table_Made
predicate: OrderBy [ Final_Table_Made ASC ]
"
4eaa950c1003fdf45a32673b42ff643ccb4dd6ed5d95e36682f364519dcc349b,"TopSort Rows [ 1 ] OrderBy [ Earnings ASC ] Output [ Earnings , Birth_Date ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ B.Earnings , T.Birth_Date ]
    In: Scan Table [ people ] Output [ Birth_Date , People_ID ]
    In: Scan Table [ poker_player ] Output [ Earnings , People_ID ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Earnings ASC ]"", ""output"": ""Earnings , Birth_Date"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Earnings , #2.Birth_Date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Birth_Date , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Earnings , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Birth_Date , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#1.Earnings , #2.Birth_Date'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: TopSort
output: Earnings , Birth_Date
predicate: Rows [ 1 ] OrderBy [ Earnings ASC ]
"
134c01a812f1d002b8ec3b1bada53172b4e50778eb87d5b24cb776d6a94c731f,"TopSort Rows [ 1 ] OrderBy [ Earnings ASC ] Output [ Earnings , Birth_Date ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ B.Earnings , T.Birth_Date ]
    In: Scan Table [ people ] Output [ Birth_Date , People_ID ]
    In: Scan Table [ poker_player ] Output [ Earnings , People_ID ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Earnings ASC ]"", ""output"": ""Earnings , Birth_Date"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Earnings , #2.Birth_Date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Birth_Date , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Earnings , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Birth_Date , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#1.Earnings , #2.Birth_Date'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: TopSort
output: Earnings , Birth_Date
predicate: Rows [ 1 ] OrderBy [ Earnings ASC ]
"
d01287301b3ab267c9011c0d72455a523c3ac26d89ed5a67dbe3e23e670b9d15,"TopSort Rows [ 1 ] OrderBy [ Height DESC ] Output [ Height , Money_Rank ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Height , B.Money_Rank ]
    In: Scan Table [ people ] Output [ Height , People_ID ]
    In: Scan Table [ poker_player ] Output [ Money_Rank , People_ID ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Height DESC ]"", ""output"": ""Height , Money_Rank"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Height , #1.Money_Rank"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Money_Rank , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Height , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Money_Rank , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Height , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#2.Height , #1.Money_Rank'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: TopSort
output: Height , Money_Rank
predicate: Rows [ 1 ] OrderBy [ Height DESC ]
"
3527f8c88c2c02b87402400adb4ca1df78d5a8ed8137a2e68e5ae161490f83b2,"TopSort Rows [ 1 ] OrderBy [ Height DESC ] Output [ Height , Money_Rank ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Height , B.Money_Rank ]
    In: Scan Table [ people ] Output [ Height , People_ID ]
    In: Scan Table [ poker_player ] Output [ Money_Rank , People_ID ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Height DESC ]"", ""output"": ""Height , Money_Rank"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Height , #1.Money_Rank"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Money_Rank , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Height , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Money_Rank , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Height , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#2.Height , #1.Money_Rank'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: TopSort
output: Height , Money_Rank
predicate: Rows [ 1 ] OrderBy [ Height DESC ]
"
7bcbec7f9317af4cda4f934c99013fba1b27971fdf1e19b737506f1e2bbbadb7,"Aggregate Output [ AVG(Earnings) AS Avg_Earnings ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Earnings ]
    In: Scan Table [ poker_player ] Output [ Earnings , People_ID ]
    In: Scan Table [ people ] Predicate [ Height > 200.0 ] Output [ Height , People_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(Earnings) AS Avg_Earnings"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""predicate"": ""Predicate [ Height > 200.0 ]"", ""output"": ""Height , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Height , People_ID
    predicate: Predicate [ Height > 200.0 ]
    table: people
  - id: '#2'
    operation: Scan Table
    output: Earnings , People_ID
    table: poker_player
  id: '#3'
  operation: Join
  output: '#2.Earnings'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: Aggregate
output: AVG(Earnings) AS Avg_Earnings
"
a1bf2d8958be8dd95641c593f66002a2c88d11a9c30eb564d954c166ea5ddb70,"Aggregate Output [ AVG(Earnings) AS Avg_Earnings ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ T.Earnings ]
    In: Scan Table [ poker_player ] Output [ Earnings , People_ID ]
    In: Scan Table [ people ] Predicate [ Height > 200.0 ] Output [ Height , People_ID ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(Earnings) AS Avg_Earnings"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#2.Earnings"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""predicate"": ""Predicate [ Height > 200.0 ]"", ""output"": ""Height , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Height , People_ID
    predicate: Predicate [ Height > 200.0 ]
    table: people
  - id: '#2'
    operation: Scan Table
    output: Earnings , People_ID
    table: poker_player
  id: '#3'
  operation: Join
  output: '#2.Earnings'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: Aggregate
output: AVG(Earnings) AS Avg_Earnings
"
3ea56ea638859870f74c819e5d8def86954d9136b038c68200c5e910b918ea0b,"Sort OrderBy [ Earnings DESC ] Output [ Name , Earnings ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ B.Earnings , T.Name ]
    In: Scan Table [ people ] Output [ Name , People_ID ]
    In: Scan Table [ poker_player ] Output [ Earnings , People_ID ]","{""id"": ""#4"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Earnings DESC ]"", ""output"": ""Name , Earnings"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Earnings , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Earnings , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Name , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#1.Earnings , #2.Name'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: Sort
output: Name , Earnings
predicate: OrderBy [ Earnings DESC ]
"
3b8ab4e1d255f68608b86f8899d6adfb0367f92a350579daf6bc26437288a126,"Sort OrderBy [ Earnings DESC ] Output [ Name , Earnings ]
  In: Join Predicate [ B.People_ID = T.People_ID ] Output [ B.Earnings , T.Name ]
    In: Scan Table [ people ] Output [ Name , People_ID ]
    In: Scan Table [ poker_player ] Output [ Earnings , People_ID ]","{""id"": ""#4"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Earnings DESC ]"", ""output"": ""Name , Earnings"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Earnings , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""Earnings , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Earnings , People_ID
    table: poker_player
  - id: '#2'
    operation: Scan Table
    output: Name , People_ID
    table: people
  id: '#3'
  operation: Join
  output: '#1.Earnings , #2.Name'
  predicate: 'Predicate [ #1.People_ID = #2.People_ID ]'
id: '#4'
operation: Sort
output: Name , Earnings
predicate: OrderBy [ Earnings DESC ]
"
a007a938175d709e14791598607b8aeb8b640dd14dd48f3e56eb97824e0acacd,"Aggregate GroupBy [ Nationality ] Output [ countstar AS Count_Star , Nationality ]
  In: Scan Table [ people ] Output [ Nationality ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Nationality ]"", ""output"": ""countstar AS Count_Star , Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Nationality""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Nationality
  table: people
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Nationality
predicate: GroupBy [ Nationality ]
"
60381fe18778956685f148ed16d9626f22531748406bdbd7c0c99be5af63cc29,"Aggregate GroupBy [ Nationality ] Output [ countstar AS Count_Star , Nationality ]
  In: Scan Table [ people ] Output [ Nationality ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Nationality ]"", ""output"": ""countstar AS Count_Star , Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Nationality""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Nationality
  table: people
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Nationality
predicate: GroupBy [ Nationality ]
"
073332a5fd4d410cbe407ca5590f3591cff693649f96109da43bc8619671d08b,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Nationality , Count_Star ]
  In: Aggregate GroupBy [ Nationality ] Output [ countstar AS Count_Star , Nationality ]
    In: Scan Table [ people ] Output [ Nationality ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Nationality , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Nationality ]"", ""output"": ""countstar AS Count_Star , Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Nationality""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Nationality
    table: people
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Nationality
  predicate: GroupBy [ Nationality ]
id: '#3'
operation: TopSort
output: Nationality , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
50dd67121490bcdaef67b0fa8e7b7c482ff5154f3c6dd54446ce3ba29ec3e40f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Nationality , Count_Star ]
  In: Aggregate GroupBy [ Nationality ] Output [ countstar AS Count_Star , Nationality ]
    In: Scan Table [ people ] Output [ Nationality ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Nationality , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Nationality ]"", ""output"": ""countstar AS Count_Star , Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Nationality""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Nationality
    table: people
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Nationality
  predicate: GroupBy [ Nationality ]
id: '#3'
operation: TopSort
output: Nationality , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
d5a39686bba741ef689bc307f2c36a0afe1e3e7005626c834320c78d825a40e5,"Filter Predicate [ Count_Star >= 2 ] Output [ Nationality ]
  In: Aggregate GroupBy [ Nationality ] Output [ countstar AS Count_Star , Nationality ]
    In: Scan Table [ people ] Output [ Nationality ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Nationality"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Nationality ]"", ""output"": ""countstar AS Count_Star , Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Nationality""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Nationality
    table: people
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Nationality
  predicate: GroupBy [ Nationality ]
id: '#3'
operation: Filter
output: Nationality
predicate: Predicate [ Count_Star >= 2 ]
"
4d5cee55fec256b8f6850ffd68ea37b824569ff2bdd66b6393e896020179a357,"Filter Predicate [ Count_Star >= 2 ] Output [ Nationality ]
  In: Aggregate GroupBy [ Nationality ] Output [ countstar AS Count_Star , Nationality ]
    In: Scan Table [ people ] Output [ Nationality ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""Nationality"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Nationality ]"", ""output"": ""countstar AS Count_Star , Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Nationality""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Nationality
    table: people
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Nationality
  predicate: GroupBy [ Nationality ]
id: '#3'
operation: Filter
output: Nationality
predicate: Predicate [ Count_Star >= 2 ]
"
f3fa903b24fa8f9dc20a193fcf0256b80e56cd8c75cebe52ed4d28b5badf9486,"Sort OrderBy [ Name ASC ] Output [ Name , Birth_Date ]
  In: Scan Table [ people ] Output [ Name , Birth_Date ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Name ASC ]"", ""output"": ""Name , Birth_Date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , Birth_Date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Birth_Date
  table: people
id: '#2'
operation: Sort
output: Name , Birth_Date
predicate: OrderBy [ Name ASC ]
"
91bee6c64b55ed007541ee7bc3edc5cd2ac530d2f8aa720ebe0a6ac76f71ac0e,"Sort OrderBy [ Name ASC ] Output [ Name , Birth_Date ]
  In: Scan Table [ people ] Output [ Name , Birth_Date ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Name ASC ]"", ""output"": ""Name , Birth_Date"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , Birth_Date""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Birth_Date
  table: people
id: '#2'
operation: Sort
output: Name , Birth_Date
predicate: OrderBy [ Name ASC ]
"
e414d32b5423f613066d3bcdc923aeacd8d20f30e56c3f129024985e74d76087,"Scan Table [ people ] Predicate [ Nationality <> 'Russia' ] Output [ Name , Nationality ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""predicate"": ""Predicate [ Nationality <> 'Russia' ]"", ""output"": ""Name , Nationality""}","id: '#1'
operation: Scan Table
output: Name , Nationality
predicate: Predicate [ Nationality <> 'Russia' ]
table: people
"
dbbf44711e8fd308d37064f71594e0580d43a6aff100d52e2b3c507f986e8094,"Scan Table [ people ] Predicate [ Nationality <> 'Russia' ] Output [ Name , Nationality ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""predicate"": ""Predicate [ Nationality <> 'Russia' ]"", ""output"": ""Name , Nationality""}","id: '#1'
operation: Scan Table
output: Name , Nationality
predicate: Predicate [ Nationality <> 'Russia' ]
table: people
"
7e71dfe9b226654ff253bf9928829d6497f2bd6209adea612d4187885a79975a,"Except Predicate [ T.People_ID IS NULL OR B.People_ID = T.People_ID ] Output [ B.Name ]
  In: Scan Table [ poker_player ] Output [ People_ID ]
  In: Scan Table [ people ] Output [ Name , People_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.People_ID IS NULL OR #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""People_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , People_ID
  table: people
- id: '#2'
  operation: Scan Table
  output: People_ID
  table: poker_player
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.People_ID IS NULL OR #1.People_ID = #2.People_ID ]'
"
cbdbda7f6b5a8cb8a3e91eb569ed7fe4af064e5e9da84de6721c53d11042f4a6,"Except Predicate [ T.People_ID IS NULL OR B.People_ID = T.People_ID ] Output [ B.Name ]
  In: Scan Table [ poker_player ] Output [ People_ID ]
  In: Scan Table [ people ] Output [ Name , People_ID ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.People_ID IS NULL OR #1.People_ID = #2.People_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""output"": ""Name , People_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""poker_player"", ""output"": ""People_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , People_ID
  table: people
- id: '#2'
  operation: Scan Table
  output: People_ID
  table: poker_player
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.People_ID IS NULL OR #1.People_ID = #2.People_ID ]'
"
9a74739b1de108b16cb952da7dc049a7c4df7890b6f39ef2440ff75f46bd86ad,"Aggregate Output [ COUNT(DISTINCT Nationality) AS Count_Dist_Nationality ]
  In: Scan Table [ people ] Distinct [ true ] Output [ Nationality ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Nationality) AS Count_Dist_Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Nationality""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Nationality
  predicate: Distinct [ true ]
  table: people
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Nationality) AS Count_Dist_Nationality
"
fbc04bab781dade7000cb80dc5e8d4b3dfa2941ca1a1e387497976c05365209d,"Aggregate Output [ COUNT(DISTINCT Nationality) AS Count_Dist_Nationality ]
  In: Scan Table [ people ] Distinct [ true ] Output [ Nationality ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Nationality) AS Count_Dist_Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""people"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Nationality""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Nationality
  predicate: Distinct [ true ]
  table: people
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Nationality) AS Count_Dist_Nationality
"
f43bc5903436fd6a4ae16ce9b91ac3a7775e605b398c5ad823d597286507bbf1,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ AREA_CODE_STATE ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""AREA_CODE_STATE"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: AREA_CODE_STATE
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b792df4f0b5acb59b2cc8ad354f46c20b196000a4a1ee857ec47b5beef92fe3f,"Sort OrderBy [ contestant_name DESC ] Output [ contestant_name , contestant_number ]
  In: Scan Table [ CONTESTANTS ] Output [ contestant_name , contestant_number ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ contestant_name DESC ]"", ""output"": ""contestant_name , contestant_number"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""output"": ""contestant_name , contestant_number""}]}","children:
- id: '#1'
  operation: Scan Table
  output: contestant_name , contestant_number
  table: CONTESTANTS
id: '#2'
operation: Sort
output: contestant_name , contestant_number
predicate: OrderBy [ contestant_name DESC ]
"
575ec295377477c9f31c046cc32ced0bff5306588047cf8a44524f07e76db154,"Scan Table [ VOTES ] Output [ phone_number , state , vote_id ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""phone_number , state , vote_id""}","id: '#1'
operation: Scan Table
output: phone_number , state , vote_id
table: VOTES
"
e24254d972f8ecf7aa0697d04ee3434c79327bfec5fcb6eaa7ff5ba5537f66f6,"Aggregate Output [ MIN(area_code) AS Min_area_code , MAX(area_code) AS Max_area_code ]
  In: Scan Table [ AREA_CODE_STATE ] Output [ area_code ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MIN(area_code) AS Min_area_code , MAX(area_code) AS Max_area_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""AREA_CODE_STATE"", ""output"": ""area_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: area_code
  table: AREA_CODE_STATE
id: '#2'
operation: Aggregate
output: MIN(area_code) AS Min_area_code , MAX(area_code) AS Max_area_code
"
8ac627d9be26faacaad933328aa777c2ba3faa7b21cb4f3c343c13997de5c7a0,"Aggregate Output [ MAX(created) AS Max_created ]
  In: Scan Table [ VOTES ] Predicate [ state = 'CA' ] Output [ created , state ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(created) AS Max_created"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""predicate"": ""Predicate [ state = 'CA' ]"", ""output"": ""created , state""}]}","children:
- id: '#1'
  operation: Scan Table
  output: created , state
  predicate: Predicate [ state = 'CA' ]
  table: VOTES
id: '#2'
operation: Aggregate
output: MAX(created) AS Max_created
"
5a8d71c970603ffa83f98d138980d8fe30589cc89224720daea8e4acd0e86daa,Scan Table [ CONTESTANTS ] Predicate [ contestant_name <> 'Jessie Alloway' ] Output [ contestant_name ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""predicate"": ""Predicate [ contestant_name <> 'Jessie Alloway' ]"", ""output"": ""contestant_name""}","id: '#1'
operation: Scan Table
output: contestant_name
predicate: Predicate [ contestant_name <> 'Jessie Alloway' ]
table: CONTESTANTS
"
c1517697f4905f2a0efa5559d00932403e977d6eed11d9b1a5ddadf709b72f34,"Scan Table [ VOTES ] Distinct [ true ] Output [ created , state ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""predicate"": ""Distinct [ true ]"", ""output"": ""created , state""}","id: '#1'
operation: Scan Table
output: created , state
predicate: Distinct [ true ]
table: VOTES
"
df8e2eaea9db6a1d91940430669a0e36d2ac025433b2a3df977d949a20aefcd3,"Filter Predicate [ Count_Star >= 2 ] Output [ contestant_name , contestant_number ]
  In: Join Predicate [ B.contestant_number = T.contestant_number ] Output [ T.contestant_number , T.contestant_name , B.Count_Star ]
    In: Scan Table [ CONTESTANTS ] Output [ contestant_name , contestant_number ]
    In: Aggregate GroupBy [ contestant_number ] Output [ countstar AS Count_Star , contestant_number ]
      In: Scan Table [ VOTES ] Output [ contestant_number ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""contestant_name , contestant_number"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.contestant_number = #3.contestant_number ]"", ""output"": ""#3.contestant_number , #3.contestant_name , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ contestant_number ]"", ""output"": ""countstar AS Count_Star , contestant_number"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""contestant_number""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""output"": ""contestant_name , contestant_number""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: contestant_number
      table: VOTES
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , contestant_number
    predicate: GroupBy [ contestant_number ]
  - id: '#3'
    operation: Scan Table
    output: contestant_name , contestant_number
    table: CONTESTANTS
  id: '#4'
  operation: Join
  output: '#3.contestant_number , #3.contestant_name , #2.Count_Star'
  predicate: 'Predicate [ #2.contestant_number = #3.contestant_number ]'
id: '#5'
operation: Filter
output: contestant_name , contestant_number
predicate: Predicate [ Count_Star >= 2 ]
"
bff2974c43a128f711181e493e2036cb2b26cb7aa8f12d9009b047620bef2c21,"TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ] Output [ contestant_number , contestant_name ]
  In: Aggregate GroupBy [ contestant_name , contestant_number ] Output [ countstar AS Count_Star , contestant_number , contestant_name ]
    In: Join Predicate [ T.contestant_number = B.contestant_number ] Output [ T.contestant_name , T.contestant_number ]
      In: Scan Table [ contestants ] Output [ contestant_number , contestant_name ]
      In: Scan Table [ votes ] Output [ contestant_number ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ]"", ""output"": ""contestant_number , contestant_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ contestant_name , contestant_number ]"", ""output"": ""countstar AS Count_Star , contestant_number , contestant_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.contestant_number = #1.contestant_number ]"", ""output"": ""#2.contestant_name , #2.contestant_number"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""votes"", ""output"": ""contestant_number""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""contestants"", ""output"": ""contestant_number , contestant_name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: contestant_number
      table: votes
    - id: '#2'
      operation: Scan Table
      output: contestant_number , contestant_name
      table: contestants
    id: '#3'
    operation: Join
    output: '#2.contestant_name , #2.contestant_number'
    predicate: 'Predicate [ #2.contestant_number = #1.contestant_number ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , contestant_number , contestant_name
  predicate: GroupBy [ contestant_name , contestant_number ]
id: '#5'
operation: TopSort
output: contestant_number , contestant_name
predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ] WithTies [ true ]
"
53f3c08f00b4abb2d3c3d200358f04020590cdb4126609068d72fb4b5cedda7e,"Aggregate Output [ countstar AS Count_Star ]
  In: Filter Predicate [ state = 'ca' OR state = 'ny' ] Output [ 1 AS One ]
    In: Scan Table [ votes ] Output [ state ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ state = 'ca' OR state = 'ny' ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""votes"", ""output"": ""state""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: state
    table: votes
  id: '#2'
  operation: Filter
  output: 1 AS One
  predicate: Predicate [ state = 'ca' OR state = 'ny' ]
id: '#3'
operation: Aggregate
output: countstar AS Count_Star
"
5b137f43eb6a56ae4d554a5fbf6b1f1ad7fa607e9bad79dfc2d4daaba0ebdc2e,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ T.contestant_number = B.contestant_number ] Output [ 1 AS One ]
    In: Scan Table [ VOTES ] Output [ contestant_number ]
    In: Scan Table [ CONTESTANTS ] Output [ contestant_number ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.contestant_number = #1.contestant_number ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""output"": ""contestant_number""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""contestant_number""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: contestant_number
    table: CONTESTANTS
  - id: '#2'
    operation: Scan Table
    output: contestant_number
    table: VOTES
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #2.contestant_number = #1.contestant_number ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
7f4d3002391a94f1350386c3c530f9f41872958aaab723ea73a778c124284968,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ area_code , Count_Star ]
  In: Join Predicate [ B.state = T.state ] Output [ T.area_code , B.Count_Star ]
    In: Scan Table [ AREA_CODE_STATE ] Output [ area_code , state ]
    In: Aggregate GroupBy [ state ] Output [ countstar AS Count_Star , state ]
      In: Scan Table [ VOTES ] Output [ state ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""area_code , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.state = #3.state ]"", ""output"": ""#3.area_code , #2.Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ state ]"", ""output"": ""countstar AS Count_Star , state"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""state""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""AREA_CODE_STATE"", ""output"": ""area_code , state""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: state
      table: VOTES
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , state
    predicate: GroupBy [ state ]
  - id: '#3'
    operation: Scan Table
    output: area_code , state
    table: AREA_CODE_STATE
  id: '#4'
  operation: Join
  output: '#3.area_code , #2.Count_Star'
  predicate: 'Predicate [ #2.state = #3.state ]'
id: '#5'
operation: TopSort
output: area_code , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
3ef872547c3c849b72137303c2397e4ddfa5620f0a8444b059405f38009ac1b5,"Join Predicate [ B.contestant_number = T.contestant_number ] Output [ T.phone_number , T.state , T.created ]
  In: Scan Table [ VOTES ] Output [ phone_number , created , state , contestant_number ]
  In: Scan Table [ CONTESTANTS ] Predicate [ contestant_name = 'Tabatha Gehling' ] Output [ contestant_name , contestant_number ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.contestant_number = #2.contestant_number ]"", ""output"": ""#2.phone_number , #2.state , #2.created"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""predicate"": ""Predicate [ contestant_name = 'Tabatha Gehling' ]"", ""output"": ""contestant_name , contestant_number""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""phone_number , created , state , contestant_number""}]}","children:
- id: '#1'
  operation: Scan Table
  output: contestant_name , contestant_number
  predicate: Predicate [ contestant_name = 'Tabatha Gehling' ]
  table: CONTESTANTS
- id: '#2'
  operation: Scan Table
  output: phone_number , created , state , contestant_number
  table: VOTES
id: '#3'
operation: Join
output: '#2.phone_number , #2.state , #2.created'
predicate: 'Predicate [ #1.contestant_number = #2.contestant_number ]'
"
997a9d9b23d45ca4e3b077ba7f5a6f03f5475311200c92805f200366cfc56736,"Intersect Predicate [ B.area_code = T.area_code ] Output [ B.area_code ]
  In: Join Predicate [ B.state = T.state ] Output [ T.area_code ]
    In: Scan Table [ AREA_CODE_STATE ] Output [ area_code , state ]
    In: Join Predicate [ B.contestant_number = T.contestant_number ] Output [ T.state ]
      In: Scan Table [ VOTES ] Output [ contestant_number , state ]
      In: Scan Table [ CONTESTANTS ] Predicate [ contestant_name = 'Kelly Clauss' ] Output [ contestant_name , contestant_number ]
  In: Intersect Predicate [ T.state = B.state ] Output [ B.area_code ]
    In: Join Predicate [ B.contestant_number = T.contestant_number ] Output [ T.state ]
      In: Scan Table [ VOTES ] Output [ contestant_number , state ]
      In: Scan Table [ CONTESTANTS ] Predicate [ contestant_name = 'Tabatha Gehling' ] Output [ contestant_name , contestant_number ]
    In: Scan Table [ AREA_CODE_STATE ] Output [ area_code , state ]","{""id"": ""#11"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #5.area_code = #10.area_code ]"", ""output"": ""#5.area_code"", ""children"": [{""id"": ""#5"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #4.state = #1.state ]"", ""output"": ""#1.area_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""AREA_CODE_STATE"", ""output"": ""area_code , state""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.contestant_number = #3.contestant_number ]"", ""output"": ""#3.state"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""predicate"": ""Predicate [ contestant_name = 'Tabatha Gehling' ]"", ""output"": ""contestant_name , contestant_number""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""contestant_number , state""}]}]}, {""id"": ""#10"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #8.state = #9.state ]"", ""output"": ""#9.area_code"", ""children"": [{""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.contestant_number = #7.contestant_number ]"", ""output"": ""#7.state"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""predicate"": ""Predicate [ contestant_name = 'Kelly Clauss' ]"", ""output"": ""contestant_name , contestant_number""}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""VOTES"", ""output"": ""contestant_number , state""}]}, {""id"": ""#9"", ""operation"": ""Scan Table"", ""table"": ""AREA_CODE_STATE"", ""output"": ""area_code , state""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: area_code , state
    table: AREA_CODE_STATE
  - children:
    - id: '#2'
      operation: Scan Table
      output: contestant_name , contestant_number
      predicate: Predicate [ contestant_name = 'Tabatha Gehling' ]
      table: CONTESTANTS
    - id: '#3'
      operation: Scan Table
      output: contestant_number , state
      table: VOTES
    id: '#4'
    operation: Join
    output: '#3.state'
    predicate: 'Predicate [ #2.contestant_number = #3.contestant_number ]'
  id: '#5'
  operation: Intersect
  output: '#1.area_code'
  predicate: 'Predicate [ #4.state = #1.state ]'
- children:
  - children:
    - id: '#6'
      operation: Scan Table
      output: contestant_name , contestant_number
      predicate: Predicate [ contestant_name = 'Kelly Clauss' ]
      table: CONTESTANTS
    - id: '#7'
      operation: Scan Table
      output: contestant_number , state
      table: VOTES
    id: '#8'
    operation: Join
    output: '#7.state'
    predicate: 'Predicate [ #6.contestant_number = #7.contestant_number ]'
  - id: '#9'
    operation: Scan Table
    output: area_code , state
    table: AREA_CODE_STATE
  id: '#10'
  operation: Join
  output: '#9.area_code'
  predicate: 'Predicate [ #8.state = #9.state ]'
id: '#11'
operation: Intersect
output: '#5.area_code'
predicate: 'Predicate [ #5.area_code = #10.area_code ]'
"
375f05a7144b42b7b01a5557989bdde5fbf222a82089e659eb469e04e6091ddb,Scan Table [ CONTESTANTS ] Predicate [ contestant_name like '%al%' ] Output [ contestant_name ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""CONTESTANTS"", ""predicate"": ""Predicate [ contestant_name like '%al%' ]"", ""output"": ""contestant_name""}","id: '#1'
operation: Scan Table
output: contestant_name
predicate: Predicate [ contestant_name like '%al%' ]
table: CONTESTANTS
"
cbf9f39d623b23fe3ba8c7aa545d5a25e98577e97afccb06037e8b79412519ea,"Scan Table [ country ] Predicate [ IndepYear > 1950 ] Output [ Name , IndepYear ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ IndepYear > 1950 ]"", ""output"": ""Name , IndepYear""}","id: '#1'
operation: Scan Table
output: Name , IndepYear
predicate: Predicate [ IndepYear > 1950 ]
table: country
"
1c36e57f9f01e92d2e032a36e5bd1662f81d141e75079ff1d91e1611247d3278,"Scan Table [ country ] Predicate [ IndepYear > 1950 ] Output [ Name , IndepYear ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ IndepYear > 1950 ]"", ""output"": ""Name , IndepYear""}","id: '#1'
operation: Scan Table
output: Name , IndepYear
predicate: Predicate [ IndepYear > 1950 ]
table: country
"
eda66e735c51570820c08ac218e6aa49fb6d80f3b459827f5ebb9b608188d08f,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ country ] Predicate [ GovernmentForm = 'Republic' ] Output [ GovernmentForm ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'Republic' ]"", ""output"": ""GovernmentForm""}]}","children:
- id: '#1'
  operation: Scan Table
  output: GovernmentForm
  predicate: Predicate [ GovernmentForm = 'Republic' ]
  table: country
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
4f0586d6a811c9dd3d73bdee44c39fc23377c7738abf1a2060ccbab35237dec4,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ country ] Predicate [ GovernmentForm = 'Republic' ] Output [ GovernmentForm ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'Republic' ]"", ""output"": ""GovernmentForm""}]}","children:
- id: '#1'
  operation: Scan Table
  output: GovernmentForm
  predicate: Predicate [ GovernmentForm = 'Republic' ]
  table: country
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
42e2d31ab3ab8660506a198d447bbeb3fe7a87e3dd1ce9a1ef067e3a6612d09f,"Aggregate Output [ SUM(SurfaceArea) AS Sum_SurfaceArea ]
  In: Scan Table [ country ] Predicate [ Region = 'Caribbean' ] Output [ SurfaceArea , Region ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""SUM(SurfaceArea) AS Sum_SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Region = 'Caribbean' ]"", ""output"": ""SurfaceArea , Region""}]}","children:
- id: '#1'
  operation: Scan Table
  output: SurfaceArea , Region
  predicate: Predicate [ Region = 'Caribbean' ]
  table: country
id: '#2'
operation: Aggregate
output: SUM(SurfaceArea) AS Sum_SurfaceArea
"
9b0b35fe9d58a109152308667dfc887aad2df9802bb5be1a0a5a212734da450d,"Aggregate Output [ SUM(SurfaceArea) AS Sum_SurfaceArea ]
  In: Scan Table [ country ] Predicate [ Region = 'Caribbean' ] Output [ SurfaceArea , Region ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""SUM(SurfaceArea) AS Sum_SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Region = 'Caribbean' ]"", ""output"": ""SurfaceArea , Region""}]}","children:
- id: '#1'
  operation: Scan Table
  output: SurfaceArea , Region
  predicate: Predicate [ Region = 'Caribbean' ]
  table: country
id: '#2'
operation: Aggregate
output: SUM(SurfaceArea) AS Sum_SurfaceArea
"
3193d5beb7c66a6847f2c9dbe3f4f3078a8c1d60b15e1d257646ae05dc950b32,"Scan Table [ country ] Predicate [ Name = 'Anguilla' ] Output [ Name , Continent ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Anguilla' ]"", ""output"": ""Name , Continent""}","id: '#1'
operation: Scan Table
output: Name , Continent
predicate: Predicate [ Name = 'Anguilla' ]
table: country
"
90a8fb09639d78d2f2cca85fcc342eebec55dbb742658bab91e55d242e256e6b,"Scan Table [ country ] Predicate [ Name = 'Anguilla' ] Output [ Name , Continent ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Anguilla' ]"", ""output"": ""Name , Continent""}","id: '#1'
operation: Scan Table
output: Name , Continent
predicate: Predicate [ Name = 'Anguilla' ]
table: country
"
a7077b7a0f70fac078e95093cec8fb26d721a60f9c4c08398d4592e55fcb39c8,"Join Predicate [ B.CountryCode = T.Code ] Output [ T.Region ]
  In: Scan Table [ country ] Output [ Region , Code ]
  In: Scan Table [ city ] Predicate [ Name = 'Kabul' ] Output [ Name , CountryCode ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ]"", ""output"": ""#2.Region"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""predicate"": ""Predicate [ Name = 'Kabul' ]"", ""output"": ""Name , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Region , Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , CountryCode
  predicate: Predicate [ Name = 'Kabul' ]
  table: city
- id: '#2'
  operation: Scan Table
  output: Region , Code
  table: country
id: '#3'
operation: Join
output: '#2.Region'
predicate: 'Predicate [ #1.CountryCode = #2.Code ]'
"
f13ab0950e935045b8c2cf6da9d54577f46a2563067fbd21c9f82411262a20ba,"Join Predicate [ B.CountryCode = T.Code ] Output [ T.Region ]
  In: Scan Table [ country ] Output [ Region , Code ]
  In: Scan Table [ city ] Predicate [ Name = 'Kabul' ] Output [ Name , CountryCode ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ]"", ""output"": ""#2.Region"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""predicate"": ""Predicate [ Name = 'Kabul' ]"", ""output"": ""Name , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Region , Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , CountryCode
  predicate: Predicate [ Name = 'Kabul' ]
  table: city
- id: '#2'
  operation: Scan Table
  output: Region , Code
  table: country
id: '#3'
operation: Join
output: '#2.Region'
predicate: 'Predicate [ #1.CountryCode = #2.Code ]'
"
b42c56ca3986518a42d21d9a1861a788415493c0260395d2d232b10d6da2bb65,"TopSort Rows [ 1 ] OrderBy [ Percentage DESC ] Output [ Language , Percentage ]
  In: Join Predicate [ B.Code = T.CountryCode ] Output [ T.Percentage , T.Language ]
    In: Scan Table [ countrylanguage ] Output [ Language , Percentage , CountryCode ]
    In: Scan Table [ country ] Predicate [ Name = 'Aruba' ] Output [ Name , Code ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Percentage DESC ]"", ""output"": ""Language , Percentage"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#2.Percentage , #2.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Aruba' ]"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , Percentage , CountryCode""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Code
    predicate: Predicate [ Name = 'Aruba' ]
    table: country
  - id: '#2'
    operation: Scan Table
    output: Language , Percentage , CountryCode
    table: countrylanguage
  id: '#3'
  operation: Join
  output: '#2.Percentage , #2.Language'
  predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
id: '#4'
operation: TopSort
output: Language , Percentage
predicate: Rows [ 1 ] OrderBy [ Percentage DESC ]
"
1e42d2900c9e527b66357dcab22aba24c3b4847d0413b659e3577639518175f7,"TopSort Rows [ 1 ] OrderBy [ Percentage DESC ] Output [ Language , Percentage ]
  In: Join Predicate [ B.Code = T.CountryCode ] Output [ T.Percentage , T.Language ]
    In: Scan Table [ countrylanguage ] Output [ Language , Percentage , CountryCode ]
    In: Scan Table [ country ] Predicate [ Name = 'Aruba' ] Output [ Name , Code ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Percentage DESC ]"", ""output"": ""Language , Percentage"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#2.Percentage , #2.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Aruba' ]"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , Percentage , CountryCode""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Code
    predicate: Predicate [ Name = 'Aruba' ]
    table: country
  - id: '#2'
    operation: Scan Table
    output: Language , Percentage , CountryCode
    table: countrylanguage
  id: '#3'
  operation: Join
  output: '#2.Percentage , #2.Language'
  predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
id: '#4'
operation: TopSort
output: Language , Percentage
predicate: Rows [ 1 ] OrderBy [ Percentage DESC ]
"
eaf31b9958df56510060b3166c48aad13728255fcd5fe25e6770bd3b14055dc6,"Scan Table [ country ] Predicate [ Name = 'Brazil' ] Output [ Name , LifeExpectancy , Population ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Brazil' ]"", ""output"": ""Name , LifeExpectancy , Population""}","id: '#1'
operation: Scan Table
output: Name , LifeExpectancy , Population
predicate: Predicate [ Name = 'Brazil' ]
table: country
"
02ea3ce3c1ca33852d94e1ec67b4c4456820afff93824fb3d341ce5c6c667d45,"Scan Table [ country ] Predicate [ Name = 'Brazil' ] Output [ Name , LifeExpectancy , Population ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Brazil' ]"", ""output"": ""Name , LifeExpectancy , Population""}","id: '#1'
operation: Scan Table
output: Name , LifeExpectancy , Population
predicate: Predicate [ Name = 'Brazil' ]
table: country
"
e1606375d3c23c6a2f2818d49e782b1425a672757cbc62f62375fa926d4a216c,"Scan Table [ country ] Predicate [ Name = 'Angola' ] Output [ Name , Region , Population ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Angola' ]"", ""output"": ""Name , Region , Population""}","id: '#1'
operation: Scan Table
output: Name , Region , Population
predicate: Predicate [ Name = 'Angola' ]
table: country
"
7956562de86b573a31dfeb98d0b90656fb45a70318182803401388262c78da8b,"Scan Table [ country ] Predicate [ Name = 'Angola' ] Output [ Name , Region , Population ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Angola' ]"", ""output"": ""Name , Region , Population""}","id: '#1'
operation: Scan Table
output: Name , Region , Population
predicate: Predicate [ Name = 'Angola' ]
table: country
"
447bf0c569ae8d2fdba890134e396060901e148955b831579e829629ea319d33,"Aggregate Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy ]
  In: Scan Table [ country ] Predicate [ Region = 'Central Africa' ] Output [ Region , LifeExpectancy ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Region = 'Central Africa' ]"", ""output"": ""Region , LifeExpectancy""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Region , LifeExpectancy
  predicate: Predicate [ Region = 'Central Africa' ]
  table: country
id: '#2'
operation: Aggregate
output: AVG(LifeExpectancy) AS Avg_LifeExpectancy
"
ead8406fcf8f5ac508a3fa2fee7f4eadfc597b2934367ddaa29a95d3b2a7a0ab,"Aggregate Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy ]
  In: Scan Table [ country ] Predicate [ Region = 'Central Africa' ] Output [ Region , LifeExpectancy ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Region = 'Central Africa' ]"", ""output"": ""Region , LifeExpectancy""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Region , LifeExpectancy
  predicate: Predicate [ Region = 'Central Africa' ]
  table: country
id: '#2'
operation: Aggregate
output: AVG(LifeExpectancy) AS Avg_LifeExpectancy
"
b6dbcf35e637466fb878964b2ca6759c7d8c27b687b8e18916214f47b4fb9708,"TopSort Rows [ 1 ] OrderBy [ LifeExpectancy ASC ] Output [ Name , LifeExpectancy ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ Name , LifeExpectancy ]
    In: Scan Table [ country ] Output [ Name , LifeExpectancy , Continent ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ LifeExpectancy ASC ]"", ""output"": ""Name , LifeExpectancy"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Name , LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , LifeExpectancy , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , LifeExpectancy , Continent
    table: country
  id: '#2'
  operation: Filter
  output: Name , LifeExpectancy
  predicate: Predicate [ Continent = 'Asia' ]
id: '#3'
operation: TopSort
output: Name , LifeExpectancy
predicate: Rows [ 1 ] OrderBy [ LifeExpectancy ASC ]
"
6c9d0187eaa14d3822b76fab25575f0bd029a4aae739341d09c7aa944fbb9678,"TopSort Rows [ 1 ] OrderBy [ LifeExpectancy ASC ] Output [ Name , LifeExpectancy ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ Name , LifeExpectancy ]
    In: Scan Table [ country ] Output [ Name , LifeExpectancy , Continent ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ LifeExpectancy ASC ]"", ""output"": ""Name , LifeExpectancy"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Name , LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , LifeExpectancy , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , LifeExpectancy , Continent
    table: country
  id: '#2'
  operation: Filter
  output: Name , LifeExpectancy
  predicate: Predicate [ Continent = 'Asia' ]
id: '#3'
operation: TopSort
output: Name , LifeExpectancy
predicate: Rows [ 1 ] OrderBy [ LifeExpectancy ASC ]
"
ad1402fa95fd3fadae44e208dbad1503f63f97dff7c87df4e4ad632bf12f911b,"Aggregate Output [ SUM(Population) AS Sum_Population , MAX(GNP) AS Max_GNP ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ GNP , Population ]
    In: Scan Table [ country ] Output [ GNP , Population , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population , MAX(GNP) AS Max_GNP"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""GNP , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""GNP , Population , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GNP , Population , Continent
    table: country
  id: '#2'
  operation: Filter
  output: GNP , Population
  predicate: Predicate [ Continent = 'Asia' ]
id: '#3'
operation: Aggregate
output: SUM(Population) AS Sum_Population , MAX(GNP) AS Max_GNP
"
a063d955c79fd05ec31becccdbd310b4bc3d29e965130d1e7c2b89b7f0e3e1b2,"Aggregate Output [ SUM(Population) AS Sum_Population , MAX(GNP) AS Max_GNP ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ GNP , Population ]
    In: Scan Table [ country ] Output [ GNP , Population , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population , MAX(GNP) AS Max_GNP"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""GNP , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""GNP , Population , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GNP , Population , Continent
    table: country
  id: '#2'
  operation: Filter
  output: GNP , Population
  predicate: Predicate [ Continent = 'Asia' ]
id: '#3'
operation: Aggregate
output: SUM(Population) AS Sum_Population , MAX(GNP) AS Max_GNP
"
a413d0d9c13eaf0c7ba05ab34db24918f93f106adeb3d8c794efab911446ac22,"Aggregate Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy ]
  In: Filter Predicate [ Continent = 'Africa' ] Output [ LifeExpectancy ]
    In: Scan Table [ country ] Predicate [ GovernmentForm = 'Republic' ] Output [ GovernmentForm , LifeExpectancy , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ]"", ""output"": ""LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'Republic' ]"", ""output"": ""GovernmentForm , LifeExpectancy , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GovernmentForm , LifeExpectancy , Continent
    predicate: Predicate [ GovernmentForm = 'Republic' ]
    table: country
  id: '#2'
  operation: Filter
  output: LifeExpectancy
  predicate: Predicate [ Continent = 'Africa' ]
id: '#3'
operation: Aggregate
output: AVG(LifeExpectancy) AS Avg_LifeExpectancy
"
48d3b1951efeabcc1977bdb8ee2d1140c1f13dd2d22d9335243284834c4c12e1,"Aggregate Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy ]
  In: Filter Predicate [ Continent = 'Africa' ] Output [ LifeExpectancy ]
    In: Scan Table [ country ] Predicate [ GovernmentForm = 'Republic' ] Output [ GovernmentForm , LifeExpectancy , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ]"", ""output"": ""LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'Republic' ]"", ""output"": ""GovernmentForm , LifeExpectancy , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GovernmentForm , LifeExpectancy , Continent
    predicate: Predicate [ GovernmentForm = 'Republic' ]
    table: country
  id: '#2'
  operation: Filter
  output: LifeExpectancy
  predicate: Predicate [ Continent = 'Africa' ]
id: '#3'
operation: Aggregate
output: AVG(LifeExpectancy) AS Avg_LifeExpectancy
"
6cc665c83afd60499ff4e24745c41e5fb4724d43e9409a2e72f07d8b013a4814,"Aggregate Output [ SUM(SurfaceArea) AS Sum_SurfaceArea ]
  In: Filter Predicate [ Continent = 'Asia' OR Continent = 'Europe' ] Output [ SurfaceArea ]
    In: Scan Table [ country ] Output [ SurfaceArea , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""SUM(SurfaceArea) AS Sum_SurfaceArea"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' OR Continent = 'Europe' ]"", ""output"": ""SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""SurfaceArea , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: SurfaceArea , Continent
    table: country
  id: '#2'
  operation: Filter
  output: SurfaceArea
  predicate: Predicate [ Continent = 'Asia' OR Continent = 'Europe' ]
id: '#3'
operation: Aggregate
output: SUM(SurfaceArea) AS Sum_SurfaceArea
"
86c55881b46a5a574126c33dc389f48f0015abfa067f0bf84d197424dcfeab3f,"Aggregate Output [ SUM(SurfaceArea) AS Sum_SurfaceArea ]
  In: Filter Predicate [ Continent = 'Asia' OR Continent = 'Europe' ] Output [ SurfaceArea ]
    In: Scan Table [ country ] Output [ SurfaceArea , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""SUM(SurfaceArea) AS Sum_SurfaceArea"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' OR Continent = 'Europe' ]"", ""output"": ""SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""SurfaceArea , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: SurfaceArea , Continent
    table: country
  id: '#2'
  operation: Filter
  output: SurfaceArea
  predicate: Predicate [ Continent = 'Asia' OR Continent = 'Europe' ]
id: '#3'
operation: Aggregate
output: SUM(SurfaceArea) AS Sum_SurfaceArea
"
87a14e66e6e77a9297169720ad579f780bf39faa6d4b05b82771e1e62f75d873,"Aggregate Output [ SUM(Population) AS Sum_Population ]
  In: Scan Table [ city ] Predicate [ District = 'Gelderland' ] Output [ Population , District ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""predicate"": ""Predicate [ District = 'Gelderland' ]"", ""output"": ""Population , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Population , District
  predicate: Predicate [ District = 'Gelderland' ]
  table: city
id: '#2'
operation: Aggregate
output: SUM(Population) AS Sum_Population
"
d63af966914473b096de571cad64b5b43edd5043e710afc66f28430d0095ca9b,"Aggregate Output [ SUM(Population) AS Sum_Population ]
  In: Scan Table [ city ] Predicate [ District = 'Gelderland' ] Output [ Population , District ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""predicate"": ""Predicate [ District = 'Gelderland' ]"", ""output"": ""Population , District""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Population , District
  predicate: Predicate [ District = 'Gelderland' ]
  table: city
id: '#2'
operation: Aggregate
output: SUM(Population) AS Sum_Population
"
b08ef71ef93254d405738b9cd0374cff3985ee5e36c497a19f987ccff4384b5f,"Aggregate Output [ AVG(GNP) AS Avg_GNP , SUM(Population) AS Sum_Population ]
  In: Scan Table [ country ] Predicate [ GovernmentForm = 'US Territory' ] Output [ GovernmentForm , GNP , Population ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(GNP) AS Avg_GNP , SUM(Population) AS Sum_Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'US Territory' ]"", ""output"": ""GovernmentForm , GNP , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: GovernmentForm , GNP , Population
  predicate: Predicate [ GovernmentForm = 'US Territory' ]
  table: country
id: '#2'
operation: Aggregate
output: AVG(GNP) AS Avg_GNP , SUM(Population) AS Sum_Population
"
38149da0bf176f61c70db72f6915039e6dee7a9e184475459d86407d032bdf3d,"Aggregate Output [ AVG(GNP) AS Avg_GNP , SUM(Population) AS Sum_Population ]
  In: Scan Table [ country ] Predicate [ GovernmentForm = 'US Territory' ] Output [ GovernmentForm , GNP , Population ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(GNP) AS Avg_GNP , SUM(Population) AS Sum_Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'US Territory' ]"", ""output"": ""GovernmentForm , GNP , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: GovernmentForm , GNP , Population
  predicate: Predicate [ GovernmentForm = 'US Territory' ]
  table: country
id: '#2'
operation: Aggregate
output: AVG(GNP) AS Avg_GNP , SUM(Population) AS Sum_Population
"
0107b0ffdcc55beb72507d69c0c32359b7bb551e3bcd2bac2dfb332b5809dc57,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ countrylanguage ] Distinct [ true ] Output [ Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language
  predicate: Distinct [ true ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
3c4d21d33530da607dd924e2bc3544cedcadf73d4cfb0e585c45b6a36baf5b23,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ countrylanguage ] Distinct [ true ] Output [ Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language
  predicate: Distinct [ true ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
40e5da0fbd145acd54d3d006d747228d77045559ef4773caa086c8734be6f556,"Aggregate Output [ countstar AS Count_Star ]
  In: Filter Predicate [ Continent = 'Africa' ] Distinct [ true ] Output [ GovernmentForm ]
    In: Scan Table [ country ] Output [ GovernmentForm , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ] Distinct [ true ]"", ""output"": ""GovernmentForm"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""GovernmentForm , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GovernmentForm , Continent
    table: country
  id: '#2'
  operation: Filter
  output: GovernmentForm
  predicate: Predicate [ Continent = 'Africa' ] Distinct [ true ]
id: '#3'
operation: Aggregate
output: countstar AS Count_Star
"
c806b535829c219151ad9a84fea53ee58667be3b934659c7d28adde55c6b46f0,"Aggregate Output [ countstar AS Count_Star ]
  In: Filter Predicate [ Continent = 'Africa' ] Distinct [ true ] Output [ GovernmentForm ]
    In: Scan Table [ country ] Output [ GovernmentForm , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ] Distinct [ true ]"", ""output"": ""GovernmentForm"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""GovernmentForm , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GovernmentForm , Continent
    table: country
  id: '#2'
  operation: Filter
  output: GovernmentForm
  predicate: Predicate [ Continent = 'Africa' ] Distinct [ true ]
id: '#3'
operation: Aggregate
output: countstar AS Count_Star
"
26ad51ff8d130d2aa117e8cb6d7ef07ce38bfbc418daa39207a4140fd1f93afa,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Code , B.Name ]
    In: Scan Table [ countrylanguage ] Output [ CountryCode ]
    In: Scan Table [ country ] Predicate [ Name = 'Aruba' ] Output [ Name , Code ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Code , #1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Aruba' ]"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Code
    predicate: Predicate [ Name = 'Aruba' ]
    table: country
  - id: '#2'
    operation: Scan Table
    output: CountryCode
    table: countrylanguage
  id: '#3'
  operation: Join
  output: '#1.Code , #1.Name'
  predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
a1757bd28d3c99a6d0f79e9427ace21cf824ba79417c1559f8b20ff238b12c32,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Code , B.Name ]
    In: Scan Table [ countrylanguage ] Output [ CountryCode ]
    In: Scan Table [ country ] Predicate [ Name = 'Aruba' ] Output [ Name , Code ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Code , #1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Aruba' ]"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Code
    predicate: Predicate [ Name = 'Aruba' ]
    table: country
  - id: '#2'
    operation: Scan Table
    output: CountryCode
    table: countrylanguage
  id: '#3'
  operation: Join
  output: '#1.Code , #1.Name'
  predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
2d5af1ae79c1eadb9a64c4e4ee431c883c34d42643e1275086b93079bebd1da4,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Code , B.Name ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Output [ IsOfficial , CountryCode ]
    In: Scan Table [ country ] Predicate [ Name = 'Afghanistan' ] Output [ Name , Code ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #3.CountryCode ]"", ""output"": ""#1.Code , #1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Afghanistan' ]"", ""output"": ""Name , Code""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""IsOfficial , CountryCode""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Code
    predicate: Predicate [ Name = 'Afghanistan' ]
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: IsOfficial , CountryCode
      table: countrylanguage
    id: '#3'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#4'
  operation: Join
  output: '#1.Code , #1.Name'
  predicate: 'Predicate [ #1.Code = #3.CountryCode ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
fcb55729d495351ebf7cd2023a68b2f96ba3ef9f97bf285aa825d8e40b9fb5b0,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Code , B.Name ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Output [ IsOfficial , CountryCode ]
    In: Scan Table [ country ] Predicate [ Name = 'Afghanistan' ] Output [ Name , Code ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #3.CountryCode ]"", ""output"": ""#1.Code , #1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Name = 'Afghanistan' ]"", ""output"": ""Name , Code""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""IsOfficial , CountryCode""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Code
    predicate: Predicate [ Name = 'Afghanistan' ]
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: IsOfficial , CountryCode
      table: countrylanguage
    id: '#3'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#4'
  operation: Join
  output: '#1.Code , #1.Name'
  predicate: 'Predicate [ #1.Code = #3.CountryCode ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
6f2b7f8fdc2f6cbf4c2b61688a16fbb31573f8fc967ef5acad0f68f46876e896,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Count_Star ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Output [ CountryCode ]
      In: Scan Table [ country ] Output [ Name , Code ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Name'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: TopSort
output: Name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
4bd4410da025c4c92f23a5169756fb4e81a8495682cd19482dd9e8f84a988855,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Name , Count_Star ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Output [ CountryCode ]
      In: Scan Table [ country ] Output [ Name , Code ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Name'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: TopSort
output: Name , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
196aa60352af0cf7e4ef042eadf2f963c0c3073019e762a018959cca24f67b02,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Continent ]
  In: Aggregate GroupBy [ Continent ] Output [ countstar AS Count_Star , Continent ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Continent ]
      In: Scan Table [ countrylanguage ] Output [ CountryCode ]
      In: Scan Table [ country ] Output [ Code , Continent ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Continent"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""countstar AS Count_Star , Continent"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Code , Continent
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Continent'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , Continent
  predicate: GroupBy [ Continent ]
id: '#5'
operation: TopSort
output: Count_Star , Continent
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
7ddb8484384a410a4ee334b2add390a2c95c81ba0d19f7b4fce4db288fef6f2b,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Continent ]
  In: Aggregate GroupBy [ Continent ] Output [ countstar AS Count_Star , Continent ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Continent ]
      In: Scan Table [ countrylanguage ] Output [ CountryCode ]
      In: Scan Table [ country ] Output [ Code , Continent ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Continent"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""countstar AS Count_Star , Continent"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Code , Continent
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Continent'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , Continent
  predicate: GroupBy [ Continent ]
id: '#5'
operation: TopSort
output: Count_Star , Continent
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
fdfea30a058eb1515bcf094ea6132c66bcd901c2ecc1be5f888c488c81485f8e,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Name = T.Name ] Distinct [ true ] Output [ B.Name ]
    In: Join Predicate [ T.CountryCode = B.Code ] Distinct [ true ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'dutch' ] Output [ CountryCode , Language ]
      In: Scan Table [ country ] Output [ Name , Code ]
    In: Join Predicate [ T.CountryCode = B.Code ] Distinct [ true ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'english' ] Output [ CountryCode , Language ]
      In: Scan Table [ country ] Output [ Name , Code ]","{""id"": ""#8"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Name = #6.Name ] Distinct [ true ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #1.Code ] Distinct [ true ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'english' ]"", ""output"": ""CountryCode , Language""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.CountryCode = #4.Code ] Distinct [ true ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'dutch' ]"", ""output"": ""CountryCode , Language""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode , Language
      predicate: Predicate [ Language = 'english' ]
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Name'
    predicate: 'Predicate [ #2.CountryCode = #1.Code ] Distinct [ true ]'
  - children:
    - id: '#4'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#5'
      operation: Scan Table
      output: CountryCode , Language
      predicate: Predicate [ Language = 'dutch' ]
      table: countrylanguage
    id: '#6'
    operation: Join
    output: '#4.Name'
    predicate: 'Predicate [ #5.CountryCode = #4.Code ] Distinct [ true ]'
  id: '#7'
  operation: Join
  output: '#3.Name'
  predicate: 'Predicate [ #3.Name = #6.Name ] Distinct [ true ]'
id: '#8'
operation: Aggregate
output: countstar AS Count_Star
"
b23e766b20d801d1a7c381585433382250fd7b37aeabd1fa122e67c8d8381468,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Name = T.Name ] Distinct [ true ] Output [ B.Name ]
    In: Join Predicate [ T.CountryCode = B.Code ] Distinct [ true ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'dutch' ] Output [ CountryCode , Language ]
      In: Scan Table [ country ] Output [ Name , Code ]
    In: Join Predicate [ T.CountryCode = B.Code ] Distinct [ true ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'english' ] Output [ CountryCode , Language ]
      In: Scan Table [ country ] Output [ Name , Code ]","{""id"": ""#8"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Name = #6.Name ] Distinct [ true ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #1.Code ] Distinct [ true ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'english' ]"", ""output"": ""CountryCode , Language""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.CountryCode = #4.Code ] Distinct [ true ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'dutch' ]"", ""output"": ""CountryCode , Language""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode , Language
      predicate: Predicate [ Language = 'english' ]
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Name'
    predicate: 'Predicate [ #2.CountryCode = #1.Code ] Distinct [ true ]'
  - children:
    - id: '#4'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#5'
      operation: Scan Table
      output: CountryCode , Language
      predicate: Predicate [ Language = 'dutch' ]
      table: countrylanguage
    id: '#6'
    operation: Join
    output: '#4.Name'
    predicate: 'Predicate [ #5.CountryCode = #4.Code ] Distinct [ true ]'
  id: '#7'
  operation: Join
  output: '#3.Name'
  predicate: 'Predicate [ #3.Name = #6.Name ] Distinct [ true ]'
id: '#8'
operation: Aggregate
output: countstar AS Count_Star
"
5c61e85b2ff5cd14b865b09f64f10986de9093ff1ecd8910423dc80bd72b86ba,"Aggregate GroupBy [ Name ] Output [ Name ]
  In: Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ B.Code , B.Name ]
    In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
    In: Join Predicate [ B.Name = T.Name ] Output [ B.Code , B.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Code , T.Name ]
        In: Scan Table [ country ] Output [ Name , Code ]
        In: Scan Table [ countrylanguage ] Predicate [ Language = 'French' ] Output [ Language , CountryCode ]","{""id"": ""#8"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name"", ""children"": [{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Code = #6.CountryCode ] Distinct [ true ]"", ""output"": ""#5.Code , #5.Name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Name = #4.Name ]"", ""output"": ""#3.Code , #3.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ]"", ""output"": ""#2.Code , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'French' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Language , CountryCode
        predicate: Predicate [ Language = 'French' ]
        table: countrylanguage
      - id: '#2'
        operation: Scan Table
        output: Name , Code
        table: country
      id: '#3'
      operation: Join
      output: '#2.Code , #2.Name'
      predicate: 'Predicate [ #1.CountryCode = #2.Code ]'
    - id: '#4'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#5'
    operation: Join
    output: '#3.Code , #3.Name'
    predicate: 'Predicate [ #3.Name = #4.Name ]'
  - id: '#6'
    operation: Scan Table
    output: Language , CountryCode
    predicate: Predicate [ Language = 'English' ]
    table: countrylanguage
  id: '#7'
  operation: Join
  output: '#5.Code , #5.Name'
  predicate: 'Predicate [ #5.Code = #6.CountryCode ] Distinct [ true ]'
id: '#8'
operation: Aggregate
output: Name
predicate: GroupBy [ Name ]
"
fe1e4fc69d4dfc7f14ea8c7ccb0d3d686be08850c06a3118dbb5c2c166fec18d,"Aggregate GroupBy [ Name ] Output [ Name ]
  In: Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ B.Code , B.Name ]
    In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
    In: Join Predicate [ B.Name = T.Name ] Output [ B.Code , B.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Code , T.Name ]
        In: Scan Table [ country ] Output [ Name , Code ]
        In: Scan Table [ countrylanguage ] Predicate [ Language = 'French' ] Output [ Language , CountryCode ]","{""id"": ""#8"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name"", ""children"": [{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Code = #6.CountryCode ] Distinct [ true ]"", ""output"": ""#5.Code , #5.Name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Name = #4.Name ]"", ""output"": ""#3.Code , #3.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ]"", ""output"": ""#2.Code , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'French' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Language , CountryCode
        predicate: Predicate [ Language = 'French' ]
        table: countrylanguage
      - id: '#2'
        operation: Scan Table
        output: Name , Code
        table: country
      id: '#3'
      operation: Join
      output: '#2.Code , #2.Name'
      predicate: 'Predicate [ #1.CountryCode = #2.Code ]'
    - id: '#4'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#5'
    operation: Join
    output: '#3.Code , #3.Name'
    predicate: 'Predicate [ #3.Name = #4.Name ]'
  - id: '#6'
    operation: Scan Table
    output: Language , CountryCode
    predicate: Predicate [ Language = 'English' ]
    table: countrylanguage
  id: '#7'
  operation: Join
  output: '#5.Code , #5.Name'
  predicate: 'Predicate [ #5.Code = #6.CountryCode ] Distinct [ true ]'
id: '#8'
operation: Aggregate
output: Name
predicate: GroupBy [ Name ]
"
cf7eea7b6f50c57390d38c86939bf535a224b057c31c25a666208629c5ce7a00,"Aggregate GroupBy [ Name ] Output [ Name ]
  In: Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ B.Code , B.Name ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , IsOfficial , CountryCode ]
    In: Join Predicate [ B.Name = T.Name ] Output [ B.Name , B.Code ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Code , T.Name ]
        In: Scan Table [ country ] Output [ Name , Code ]
        In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
          In: Scan Table [ countrylanguage ] Predicate [ Language = 'French' ] Output [ Language , IsOfficial , CountryCode ]","{""id"": ""#10"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name"", ""children"": [{""id"": ""#9"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Code = #8.CountryCode ] Distinct [ true ]"", ""output"": ""#6.Code , #6.Name"", ""children"": [{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Name = #5.Name ]"", ""output"": ""#4.Name , #4.Code"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #3.Code ]"", ""output"": ""#3.Code , #3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'French' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#8"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}]}]}","children:
- children:
  - children:
    - children:
      - children:
        - id: '#1'
          operation: Scan Table
          output: Language , IsOfficial , CountryCode
          predicate: Predicate [ Language = 'French' ]
          table: countrylanguage
        id: '#2'
        operation: Filter
        output: CountryCode
        predicate: Predicate [ IsOfficial = 'T' ]
      - id: '#3'
        operation: Scan Table
        output: Name , Code
        table: country
      id: '#4'
      operation: Join
      output: '#3.Code , #3.Name'
      predicate: 'Predicate [ #2.CountryCode = #3.Code ]'
    - id: '#5'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#6'
    operation: Join
    output: '#4.Name , #4.Code'
    predicate: 'Predicate [ #4.Name = #5.Name ]'
  - children:
    - id: '#7'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      predicate: Predicate [ Language = 'English' ]
      table: countrylanguage
    id: '#8'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#9'
  operation: Join
  output: '#6.Code , #6.Name'
  predicate: 'Predicate [ #6.Code = #8.CountryCode ] Distinct [ true ]'
id: '#10'
operation: Aggregate
output: Name
predicate: GroupBy [ Name ]
"
dc5f3fb7030d664528f7de029349056a952430b2c758a96323474d603b11c727,"Aggregate GroupBy [ Name ] Output [ Name ]
  In: Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ B.Code , B.Name ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , IsOfficial , CountryCode ]
    In: Join Predicate [ B.Name = T.Name ] Output [ B.Name , B.Code ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Code , T.Name ]
        In: Scan Table [ country ] Output [ Name , Code ]
        In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
          In: Scan Table [ countrylanguage ] Predicate [ Language = 'French' ] Output [ Language , IsOfficial , CountryCode ]","{""id"": ""#10"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name"", ""children"": [{""id"": ""#9"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.Code = #8.CountryCode ] Distinct [ true ]"", ""output"": ""#6.Code , #6.Name"", ""children"": [{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.Name = #5.Name ]"", ""output"": ""#4.Name , #4.Code"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #3.Code ]"", ""output"": ""#3.Code , #3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'French' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#8"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}]}]}","children:
- children:
  - children:
    - children:
      - children:
        - id: '#1'
          operation: Scan Table
          output: Language , IsOfficial , CountryCode
          predicate: Predicate [ Language = 'French' ]
          table: countrylanguage
        id: '#2'
        operation: Filter
        output: CountryCode
        predicate: Predicate [ IsOfficial = 'T' ]
      - id: '#3'
        operation: Scan Table
        output: Name , Code
        table: country
      id: '#4'
      operation: Join
      output: '#3.Code , #3.Name'
      predicate: 'Predicate [ #2.CountryCode = #3.Code ]'
    - id: '#5'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#6'
    operation: Join
    output: '#4.Name , #4.Code'
    predicate: 'Predicate [ #4.Name = #5.Name ]'
  - children:
    - id: '#7'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      predicate: Predicate [ Language = 'English' ]
      table: countrylanguage
    id: '#8'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#9'
  operation: Join
  output: '#6.Code , #6.Name'
  predicate: 'Predicate [ #6.Code = #8.CountryCode ] Distinct [ true ]'
id: '#10'
operation: Aggregate
output: Name
predicate: GroupBy [ Name ]
"
50b5150d0be2fb25fb3c75ba5f9efedab022b25ddecc1718f39ef2cd8d319782,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.CountryCode = T.Code ] Distinct [ true ] Output [ T.Continent ]
    In: Scan Table [ country ] Output [ Code , Continent ]
    In: Scan Table [ countrylanguage ] Predicate [ Language = 'Chinese' ] Output [ Language , CountryCode ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]"", ""output"": ""#2.Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Chinese' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language , CountryCode
    predicate: Predicate [ Language = 'Chinese' ]
    table: countrylanguage
  - id: '#2'
    operation: Scan Table
    output: Code , Continent
    table: country
  id: '#3'
  operation: Join
  output: '#2.Continent'
  predicate: 'Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
caf62133487d41ae6c81bff1ac1282aecfff3503c87cfb30cb05002b66459a4f,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.CountryCode = T.Code ] Distinct [ true ] Output [ T.Continent ]
    In: Scan Table [ country ] Output [ Code , Continent ]
    In: Scan Table [ countrylanguage ] Predicate [ Language = 'Chinese' ] Output [ Language , CountryCode ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]"", ""output"": ""#2.Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Chinese' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language , CountryCode
    predicate: Predicate [ Language = 'Chinese' ]
    table: countrylanguage
  - id: '#2'
    operation: Scan Table
    output: Code , Continent
    table: country
  id: '#3'
  operation: Join
  output: '#2.Continent'
  predicate: 'Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
4951f1256981c4e699025f83ed4e0568f0da2b0adfeb2a539dc76094ae288c84,"Join Predicate [ B.CountryCode = T.Code ] Distinct [ true ] Output [ T.Region ]
  In: Scan Table [ country ] Output [ Region , Code ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'Dutch' OR Language = 'English' ] Output [ Language , CountryCode ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]"", ""output"": ""#2.Region"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Dutch' OR Language = 'English' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Region , Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language = 'Dutch' OR Language = 'English' ]
  table: countrylanguage
- id: '#2'
  operation: Scan Table
  output: Region , Code
  table: country
id: '#3'
operation: Join
output: '#2.Region'
predicate: 'Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]'
"
67897312488350728a9012ddf25e860149ea5ed4025d589030cc862639fddb39,"Join Predicate [ B.CountryCode = T.Code ] Distinct [ true ] Output [ T.Region ]
  In: Scan Table [ country ] Output [ Region , Code ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'Dutch' OR Language = 'English' ] Output [ Language , CountryCode ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]"", ""output"": ""#2.Region"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Dutch' OR Language = 'English' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Region , Code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language = 'Dutch' OR Language = 'English' ]
  table: countrylanguage
- id: '#2'
  operation: Scan Table
  output: Region , Code
  table: country
id: '#3'
operation: Join
output: '#2.Region'
predicate: 'Predicate [ #1.CountryCode = #2.Code ] Distinct [ true ]'
"
9613549d75cadf3aaf9e382df3277d0bf72df467f14c96d5783c19c5479f5f9b,"Union Output [ B.Name ]
  In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
    In: Scan Table [ country ] Output [ Name , Code ]
    In: Filter Predicate [ IsOfficial = 't' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'dutch' ] Output [ Language , IsOfficial , CountryCode ]
  In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
    In: Scan Table [ country ] Output [ Name , Code ]
    In: Filter Predicate [ IsOfficial = 't' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'english' ] Output [ Language , IsOfficial , CountryCode ]","{""id"": ""#9"", ""operation"": ""Union"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #3.Code ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 't' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'english' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}, {""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #6.CountryCode = #7.Code ]"", ""output"": ""#7.Name"", ""children"": [{""id"": ""#6"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 't' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'dutch' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#7"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      predicate: Predicate [ Language = 'english' ]
      table: countrylanguage
    id: '#2'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 't' ]
  - id: '#3'
    operation: Scan Table
    output: Name , Code
    table: country
  id: '#4'
  operation: Join
  output: '#3.Name'
  predicate: 'Predicate [ #2.CountryCode = #3.Code ]'
- children:
  - children:
    - id: '#5'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      predicate: Predicate [ Language = 'dutch' ]
      table: countrylanguage
    id: '#6'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 't' ]
  - id: '#7'
    operation: Scan Table
    output: Name , Code
    table: country
  id: '#8'
  operation: Join
  output: '#7.Name'
  predicate: 'Predicate [ #6.CountryCode = #7.Code ]'
id: '#9'
operation: Union
output: '#4.Name'
"
5f6c5c97e4535a57a648be9149e33db7045c08bc96516c2e753c41f04e1e2583,"Union Output [ B.CountryCode , B.IsOfficial , B.Code2 , B.Percentage , B.Language , B.LifeExpectancy , B.GNP , B.Region , B.GNPOld , B.Name , B.IndepYear , B.SurfaceArea , B.Capital , B.HeadOfState , B.Population , B.GovernmentForm , B.Code , B.Continent , B.LocalName ]
  In: Join Predicate [ T.CountryCode = B.Code ] Output [ B.Population , B.Code2 , T.IsOfficial , B.Name , B.LifeExpectancy , B.Code , T.Percentage , B.Continent , B.GNP , T.Language , B.GNPOld , B.SurfaceArea , B.IndepYear , B.Region , B.HeadOfState , B.GovernmentForm , T.CountryCode , B.LocalName , B.Capital ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ IsOfficial , CountryCode , Language , Percentage ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'Dutch' ] Output [ IsOfficial , CountryCode , Language , Percentage ]
    In: Scan Table [ country ] Output [ Code2 , Region , IndepYear , HeadOfState , Name , GNPOld , Continent , GNP , Capital , LifeExpectancy , LocalName , SurfaceArea , Code , Population , GovernmentForm ]
  In: Join Predicate [ T.CountryCode = B.Code ] Output [ T.IsOfficial , B.LifeExpectancy , T.Percentage , B.Code , B.IndepYear , B.Region , B.Capital , B.LocalName , B.Name , B.Continent , B.Population , B.HeadOfState , B.GovernmentForm , B.GNP , B.Code2 , B.SurfaceArea , B.GNPOld , T.Language , T.CountryCode ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ IsOfficial , CountryCode , Language , Percentage ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ IsOfficial , CountryCode , Language , Percentage ]
    In: Scan Table [ country ] Output [ Code2 , Region , IndepYear , HeadOfState , Name , GNPOld , Continent , GNP , Capital , LifeExpectancy , LocalName , SurfaceArea , Code , Population , GovernmentForm ]","{""id"": ""#9"", ""operation"": ""Union"", ""output"": ""#4.CountryCode , #4.IsOfficial , #4.Code2 , #4.Percentage , #4.Language , #4.LifeExpectancy , #4.GNP , #4.Region , #4.GNPOld , #4.Name , #4.IndepYear , #4.SurfaceArea , #4.Capital , #4.HeadOfState , #4.Population , #4.GovernmentForm , #4.Code , #4.Continent , #4.LocalName"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.CountryCode = #1.Code ]"", ""output"": ""#3.IsOfficial , #1.LifeExpectancy , #3.Percentage , #1.Code , #1.IndepYear , #1.Region , #1.Capital , #1.LocalName , #1.Name , #1.Continent , #1.Population , #1.HeadOfState , #1.GovernmentForm , #1.GNP , #1.Code2 , #1.SurfaceArea , #1.GNPOld , #3.Language , #3.CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code2 , Region , IndepYear , HeadOfState , Name , GNPOld , Continent , GNP , Capital , LifeExpectancy , LocalName , SurfaceArea , Code , Population , GovernmentForm""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""IsOfficial , CountryCode , Language , Percentage"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""IsOfficial , CountryCode , Language , Percentage""}]}]}, {""id"": ""#8"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #7.CountryCode = #5.Code ]"", ""output"": ""#5.Population , #5.Code2 , #7.IsOfficial , #5.Name , #5.LifeExpectancy , #5.Code , #7.Percentage , #5.Continent , #5.GNP , #7.Language , #5.GNPOld , #5.SurfaceArea , #5.IndepYear , #5.Region , #5.HeadOfState , #5.GovernmentForm , #7.CountryCode , #5.LocalName , #5.Capital"", ""children"": [{""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code2 , Region , IndepYear , HeadOfState , Name , GNPOld , Continent , GNP , Capital , LifeExpectancy , LocalName , SurfaceArea , Code , Population , GovernmentForm""}, {""id"": ""#7"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""IsOfficial , CountryCode , Language , Percentage"", ""children"": [{""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Dutch' ]"", ""output"": ""IsOfficial , CountryCode , Language , Percentage""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Code2 , Region , IndepYear , HeadOfState , Name , GNPOld , Continent ,
      GNP , Capital , LifeExpectancy , LocalName , SurfaceArea , Code , Population
      , GovernmentForm
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: IsOfficial , CountryCode , Language , Percentage
      predicate: Predicate [ Language = 'English' ]
      table: countrylanguage
    id: '#3'
    operation: Filter
    output: IsOfficial , CountryCode , Language , Percentage
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#4'
  operation: Join
  output: '#3.IsOfficial , #1.LifeExpectancy , #3.Percentage , #1.Code , #1.IndepYear
    , #1.Region , #1.Capital , #1.LocalName , #1.Name , #1.Continent , #1.Population
    , #1.HeadOfState , #1.GovernmentForm , #1.GNP , #1.Code2 , #1.SurfaceArea , #1.GNPOld
    , #3.Language , #3.CountryCode'
  predicate: 'Predicate [ #3.CountryCode = #1.Code ]'
- children:
  - id: '#5'
    operation: Scan Table
    output: Code2 , Region , IndepYear , HeadOfState , Name , GNPOld , Continent ,
      GNP , Capital , LifeExpectancy , LocalName , SurfaceArea , Code , Population
      , GovernmentForm
    table: country
  - children:
    - id: '#6'
      operation: Scan Table
      output: IsOfficial , CountryCode , Language , Percentage
      predicate: Predicate [ Language = 'Dutch' ]
      table: countrylanguage
    id: '#7'
    operation: Filter
    output: IsOfficial , CountryCode , Language , Percentage
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#8'
  operation: Join
  output: '#5.Population , #5.Code2 , #7.IsOfficial , #5.Name , #5.LifeExpectancy
    , #5.Code , #7.Percentage , #5.Continent , #5.GNP , #7.Language , #5.GNPOld ,
    #5.SurfaceArea , #5.IndepYear , #5.Region , #5.HeadOfState , #5.GovernmentForm
    , #7.CountryCode , #5.LocalName , #5.Capital'
  predicate: 'Predicate [ #7.CountryCode = #5.Code ]'
id: '#9'
operation: Union
output: '#4.CountryCode , #4.IsOfficial , #4.Code2 , #4.Percentage , #4.Language ,
  #4.LifeExpectancy , #4.GNP , #4.Region , #4.GNPOld , #4.Name , #4.IndepYear , #4.SurfaceArea
  , #4.Capital , #4.HeadOfState , #4.Population , #4.GovernmentForm , #4.Code , #4.Continent
  , #4.LocalName'
"
ec825644def6d351087212ad83bc285b307c370ff3598206227c45b0b4188c7f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Language , Count_Star ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ T.Language ]
      In: Scan Table [ countrylanguage ] Output [ Language , CountryCode ]
      In: Filter Predicate [ Continent = 'Asia' ] Output [ Code ]
        In: Scan Table [ country ] Output [ Code , Continent ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Language , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Code = #3.CountryCode ]"", ""output"": ""#3.Language"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , CountryCode""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Code , Continent
        table: country
      id: '#2'
      operation: Filter
      output: Code
      predicate: Predicate [ Continent = 'Asia' ]
    - id: '#3'
      operation: Scan Table
      output: Language , CountryCode
      table: countrylanguage
    id: '#4'
    operation: Join
    output: '#3.Language'
    predicate: 'Predicate [ #2.Code = #3.CountryCode ]'
  id: '#5'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#6'
operation: TopSort
output: Language , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
bd6c48013f2fe3554e4971954f587f19ac143f32bfc43bc64107385601892a7f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Language , Count_Star ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ T.Language ]
      In: Scan Table [ countrylanguage ] Output [ Language , CountryCode ]
      In: Filter Predicate [ Continent = 'Asia' ] Output [ Code ]
        In: Scan Table [ country ] Output [ Code , Continent ]","{""id"": ""#6"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Language , Count_Star"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Code = #3.CountryCode ]"", ""output"": ""#3.Language"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , CountryCode""}]}]}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: Code , Continent
        table: country
      id: '#2'
      operation: Filter
      output: Code
      predicate: Predicate [ Continent = 'Asia' ]
    - id: '#3'
      operation: Scan Table
      output: Language , CountryCode
      table: countrylanguage
    id: '#4'
    operation: Join
    output: '#3.Language'
    predicate: 'Predicate [ #2.Code = #3.CountryCode ]'
  id: '#5'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#6'
operation: TopSort
output: Language , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
325a3137319c748777644852730ad792ab3dcc7f88ab2407ae185d7899dde3c2,"Filter Predicate [ Count_Star = 1 ] Output [ Language ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ T.Language ]
      In: Scan Table [ countrylanguage ] Output [ Language , CountryCode ]
      In: Scan Table [ country ] Predicate [ GovernmentForm = 'Republic' ] Output [ GovernmentForm , Code ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star = 1 ]"", ""output"": ""Language"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#2.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'Republic' ]"", ""output"": ""GovernmentForm , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: GovernmentForm , Code
      predicate: Predicate [ GovernmentForm = 'Republic' ]
      table: country
    - id: '#2'
      operation: Scan Table
      output: Language , CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#2.Language'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#5'
operation: Filter
output: Language
predicate: Predicate [ Count_Star = 1 ]
"
b903ad5349ab796f8ca5e9ac20b113a4b545f06cd1b8fd03918a5b11ed313a29,"Filter Predicate [ Count_Star = 1 ] Output [ Language ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ T.Language ]
      In: Scan Table [ countrylanguage ] Output [ Language , CountryCode ]
      In: Scan Table [ country ] Predicate [ GovernmentForm = 'Republic' ] Output [ GovernmentForm , Code ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star = 1 ]"", ""output"": ""Language"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#2.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm = 'Republic' ]"", ""output"": ""GovernmentForm , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: GovernmentForm , Code
      predicate: Predicate [ GovernmentForm = 'Republic' ]
      table: country
    - id: '#2'
      operation: Scan Table
      output: Language , CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#2.Language'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#5'
operation: Filter
output: Language
predicate: Predicate [ Count_Star = 1 ]
"
26edc7b34917846dc6fb176c89ec97752e591daa31f3fadc5e0bcb84f4b56b2c,"TopSort Rows [ 1 ] OrderBy [ Population DESC ] Output [ Name , Population ]
  In: Join Predicate [ B.CountryCode = T.CountryCode ] Output [ T.Population , T.Name ]
    In: Scan Table [ city ] Output [ Name , Population , CountryCode ]
    In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Population DESC ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.CountryCode ]"", ""output"": ""#2.Population , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Name , Population , CountryCode""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language , CountryCode
    predicate: Predicate [ Language = 'English' ]
    table: countrylanguage
  - id: '#2'
    operation: Scan Table
    output: Name , Population , CountryCode
    table: city
  id: '#3'
  operation: Join
  output: '#2.Population , #2.Name'
  predicate: 'Predicate [ #1.CountryCode = #2.CountryCode ]'
id: '#4'
operation: TopSort
output: Name , Population
predicate: Rows [ 1 ] OrderBy [ Population DESC ]
"
5ef06542a1781f98163159be9c68e3f95ece37b1693cc50f7cbc6bb37dbda369,"TopSort Rows [ 1 ] OrderBy [ Population DESC ] Output [ Name , Population ]
  In: Join Predicate [ B.CountryCode = T.CountryCode ] Output [ T.Population , T.Name ]
    In: Scan Table [ city ] Output [ Name , Population , CountryCode ]
    In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]","{""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Population DESC ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.CountryCode = #2.CountryCode ]"", ""output"": ""#2.Population , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Name , Population , CountryCode""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language , CountryCode
    predicate: Predicate [ Language = 'English' ]
    table: countrylanguage
  - id: '#2'
    operation: Scan Table
    output: Name , Population , CountryCode
    table: city
  id: '#3'
  operation: Join
  output: '#2.Population , #2.Name'
  predicate: 'Predicate [ #1.CountryCode = #2.CountryCode ]'
id: '#4'
operation: TopSort
output: Name , Population
predicate: Rows [ 1 ] OrderBy [ Population DESC ]
"
cf1777ff01be53121ea57ad7746f882c2f961f98fea981a64849e65d84fc5d67,"TopSort Rows [ 1 ] OrderBy [ SurfaceArea DESC ] Output [ Name , SurfaceArea , LifeExpectancy , Population ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ Name , SurfaceArea , LifeExpectancy , Population ]
    In: Scan Table [ country ] Output [ Name , Population , LifeExpectancy , SurfaceArea , Continent ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ SurfaceArea DESC ]"", ""output"": ""Name , SurfaceArea , LifeExpectancy , Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Name , SurfaceArea , LifeExpectancy , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population , LifeExpectancy , SurfaceArea , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Population , LifeExpectancy , SurfaceArea , Continent
    table: country
  id: '#2'
  operation: Filter
  output: Name , SurfaceArea , LifeExpectancy , Population
  predicate: Predicate [ Continent = 'Asia' ]
id: '#3'
operation: TopSort
output: Name , SurfaceArea , LifeExpectancy , Population
predicate: Rows [ 1 ] OrderBy [ SurfaceArea DESC ]
"
076c9d19590b6ed576e8cbc4b87736164794b7f67abce410318e4a5a36166a83,"TopSort Rows [ 1 ] OrderBy [ SurfaceArea DESC ] Output [ Name , SurfaceArea , LifeExpectancy , Population ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ Name , SurfaceArea , LifeExpectancy , Population ]
    In: Scan Table [ country ] Output [ Name , Population , LifeExpectancy , SurfaceArea , Continent ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ SurfaceArea DESC ]"", ""output"": ""Name , SurfaceArea , LifeExpectancy , Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Name , SurfaceArea , LifeExpectancy , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population , LifeExpectancy , SurfaceArea , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Population , LifeExpectancy , SurfaceArea , Continent
    table: country
  id: '#2'
  operation: Filter
  output: Name , SurfaceArea , LifeExpectancy , Population
  predicate: Predicate [ Continent = 'Asia' ]
id: '#3'
operation: TopSort
output: Name , SurfaceArea , LifeExpectancy , Population
predicate: Rows [ 1 ] OrderBy [ SurfaceArea DESC ]
"
77339ce451bff4db5fb89e5639a28995743d1ebb7b76c82c33c1f952c058812d,"Aggregate Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy ]
  In: Except Predicate [ B.Name = T.Name ] Output [ B.LifeExpectancy ]
    In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
        In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , IsOfficial , CountryCode ]
    In: Scan Table [ country ] Output [ Name , LifeExpectancy ]","{""id"": ""#7"", ""operation"": ""Aggregate"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy"", ""children"": [{""id"": ""#6"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Name = #5.Name ]"", ""output"": ""#1.LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , LifeExpectancy""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.CountryCode = #4.Code ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , LifeExpectancy
    table: country
  - children:
    - children:
      - id: '#2'
        operation: Scan Table
        output: Language , IsOfficial , CountryCode
        predicate: Predicate [ Language = 'English' ]
        table: countrylanguage
      id: '#3'
      operation: Filter
      output: CountryCode
      predicate: Predicate [ IsOfficial = 'T' ]
    - id: '#4'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#5'
    operation: Join
    output: '#4.Name'
    predicate: 'Predicate [ #3.CountryCode = #4.Code ]'
  id: '#6'
  operation: Except
  output: '#1.LifeExpectancy'
  predicate: 'Predicate [ #1.Name = #5.Name ]'
id: '#7'
operation: Aggregate
output: AVG(LifeExpectancy) AS Avg_LifeExpectancy
"
9e169afed9298dcaf606f723081977a0d33d4f22d10fc326ab83da4d35bc80d6,"Aggregate Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy ]
  In: Except Predicate [ B.Name = T.Name ] Output [ B.LifeExpectancy ]
    In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
        In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , IsOfficial , CountryCode ]
    In: Scan Table [ country ] Output [ Name , LifeExpectancy ]","{""id"": ""#7"", ""operation"": ""Aggregate"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy"", ""children"": [{""id"": ""#6"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Name = #5.Name ]"", ""output"": ""#1.LifeExpectancy"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , LifeExpectancy""}, {""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.CountryCode = #4.Code ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , LifeExpectancy
    table: country
  - children:
    - children:
      - id: '#2'
        operation: Scan Table
        output: Language , IsOfficial , CountryCode
        predicate: Predicate [ Language = 'English' ]
        table: countrylanguage
      id: '#3'
      operation: Filter
      output: CountryCode
      predicate: Predicate [ IsOfficial = 'T' ]
    - id: '#4'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#5'
    operation: Join
    output: '#4.Name'
    predicate: 'Predicate [ #3.CountryCode = #4.Code ]'
  id: '#6'
  operation: Except
  output: '#1.LifeExpectancy'
  predicate: 'Predicate [ #1.Name = #5.Name ]'
id: '#7'
operation: Aggregate
output: AVG(LifeExpectancy) AS Avg_LifeExpectancy
"
f7f4826cde3d4d2d0ff201160a9274986c4dc75f8346cba26e99e80fd3ccc0b4,"Aggregate Output [ SUM(Population) AS Sum_Population ]
  In: Except Predicate [ B.Name = T.Name ] Output [ B.Population ]
    In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
    In: Scan Table [ country ] Output [ Name , Population ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population"", ""children"": [{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Name = #4.Name ]"", ""output"": ""#1.Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #3.Code ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Population
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: Language , CountryCode
      predicate: Predicate [ Language = 'English' ]
      table: countrylanguage
    - id: '#3'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#4'
    operation: Join
    output: '#3.Name'
    predicate: 'Predicate [ #2.CountryCode = #3.Code ]'
  id: '#5'
  operation: Except
  output: '#1.Population'
  predicate: 'Predicate [ #1.Name = #4.Name ]'
id: '#6'
operation: Aggregate
output: SUM(Population) AS Sum_Population
"
aead834686e53b5a28f6330568c6b82b64797de7cded35cbc5b1feab82bda05c,"Aggregate Output [ SUM(Population) AS Sum_Population ]
  In: Except Predicate [ B.Name = T.Name ] Output [ B.Population ]
    In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
    In: Scan Table [ country ] Output [ Name , Population ]","{""id"": ""#6"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population"", ""children"": [{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.Name = #4.Name ]"", ""output"": ""#1.Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #3.Code ]"", ""output"": ""#3.Name"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Name , Population
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: Language , CountryCode
      predicate: Predicate [ Language = 'English' ]
      table: countrylanguage
    - id: '#3'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#4'
    operation: Join
    output: '#3.Name'
    predicate: 'Predicate [ #2.CountryCode = #3.Code ]'
  id: '#5'
  operation: Except
  output: '#1.Population'
  predicate: 'Predicate [ #1.Name = #4.Name ]'
id: '#6'
operation: Aggregate
output: SUM(Population) AS Sum_Population
"
76aabb0a0ad501bbb8c847b9056b539fcd3780a5c7da5f754aee2fc436378746,"Join Predicate [ B.Code = T.CountryCode ] Output [ T.Language ]
  In: Filter Predicate [ IsOfficial = 'T' ] Output [ Language , CountryCode ]
    In: Scan Table [ countrylanguage ] Output [ Language , IsOfficial , CountryCode ]
  In: Scan Table [ country ] Predicate [ HeadOfState = 'Beatrix' ] Output [ HeadOfState , Code ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #3.CountryCode ]"", ""output"": ""#3.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ HeadOfState = 'Beatrix' ]"", ""output"": ""HeadOfState , Code""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""Language , CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , IsOfficial , CountryCode""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: HeadOfState , Code
  predicate: Predicate [ HeadOfState = 'Beatrix' ]
  table: country
- children:
  - id: '#2'
    operation: Scan Table
    output: Language , IsOfficial , CountryCode
    table: countrylanguage
  id: '#3'
  operation: Filter
  output: Language , CountryCode
  predicate: Predicate [ IsOfficial = 'T' ]
id: '#4'
operation: Join
output: '#3.Language'
predicate: 'Predicate [ #1.Code = #3.CountryCode ]'
"
1d2463926c06c0b305d781cd6e0713784fbcac3498b19ded257d886e67364acc,"Join Predicate [ B.Code = T.CountryCode ] Output [ T.Language ]
  In: Filter Predicate [ IsOfficial = 'T' ] Output [ Language , CountryCode ]
    In: Scan Table [ countrylanguage ] Output [ Language , IsOfficial , CountryCode ]
  In: Scan Table [ country ] Predicate [ HeadOfState = 'Beatrix' ] Output [ HeadOfState , Code ]","{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #3.CountryCode ]"", ""output"": ""#3.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ HeadOfState = 'Beatrix' ]"", ""output"": ""HeadOfState , Code""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""Language , CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , IsOfficial , CountryCode""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: HeadOfState , Code
  predicate: Predicate [ HeadOfState = 'Beatrix' ]
  table: country
- children:
  - id: '#2'
    operation: Scan Table
    output: Language , IsOfficial , CountryCode
    table: countrylanguage
  id: '#3'
  operation: Filter
  output: Language , CountryCode
  predicate: Predicate [ IsOfficial = 'T' ]
id: '#4'
operation: Join
output: '#3.Language'
predicate: 'Predicate [ #1.Code = #3.CountryCode ]'
"
24b9e3ac13501e8a2eb99f6d37af002f21006457b42f6138786b9a75515062a4,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ T.Language ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ Language , CountryCode ]
      In: Scan Table [ countrylanguage ] Output [ Language , IsOfficial , CountryCode ]
    In: Scan Table [ country ] Predicate [ IndepYear < 1930 ] Output [ IndepYear , Code ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #3.CountryCode ] Distinct [ true ]"", ""output"": ""#3.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ IndepYear < 1930 ]"", ""output"": ""IndepYear , Code""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""Language , CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , IsOfficial , CountryCode""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: IndepYear , Code
    predicate: Predicate [ IndepYear < 1930 ]
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      table: countrylanguage
    id: '#3'
    operation: Filter
    output: Language , CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#4'
  operation: Join
  output: '#3.Language'
  predicate: 'Predicate [ #1.Code = #3.CountryCode ] Distinct [ true ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
4081e5d7bc31db228a3c170e395df647ce46a1fd16e6f1ac5d2606249a8b1d37,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ T.Language ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ Language , CountryCode ]
      In: Scan Table [ countrylanguage ] Output [ Language , IsOfficial , CountryCode ]
    In: Scan Table [ country ] Predicate [ IndepYear < 1930 ] Output [ IndepYear , Code ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #3.CountryCode ] Distinct [ true ]"", ""output"": ""#3.Language"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ IndepYear < 1930 ]"", ""output"": ""IndepYear , Code""}, {""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""Language , CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language , IsOfficial , CountryCode""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: IndepYear , Code
    predicate: Predicate [ IndepYear < 1930 ]
    table: country
  - children:
    - id: '#2'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      table: countrylanguage
    id: '#3'
    operation: Filter
    output: Language , CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  id: '#4'
  operation: Join
  output: '#3.Language'
  predicate: 'Predicate [ #1.Code = #3.CountryCode ] Distinct [ true ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
1c3db4eb8cdcb620190283407819418853749cad50efe83d47189b48e2ecdde4,"Join Predicate [ T.SurfaceArea > B.Min_SurfaceArea ] Output [ T.Name ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea ]
  In: Aggregate Output [ MIN(SurfaceArea) AS Min_SurfaceArea ]
    In: Filter Predicate [ Continent = 'Europe' ] Output [ SurfaceArea ]
      In: Scan Table [ country ] Output [ SurfaceArea , Continent ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.SurfaceArea > #3.Min_SurfaceArea ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MIN(SurfaceArea) AS Min_SurfaceArea"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Europe' ]"", ""output"": ""SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""SurfaceArea , Continent""}]}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: SurfaceArea , Continent
      table: country
    id: '#2'
    operation: Filter
    output: SurfaceArea
    predicate: Predicate [ Continent = 'Europe' ]
  id: '#3'
  operation: Aggregate
  output: MIN(SurfaceArea) AS Min_SurfaceArea
- id: '#4'
  operation: Scan Table
  output: Name , SurfaceArea
  table: country
id: '#5'
operation: Join
output: '#4.Name'
predicate: 'Predicate [ #4.SurfaceArea > #3.Min_SurfaceArea ]'
"
a1fb0df29395bbcc497b10676e7f0fcc9e1a41b4362640374d47995c3510d7a2,"Join Predicate [ T.SurfaceArea > B.Min_SurfaceArea ] Output [ T.Name ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea ]
  In: Aggregate Output [ MIN(SurfaceArea) AS Min_SurfaceArea ]
    In: Filter Predicate [ Continent = 'Europe' ] Output [ SurfaceArea ]
      In: Scan Table [ country ] Output [ SurfaceArea , Continent ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.SurfaceArea > #3.Min_SurfaceArea ]"", ""output"": ""#4.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MIN(SurfaceArea) AS Min_SurfaceArea"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Europe' ]"", ""output"": ""SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""SurfaceArea , Continent""}]}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: SurfaceArea , Continent
      table: country
    id: '#2'
    operation: Filter
    output: SurfaceArea
    predicate: Predicate [ Continent = 'Europe' ]
  id: '#3'
  operation: Aggregate
  output: MIN(SurfaceArea) AS Min_SurfaceArea
- id: '#4'
  operation: Scan Table
  output: Name , SurfaceArea
  table: country
id: '#5'
operation: Join
output: '#4.Name'
predicate: 'Predicate [ #4.SurfaceArea > #3.Min_SurfaceArea ]'
"
8e3e0c5cc6890da0f2ac1becf06e642b0b35b4f63f9c20289406a40c69a77641,"Join Predicate [ T.Population < B.Max_Population ] Output [ T.Name ]
  In: Filter Predicate [ Continent = 'Africa' ] Output [ Name , Population ]
    In: Scan Table [ country ] Output [ Name , Population , Continent ]
  In: Aggregate Output [ MAX(Population) AS Max_Population ]
    In: Filter Predicate [ Continent = 'Asia' ] Output [ Population ]
      In: Scan Table [ country ] Output [ Population , Continent ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Population < #3.Max_Population ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MAX(Population) AS Max_Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Population , Continent""}]}]}, {""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population , Continent""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Population , Continent
      table: country
    id: '#2'
    operation: Filter
    output: Population
    predicate: Predicate [ Continent = 'Asia' ]
  id: '#3'
  operation: Aggregate
  output: MAX(Population) AS Max_Population
- children:
  - id: '#4'
    operation: Scan Table
    output: Name , Population , Continent
    table: country
  id: '#5'
  operation: Filter
  output: Name , Population
  predicate: Predicate [ Continent = 'Africa' ]
id: '#6'
operation: Join
output: '#5.Name'
predicate: 'Predicate [ #5.Population < #3.Max_Population ]'
"
1e24f527faaaa8d4bbae1ada8b98e945ff2183598b52186f41e56c2ea6b45afa,"Join Predicate [ T.Population < B.Min_Population ] Output [ T.Name ]
  In: Filter Predicate [ Continent = 'Africa' ] Output [ Name , Population ]
    In: Scan Table [ country ] Output [ Name , Population , Continent ]
  In: Aggregate Output [ MIN(Population) AS Min_Population ]
    In: Filter Predicate [ Continent = 'Asia' ] Output [ Population ]
      In: Scan Table [ country ] Output [ Population , Continent ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Population < #3.Min_Population ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MIN(Population) AS Min_Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Population , Continent""}]}]}, {""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population , Continent""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Population , Continent
      table: country
    id: '#2'
    operation: Filter
    output: Population
    predicate: Predicate [ Continent = 'Asia' ]
  id: '#3'
  operation: Aggregate
  output: MIN(Population) AS Min_Population
- children:
  - id: '#4'
    operation: Scan Table
    output: Name , Population , Continent
    table: country
  id: '#5'
  operation: Filter
  output: Name , Population
  predicate: Predicate [ Continent = 'Africa' ]
id: '#6'
operation: Join
output: '#5.Name'
predicate: 'Predicate [ #5.Population < #3.Min_Population ]'
"
b23e0c05a205accabd7aae54026cd0c93fc6315ab33314ad9de359fdc652715e,"Join Predicate [ T.Population > B.Max_Population ] Output [ T.Name ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ Name , Population ]
    In: Scan Table [ country ] Output [ Name , Population , Continent ]
  In: Aggregate Output [ MAX(Population) AS Max_Population ]
    In: Filter Predicate [ Continent = 'Africa' ] Output [ Population ]
      In: Scan Table [ country ] Output [ Population , Continent ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Population > #3.Max_Population ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MAX(Population) AS Max_Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ]"", ""output"": ""Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Population , Continent""}]}]}, {""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population , Continent""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Population , Continent
      table: country
    id: '#2'
    operation: Filter
    output: Population
    predicate: Predicate [ Continent = 'Africa' ]
  id: '#3'
  operation: Aggregate
  output: MAX(Population) AS Max_Population
- children:
  - id: '#4'
    operation: Scan Table
    output: Name , Population , Continent
    table: country
  id: '#5'
  operation: Filter
  output: Name , Population
  predicate: Predicate [ Continent = 'Asia' ]
id: '#6'
operation: Join
output: '#5.Name'
predicate: 'Predicate [ #5.Population > #3.Max_Population ]'
"
4a26693e8b64b388a869f74c12041375fe55f7851e8138794063998f3b04f9f3,"Join Predicate [ T.Population > B.Min_Population ] Output [ T.Name ]
  In: Filter Predicate [ Continent = 'Asia' ] Output [ Name , Population ]
    In: Scan Table [ country ] Output [ Name , Population , Continent ]
  In: Aggregate Output [ MIN(Population) AS Min_Population ]
    In: Filter Predicate [ Continent = 'Africa' ] Output [ Population ]
      In: Scan Table [ country ] Output [ Population , Continent ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.Population > #3.Min_Population ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""MIN(Population) AS Min_Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Africa' ]"", ""output"": ""Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Population , Continent""}]}]}, {""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population , Continent""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Population , Continent
      table: country
    id: '#2'
    operation: Filter
    output: Population
    predicate: Predicate [ Continent = 'Africa' ]
  id: '#3'
  operation: Aggregate
  output: MIN(Population) AS Min_Population
- children:
  - id: '#4'
    operation: Scan Table
    output: Name , Population , Continent
    table: country
  id: '#5'
  operation: Filter
  output: Name , Population
  predicate: Predicate [ Continent = 'Asia' ]
id: '#6'
operation: Join
output: '#5.Name'
predicate: 'Predicate [ #5.Population > #3.Min_Population ]'
"
3344efc6cf9baa0bfa29c17aab9d688f6b48c8f4b7d92cf472dd385b9d171429,"Except Predicate [ B.CountryCode = T.CountryCode ] Output [ B.CountryCode ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
  In: Aggregate GroupBy [ CountryCode ] Output [ CountryCode ]
    In: Scan Table [ countrylanguage ] Output [ CountryCode ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.CountryCode = #3.CountryCode ]"", ""output"": ""#2.CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: CountryCode
    table: countrylanguage
  id: '#2'
  operation: Aggregate
  output: CountryCode
  predicate: GroupBy [ CountryCode ]
- id: '#3'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language = 'English' ]
  table: countrylanguage
id: '#4'
operation: Except
output: '#2.CountryCode'
predicate: 'Predicate [ #2.CountryCode = #3.CountryCode ]'
"
d75c9b7a13adce151a16d7cca833ab0cb99145f5a35857c3008c4f22ddb3bf44,"Except Predicate [ B.CountryCode = T.CountryCode ] Output [ B.CountryCode ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
  In: Aggregate GroupBy [ CountryCode ] Output [ CountryCode ]
    In: Scan Table [ countrylanguage ] Output [ CountryCode ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.CountryCode = #3.CountryCode ]"", ""output"": ""#2.CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: CountryCode
    table: countrylanguage
  id: '#2'
  operation: Aggregate
  output: CountryCode
  predicate: GroupBy [ CountryCode ]
- id: '#3'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language = 'English' ]
  table: countrylanguage
id: '#4'
operation: Except
output: '#2.CountryCode'
predicate: 'Predicate [ #2.CountryCode = #3.CountryCode ]'
"
deabaedeb3981927bf1f396a795b435a3035bd61ca255b76038121b2dbae91d2,"Aggregate GroupBy [ CountryCode ] Output [ CountryCode ]
  In: Scan Table [ countrylanguage ] Predicate [ Language <> 'English' ] Output [ Language , CountryCode ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language <> 'English' ]"", ""output"": ""Language , CountryCode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language <> 'English' ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: CountryCode
predicate: GroupBy [ CountryCode ]
"
d1f8533f2672bfc50cab0c09ffe4250953ede5126b08584e81b5315b1947af94,"Aggregate GroupBy [ CountryCode ] Output [ CountryCode ]
  In: Scan Table [ countrylanguage ] Predicate [ Language <> 'English' ] Output [ Language , CountryCode ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language <> 'English' ]"", ""output"": ""Language , CountryCode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language <> 'English' ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: CountryCode
predicate: GroupBy [ CountryCode ]
"
411e3a9f339783dbf100ebab4a646a530bbbf7c0315e64cb7fc5982f87dd007e,"Except Predicate [ T.CountryCode = B.Code ] Output [ B.Code ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
  In: Scan Table [ country ] Predicate [ GovernmentForm <> 'Republic' ] Output [ GovernmentForm , Code ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.CountryCode = #1.Code ]"", ""output"": ""#1.Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm <> 'Republic' ]"", ""output"": ""GovernmentForm , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: GovernmentForm , Code
  predicate: Predicate [ GovernmentForm <> 'Republic' ]
  table: country
- id: '#2'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language = 'English' ]
  table: countrylanguage
id: '#3'
operation: Except
output: '#1.Code'
predicate: 'Predicate [ #2.CountryCode = #1.Code ]'
"
37f9a40298fb04b95b25179baa94b661d7fd499541ebb2c201308c9abf2387cf,"Except Predicate [ T.CountryCode = B.Code ] Output [ B.Code ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , CountryCode ]
  In: Scan Table [ country ] Predicate [ GovernmentForm <> 'Republic' ] Output [ GovernmentForm , Code ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.CountryCode = #1.Code ]"", ""output"": ""#1.Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ GovernmentForm <> 'Republic' ]"", ""output"": ""GovernmentForm , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , CountryCode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: GovernmentForm , Code
  predicate: Predicate [ GovernmentForm <> 'Republic' ]
  table: country
- id: '#2'
  operation: Scan Table
  output: Language , CountryCode
  predicate: Predicate [ Language = 'English' ]
  table: countrylanguage
id: '#3'
operation: Except
output: '#1.Code'
predicate: 'Predicate [ #2.CountryCode = #1.Code ]'
"
c0a940b8887f4c7ef794eee72ddfb7b8c13f2f0d081cf6d873573933faf69e99,"Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ T.Name ]
  In: Scan Table [ city ] Output [ Name , CountryCode ]
  In: Except Predicate [ B.Name = T.Name ] Output [ B.Code ]
    In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
        In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , IsOfficial , CountryCode ]
    In: Filter Predicate [ Continent = 'Europe' ] Output [ Name , Code ]
      In: Scan Table [ country ] Output [ Name , Code , Continent ]","{""id"": ""#9"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #7.Code = #8.CountryCode ] Distinct [ true ]"", ""output"": ""#8.Name"", ""children"": [{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Name = #6.Name ]"", ""output"": ""#2.Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Europe' ]"", ""output"": ""Name , Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code , Continent""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.CountryCode = #5.Code ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}, {""id"": ""#8"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Name , CountryCode""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code , Continent
      table: country
    id: '#2'
    operation: Filter
    output: Name , Code
    predicate: Predicate [ Continent = 'Europe' ]
  - children:
    - children:
      - id: '#3'
        operation: Scan Table
        output: Language , IsOfficial , CountryCode
        predicate: Predicate [ Language = 'English' ]
        table: countrylanguage
      id: '#4'
      operation: Filter
      output: CountryCode
      predicate: Predicate [ IsOfficial = 'T' ]
    - id: '#5'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#6'
    operation: Join
    output: '#5.Name'
    predicate: 'Predicate [ #4.CountryCode = #5.Code ]'
  id: '#7'
  operation: Except
  output: '#2.Code'
  predicate: 'Predicate [ #2.Name = #6.Name ]'
- id: '#8'
  operation: Scan Table
  output: Name , CountryCode
  table: city
id: '#9'
operation: Join
output: '#8.Name'
predicate: 'Predicate [ #7.Code = #8.CountryCode ] Distinct [ true ]'
"
0d84fb9681915bfd4ab3a629c27b5ce0af8fc3c65ff7132f2d4cee75b10a0153,"Join Predicate [ B.Code = T.CountryCode ] Distinct [ true ] Output [ T.Name ]
  In: Scan Table [ city ] Output [ Name , CountryCode ]
  In: Except Predicate [ B.Name = T.Name ] Output [ B.Code ]
    In: Join Predicate [ B.CountryCode = T.Code ] Output [ T.Name ]
      In: Scan Table [ country ] Output [ Name , Code ]
      In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
        In: Scan Table [ countrylanguage ] Predicate [ Language = 'English' ] Output [ Language , IsOfficial , CountryCode ]
    In: Filter Predicate [ Continent = 'Europe' ] Output [ Name , Code ]
      In: Scan Table [ country ] Output [ Name , Code , Continent ]","{""id"": ""#9"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #7.Code = #8.CountryCode ] Distinct [ true ]"", ""output"": ""#8.Name"", ""children"": [{""id"": ""#7"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Name = #6.Name ]"", ""output"": ""#2.Code"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Europe' ]"", ""output"": ""Name , Code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code , Continent""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.CountryCode = #5.Code ]"", ""output"": ""#5.Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'English' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}]}]}, {""id"": ""#8"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Name , CountryCode""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code , Continent
      table: country
    id: '#2'
    operation: Filter
    output: Name , Code
    predicate: Predicate [ Continent = 'Europe' ]
  - children:
    - children:
      - id: '#3'
        operation: Scan Table
        output: Language , IsOfficial , CountryCode
        predicate: Predicate [ Language = 'English' ]
        table: countrylanguage
      id: '#4'
      operation: Filter
      output: CountryCode
      predicate: Predicate [ IsOfficial = 'T' ]
    - id: '#5'
      operation: Scan Table
      output: Name , Code
      table: country
    id: '#6'
    operation: Join
    output: '#5.Name'
    predicate: 'Predicate [ #4.CountryCode = #5.Code ]'
  id: '#7'
  operation: Except
  output: '#2.Code'
  predicate: 'Predicate [ #2.Name = #6.Name ]'
- id: '#8'
  operation: Scan Table
  output: Name , CountryCode
  table: city
id: '#9'
operation: Join
output: '#8.Name'
predicate: 'Predicate [ #7.Code = #8.CountryCode ] Distinct [ true ]'
"
d4255528f288011bf282f9c70db59fb67c2df7481c80b30ccdb2bb1bb10a28d6,"Join Predicate [ B.CountryCode = T.CountryCode ] Distinct [ true ] Output [ T.Name ]
  In: Scan Table [ city ] Output [ Name , CountryCode ]
  In: Join Predicate [ B.CountryCode = T.Code ] Output [ B.CountryCode ]
    In: Filter Predicate [ Continent = 'asia' ] Output [ Code ]
      In: Scan Table [ country ] Output [ Code , Continent ]
    In: Filter Predicate [ IsOfficial = 't' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'chinese' ] Output [ Language , IsOfficial , CountryCode ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.CountryCode = #6.CountryCode ] Distinct [ true ]"", ""output"": ""#6.Name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #4.Code ]"", ""output"": ""#2.CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 't' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'chinese' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'asia' ]"", ""output"": ""Code"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}]}]}, {""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Name , CountryCode""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      predicate: Predicate [ Language = 'chinese' ]
      table: countrylanguage
    id: '#2'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 't' ]
  - children:
    - id: '#3'
      operation: Scan Table
      output: Code , Continent
      table: country
    id: '#4'
    operation: Filter
    output: Code
    predicate: Predicate [ Continent = 'asia' ]
  id: '#5'
  operation: Join
  output: '#2.CountryCode'
  predicate: 'Predicate [ #2.CountryCode = #4.Code ]'
- id: '#6'
  operation: Scan Table
  output: Name , CountryCode
  table: city
id: '#7'
operation: Join
output: '#6.Name'
predicate: 'Predicate [ #5.CountryCode = #6.CountryCode ] Distinct [ true ]'
"
0236e60074389525ae99b74bd2a1c01b56e74854227b6ac59849d44d9a5c6c00,"Join Predicate [ B.CountryCode = T.CountryCode ] Distinct [ true ] Output [ T.Name ]
  In: Scan Table [ city ] Output [ Name , CountryCode ]
  In: Join Predicate [ B.CountryCode = T.Code ] Output [ B.CountryCode ]
    In: Filter Predicate [ Continent = 'Asia' ] Output [ Code ]
      In: Scan Table [ country ] Output [ Code , Continent ]
    In: Filter Predicate [ IsOfficial = 'T' ] Output [ CountryCode ]
      In: Scan Table [ countrylanguage ] Predicate [ Language = 'Chinese' ] Output [ Language , IsOfficial , CountryCode ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.CountryCode = #6.CountryCode ] Distinct [ true ]"", ""output"": ""#6.Name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.CountryCode = #4.Code ]"", ""output"": ""#2.CountryCode"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ IsOfficial = 'T' ]"", ""output"": ""CountryCode"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Chinese' ]"", ""output"": ""Language , IsOfficial , CountryCode""}]}, {""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Asia' ]"", ""output"": ""Code"", ""children"": [{""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Code , Continent""}]}]}, {""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Name , CountryCode""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Language , IsOfficial , CountryCode
      predicate: Predicate [ Language = 'Chinese' ]
      table: countrylanguage
    id: '#2'
    operation: Filter
    output: CountryCode
    predicate: Predicate [ IsOfficial = 'T' ]
  - children:
    - id: '#3'
      operation: Scan Table
      output: Code , Continent
      table: country
    id: '#4'
    operation: Filter
    output: Code
    predicate: Predicate [ Continent = 'Asia' ]
  id: '#5'
  operation: Join
  output: '#2.CountryCode'
  predicate: 'Predicate [ #2.CountryCode = #4.Code ]'
- id: '#6'
  operation: Scan Table
  output: Name , CountryCode
  table: city
id: '#7'
operation: Join
output: '#6.Name'
predicate: 'Predicate [ #5.CountryCode = #6.CountryCode ] Distinct [ true ]'
"
4a689d6560058bdd8adf9567862f41d9fd0787c77beb5f837b9b44c155a76705,"TopSort Rows [ 1 ] OrderBy [ Population ASC ] Output [ Name , SurfaceArea , IndepYear , Population ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea , IndepYear , Population ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Population ASC ]"", ""output"": ""Name , SurfaceArea , IndepYear , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea , IndepYear , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , SurfaceArea , IndepYear , Population
  table: country
id: '#2'
operation: TopSort
output: Name , SurfaceArea , IndepYear , Population
predicate: Rows [ 1 ] OrderBy [ Population ASC ]
"
e4c52b785e1632bd04805745f66503d7b650c8b3033ce632e1c491a6b718b3cf,"TopSort Rows [ 1 ] OrderBy [ Population ASC ] Output [ Name , SurfaceArea , IndepYear , Population ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea , IndepYear , Population ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Population ASC ]"", ""output"": ""Name , SurfaceArea , IndepYear , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea , IndepYear , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , SurfaceArea , IndepYear , Population
  table: country
id: '#2'
operation: TopSort
output: Name , SurfaceArea , IndepYear , Population
predicate: Rows [ 1 ] OrderBy [ Population ASC ]
"
8501b8421d3703c0f326d035b6a98713416838884d95dce6d6d6f9e9785e9513,"TopSort Rows [ 1 ] OrderBy [ SurfaceArea DESC ] Output [ Name , SurfaceArea , Population , HeadOfState ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea , Population , HeadOfState ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ SurfaceArea DESC ]"", ""output"": ""Name , SurfaceArea , Population , HeadOfState"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea , Population , HeadOfState""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , SurfaceArea , Population , HeadOfState
  table: country
id: '#2'
operation: TopSort
output: Name , SurfaceArea , Population , HeadOfState
predicate: Rows [ 1 ] OrderBy [ SurfaceArea DESC ]
"
d7fc07e68990b36dc06d1e0618a67411b9ca8d0cdbb2507c1994df52cec72a11,"TopSort Rows [ 1 ] OrderBy [ SurfaceArea DESC ] Output [ Name , SurfaceArea , Population , HeadOfState ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea , Population , HeadOfState ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ SurfaceArea DESC ]"", ""output"": ""Name , SurfaceArea , Population , HeadOfState"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea , Population , HeadOfState""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , SurfaceArea , Population , HeadOfState
  table: country
id: '#2'
operation: TopSort
output: Name , SurfaceArea , Population , HeadOfState
predicate: Rows [ 1 ] OrderBy [ SurfaceArea DESC ]
"
e8085d6ad1c2965658080e2c0ebc3816ca37ec522dd5cad2606e9607878526d6,"Filter Predicate [ Count_Star > 2 ] Output [ Name , Count_Star ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Output [ CountryCode ]
      In: Scan Table [ country ] Output [ Name , Code ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Name'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: Filter
output: Name , Count_Star
predicate: Predicate [ Count_Star > 2 ]
"
2c0de20779e40a8f22108d64a6d535afadb5261fca03a654dfb32a79b1987e60,"Filter Predicate [ Count_Star > 2 ] Output [ Name , Count_Star ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Code = T.CountryCode ] Output [ B.Name ]
      In: Scan Table [ countrylanguage ] Output [ CountryCode ]
      In: Scan Table [ country ] Output [ Name , Code ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""Name , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Code = #2.CountryCode ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Name , Code
      table: country
    - id: '#2'
      operation: Scan Table
      output: CountryCode
      table: countrylanguage
    id: '#3'
    operation: Join
    output: '#1.Name'
    predicate: 'Predicate [ #1.Code = #2.CountryCode ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: Filter
output: Name , Count_Star
predicate: Predicate [ Count_Star > 2 ]
"
b5f8586908d9c60a605f91dcdce8a372301ffec88f551fc7611f66e2e04a5840,"Aggregate GroupBy [ District ] Output [ countstar AS Count_Star , District ]
  In: Join Predicate [ T.Population > B.Avg_Population ] Output [ T.District ]
    In: Scan Table [ city ] Output [ Population , District ]
    In: Aggregate Output [ AVG(Population) AS Avg_Population ]
      In: Scan Table [ city ] Output [ Population ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ District ]"", ""output"": ""countstar AS Count_Star , District"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Population > #2.Avg_Population ]"", ""output"": ""#3.District"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Population) AS Avg_Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Population""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Population , District""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Population
      table: city
    id: '#2'
    operation: Aggregate
    output: AVG(Population) AS Avg_Population
  - id: '#3'
    operation: Scan Table
    output: Population , District
    table: city
  id: '#4'
  operation: Join
  output: '#3.District'
  predicate: 'Predicate [ #3.Population > #2.Avg_Population ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star , District
predicate: GroupBy [ District ]
"
f5e097f81472a5f1334b7da4a4ef498e2d1370ef2466d6fe70ffd87c12059458,"Aggregate GroupBy [ District ] Output [ countstar AS Count_Star , District ]
  In: Join Predicate [ T.Population > B.Avg_Population ] Output [ T.District ]
    In: Scan Table [ city ] Output [ Population , District ]
    In: Aggregate Output [ AVG(Population) AS Avg_Population ]
      In: Scan Table [ city ] Output [ Population ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ District ]"", ""output"": ""countstar AS Count_Star , District"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.Population > #2.Avg_Population ]"", ""output"": ""#3.District"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Population) AS Avg_Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Population""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""city"", ""output"": ""Population , District""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Population
      table: city
    id: '#2'
    operation: Aggregate
    output: AVG(Population) AS Avg_Population
  - id: '#3'
    operation: Scan Table
    output: Population , District
    table: city
  id: '#4'
  operation: Join
  output: '#3.District'
  predicate: 'Predicate [ #3.Population > #2.Avg_Population ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star , District
predicate: GroupBy [ District ]
"
d470e09983752f911b63e42f813e74b44f366f7c126cfd843b5dc8b70d8a80dd,"Filter Predicate [ Avg_LifeExpectancy > 72.0 ] Output [ GovernmentForm , Sum_Population ]
  In: Aggregate GroupBy [ GovernmentForm ] Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , GovernmentForm ]
    In: Scan Table [ country ] Output [ GovernmentForm , LifeExpectancy , Population ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Avg_LifeExpectancy > 72.0 ]"", ""output"": ""GovernmentForm , Sum_Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ GovernmentForm ]"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , GovernmentForm"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""GovernmentForm , LifeExpectancy , Population""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GovernmentForm , LifeExpectancy , Population
    table: country
  id: '#2'
  operation: Aggregate
  output: AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population
    , GovernmentForm
  predicate: GroupBy [ GovernmentForm ]
id: '#3'
operation: Filter
output: GovernmentForm , Sum_Population
predicate: Predicate [ Avg_LifeExpectancy > 72.0 ]
"
effadf8df6dc99841f6c5970c502b75ffa1c1763e6c4dbecda029eb47c339b71,"Filter Predicate [ Avg_LifeExpectancy > 72.0 ] Output [ GovernmentForm , Sum_Population ]
  In: Aggregate GroupBy [ GovernmentForm ] Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , GovernmentForm ]
    In: Scan Table [ country ] Output [ GovernmentForm , LifeExpectancy , Population ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Avg_LifeExpectancy > 72.0 ]"", ""output"": ""GovernmentForm , Sum_Population"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ GovernmentForm ]"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , GovernmentForm"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""GovernmentForm , LifeExpectancy , Population""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: GovernmentForm , LifeExpectancy , Population
    table: country
  id: '#2'
  operation: Aggregate
  output: AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population
    , GovernmentForm
  predicate: GroupBy [ GovernmentForm ]
id: '#3'
operation: Filter
output: GovernmentForm , Sum_Population
predicate: Predicate [ Avg_LifeExpectancy > 72.0 ]
"
e60ca4d3c1158e28353a8f15c12a2c2846a2d48f2f3bf754959163476896c575,"Filter Predicate [ Avg_LifeExpectancy < 72.0 ] Output [ Sum_Population , Avg_LifeExpectancy , Continent ]
  In: Aggregate GroupBy [ Continent ] Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , Continent ]
    In: Scan Table [ country ] Output [ LifeExpectancy , Population , Continent ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Avg_LifeExpectancy < 72.0 ]"", ""output"": ""Sum_Population , Avg_LifeExpectancy , Continent"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""LifeExpectancy , Population , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: LifeExpectancy , Population , Continent
    table: country
  id: '#2'
  operation: Aggregate
  output: AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population
    , Continent
  predicate: GroupBy [ Continent ]
id: '#3'
operation: Filter
output: Sum_Population , Avg_LifeExpectancy , Continent
predicate: Predicate [ Avg_LifeExpectancy < 72.0 ]
"
44db72f54c47304dbbd1f800ba4272ad3c910e06f260585d08261e5501deaddd,"Filter Predicate [ Avg_LifeExpectancy < 72.0 ] Output [ Sum_Population , Avg_LifeExpectancy , Continent ]
  In: Aggregate GroupBy [ Continent ] Output [ AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , Continent ]
    In: Scan Table [ country ] Output [ LifeExpectancy , Population , Continent ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Avg_LifeExpectancy < 72.0 ]"", ""output"": ""Sum_Population , Avg_LifeExpectancy , Continent"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Continent ]"", ""output"": ""AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population , Continent"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""LifeExpectancy , Population , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: LifeExpectancy , Population , Continent
    table: country
  id: '#2'
  operation: Aggregate
  output: AVG(LifeExpectancy) AS Avg_LifeExpectancy , SUM(Population) AS Sum_Population
    , Continent
  predicate: GroupBy [ Continent ]
id: '#3'
operation: Filter
output: Sum_Population , Avg_LifeExpectancy , Continent
predicate: Predicate [ Avg_LifeExpectancy < 72.0 ]
"
22fcbb5f6a1777be8b833f8a2bc392d1c77031be64764d8c10e70ae9a4d5e94b,"TopSort Rows [ 5 ] OrderBy [ SurfaceArea DESC ] Output [ Name , SurfaceArea ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 5 ] OrderBy [ SurfaceArea DESC ]"", ""output"": ""Name , SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , SurfaceArea
  table: country
id: '#2'
operation: TopSort
output: Name , SurfaceArea
predicate: Rows [ 5 ] OrderBy [ SurfaceArea DESC ]
"
cd4f8032e1b1e509a1649a730f3394d342daf5f43398b10aed829e6a4dfbe85b,"TopSort Rows [ 5 ] OrderBy [ SurfaceArea DESC ] Output [ Name , SurfaceArea ]
  In: Scan Table [ country ] Output [ Name , SurfaceArea ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 5 ] OrderBy [ SurfaceArea DESC ]"", ""output"": ""Name , SurfaceArea"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , SurfaceArea""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , SurfaceArea
  table: country
id: '#2'
operation: TopSort
output: Name , SurfaceArea
predicate: Rows [ 5 ] OrderBy [ SurfaceArea DESC ]
"
28ddb7e6b593e16d58aa021532f2d9e57af7b7574f003c9bc9d699893cf9f603,"TopSort Rows [ 3 ] OrderBy [ Population DESC ] Output [ Name , Population ]
  In: Scan Table [ country ] Output [ Name , Population ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ Population DESC ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Population
  table: country
id: '#2'
operation: TopSort
output: Name , Population
predicate: Rows [ 3 ] OrderBy [ Population DESC ]
"
a0d50025a0dacc9b581e55f5d52ab1998a2dbf2f8f5f5d67a453d729b68fa414,"TopSort Rows [ 3 ] OrderBy [ Population DESC ] Output [ Name , Population ]
  In: Scan Table [ country ] Output [ Name , Population ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ Population DESC ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Population
  table: country
id: '#2'
operation: TopSort
output: Name , Population
predicate: Rows [ 3 ] OrderBy [ Population DESC ]
"
942ebb3b2f283625abe8cb0f069bc441f28e042e63ea9dbad0891cdf9bdcf33b,"TopSort Rows [ 3 ] OrderBy [ Population ASC ] Output [ Name , Population ]
  In: Scan Table [ country ] Output [ Name , Population ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ Population ASC ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Population
  table: country
id: '#2'
operation: TopSort
output: Name , Population
predicate: Rows [ 3 ] OrderBy [ Population ASC ]
"
173f849d4bec55e9caad720de4a82d892641f70b6b43abbd5c0e7447006ac41b,"TopSort Rows [ 3 ] OrderBy [ Population ASC ] Output [ Name , Population ]
  In: Scan Table [ country ] Output [ Name , Population ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 3 ] OrderBy [ Population ASC ]"", ""output"": ""Name , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Name , Population""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Population
  table: country
id: '#2'
operation: TopSort
output: Name , Population
predicate: Rows [ 3 ] OrderBy [ Population ASC ]
"
5cba4e69aae92b9f05c0830dd3c8732a06eb00f0a2fa55052e50eba9644d1333,"Aggregate Output [ countstar AS Count_Star ]
  In: Filter Predicate [ Continent = 'asia' ] Output [ 1 as ONE ]
    In: Scan Table [ country ] Output [ Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'asia' ]"", ""output"": ""1 as ONE"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Continent
    table: country
  id: '#2'
  operation: Filter
  output: 1 as ONE
  predicate: Predicate [ Continent = 'asia' ]
id: '#3'
operation: Aggregate
output: countstar AS Count_Star
"
52dc4eb9635d36ed792f4224850acccdee7af499d06a3a62e4d20a8fe807686a,"Aggregate Output [ countstar AS Count_Star ]
  In: Filter Predicate [ Continent = 'asia' ] Output [ 1 as ONE ]
    In: Scan Table [ country ] Output [ Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'asia' ]"", ""output"": ""1 as ONE"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""output"": ""Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Continent
    table: country
  id: '#2'
  operation: Filter
  output: 1 as ONE
  predicate: Predicate [ Continent = 'asia' ]
id: '#3'
operation: Aggregate
output: countstar AS Count_Star
"
3a1b4170c50ef2fb65e0ffaa67b45ab9282a898ec6581c895060e31332cf025b,"Filter Predicate [ Continent = 'Europe' ] Output [ Name ]
  In: Scan Table [ country ] Predicate [ Population = 80000 ] Output [ Name , Population , Continent ]","{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Europe' ]"", ""output"": ""Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Population = 80000 ]"", ""output"": ""Name , Population , Continent""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Population , Continent
  predicate: Predicate [ Population = 80000 ]
  table: country
id: '#2'
operation: Filter
output: Name
predicate: Predicate [ Continent = 'Europe' ]
"
96e58374f4e8995981abdae0add2d49bb797fb8e70ebe07715e6906b533c1775,"Filter Predicate [ Continent = 'Europe' ] Output [ Name ]
  In: Scan Table [ country ] Predicate [ Population = 80000 ] Output [ Name , Population , Continent ]","{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'Europe' ]"", ""output"": ""Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ Population = 80000 ]"", ""output"": ""Name , Population , Continent""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Population , Continent
  predicate: Predicate [ Population = 80000 ]
  table: country
id: '#2'
operation: Filter
output: Name
predicate: Predicate [ Continent = 'Europe' ]
"
18f17add3885280a0a30c8986a4b02372b3efe4cc11524ebcf759748834e7f3f,"Aggregate Output [ SUM(Population) AS Sum_Population , AVG(SurfaceArea) AS Avg_SurfaceArea ]
  In: Filter Predicate [ Continent = 'north america' ] Output [ SurfaceArea , Population ]
    In: Scan Table [ country ] Predicate [ SurfaceArea > 3000.0 ] Output [ SurfaceArea , Population , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population , AVG(SurfaceArea) AS Avg_SurfaceArea"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'north america' ]"", ""output"": ""SurfaceArea , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ SurfaceArea > 3000.0 ]"", ""output"": ""SurfaceArea , Population , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: SurfaceArea , Population , Continent
    predicate: Predicate [ SurfaceArea > 3000.0 ]
    table: country
  id: '#2'
  operation: Filter
  output: SurfaceArea , Population
  predicate: Predicate [ Continent = 'north america' ]
id: '#3'
operation: Aggregate
output: SUM(Population) AS Sum_Population , AVG(SurfaceArea) AS Avg_SurfaceArea
"
a7b231276cbde5622a0f9f60560e0af1bab62d204e97a49af38c91aa73d0f2c0,"Aggregate Output [ SUM(Population) AS Sum_Population , AVG(SurfaceArea) AS Avg_SurfaceArea ]
  In: Filter Predicate [ Continent = 'north america' ] Output [ SurfaceArea , Population ]
    In: Scan Table [ country ] Predicate [ SurfaceArea > 3000.0 ] Output [ SurfaceArea , Population , Continent ]","{""id"": ""#3"", ""operation"": ""Aggregate"", ""output"": ""SUM(Population) AS Sum_Population , AVG(SurfaceArea) AS Avg_SurfaceArea"", ""children"": [{""id"": ""#2"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Continent = 'north america' ]"", ""output"": ""SurfaceArea , Population"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""country"", ""predicate"": ""Predicate [ SurfaceArea > 3000.0 ]"", ""output"": ""SurfaceArea , Population , Continent""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: SurfaceArea , Population , Continent
    predicate: Predicate [ SurfaceArea > 3000.0 ]
    table: country
  id: '#2'
  operation: Filter
  output: SurfaceArea , Population
  predicate: Predicate [ Continent = 'north america' ]
id: '#3'
operation: Aggregate
output: SUM(Population) AS Sum_Population , AVG(SurfaceArea) AS Avg_SurfaceArea
"
2531b53784175464db3290bd4ce5272d913cecfecb1ae586d9d36047e4493035,"Scan Table [ city ] Predicate [ Population >= 160000 AND Population <= 900000 ] Output [ Name , Population ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""predicate"": ""Predicate [ Population >= 160000 AND Population <= 900000 ]"", ""output"": ""Name , Population""}","id: '#1'
operation: Scan Table
output: Name , Population
predicate: Predicate [ Population >= 160000 AND Population <= 900000 ]
table: city
"
066534f971100acbd4ecf9d5a5ec2ac78b6c117238983af48d09b97b812e2236,"Scan Table [ city ] Predicate [ Population >= 160000 AND Population <= 900000 ] Output [ Name , Population ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""city"", ""predicate"": ""Predicate [ Population >= 160000 AND Population <= 900000 ]"", ""output"": ""Name , Population""}","id: '#1'
operation: Scan Table
output: Name , Population
predicate: Predicate [ Population >= 160000 AND Population <= 900000 ]
table: city
"
7d87dde5ac17ed632e07ab362831b1b48cbfcfa82d40bf5164a4590ca7894143,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Language , Count_Star ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Scan Table [ countrylanguage ] Output [ Language ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Language , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language
    table: countrylanguage
  id: '#2'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#3'
operation: TopSort
output: Language , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
92a0c46b93d249a1e5a2e1086fd87aae4f97324b1cca25ecbdad7407df10a42f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Language , Count_Star ]
  In: Aggregate GroupBy [ Language ] Output [ Language , countstar AS Count_Star ]
    In: Scan Table [ countrylanguage ] Output [ Language ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Language , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Language ]"", ""output"": ""Language , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""Language""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Language
    table: countrylanguage
  id: '#2'
  operation: Aggregate
  output: Language , countstar AS Count_Star
  predicate: GroupBy [ Language ]
id: '#3'
operation: TopSort
output: Language , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
68c96d827202512a504df23f6ab033cb7b1ac9782afc82257aeab24e8c645959,"Aggregate GroupBy [ CountryCode , Language ] Output [ CountryCode, Language, MAX(percentage) AS Max_percentage ]
  In: Scan Table [ countrylanguage ] Output [ CountryCode , Percentage , Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode , Language ]"", ""output"": ""CountryCode, Language, MAX(percentage) AS Max_percentage"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode , Percentage , Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: CountryCode , Percentage , Language
  table: countrylanguage
id: '#2'
operation: Aggregate
output: CountryCode, Language, MAX(percentage) AS Max_percentage
predicate: GroupBy [ CountryCode , Language ]
"
a5a6fef561cf350fc2c0f61225c80048d3e41977999c3e030b470ed1c19485e9,"Aggregate GroupBy [ CountryCode , Language ] Output [ CountryCode, Language, MAX(percentage) AS Max_percentage ]
  In: Scan Table [ countrylanguage ] Output [ CountryCode , Percentage , Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode , Language ]"", ""output"": ""CountryCode, Language, MAX(percentage) AS Max_percentage"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""output"": ""CountryCode , Percentage , Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: CountryCode , Percentage , Language
  table: countrylanguage
id: '#2'
operation: Aggregate
output: CountryCode, Language, MAX(percentage) AS Max_percentage
predicate: GroupBy [ CountryCode , Language ]
"
16efa1d00b88ef4622bb7345796502ef8e42ddb5fdc95f2e66d3ed8ca53f44cf,"Aggregate GroupBy [ CountryCode ] Output [ countstar AS Count_Star , MAX(Percentage) AS Max_Percentage ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'Spanish' ] Output [ Language , Percentage , CountryCode ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""countstar AS Count_Star , MAX(Percentage) AS Max_Percentage"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Spanish' ]"", ""output"": ""Language , Percentage , CountryCode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language , Percentage , CountryCode
  predicate: Predicate [ Language = 'Spanish' ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , MAX(Percentage) AS Max_Percentage
predicate: GroupBy [ CountryCode ]
"
a1fd3e36763de62d67634d2be00cc30e68e90ed8288550458734eb39e0156e48,"Aggregate GroupBy [ CountryCode ] Output [ countstar AS Count_Star , MAX(Percentage) AS Max_Percentage ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'Spanish' ] Output [ Language , Percentage , CountryCode ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""countstar AS Count_Star , MAX(Percentage) AS Max_Percentage"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'Spanish' ]"", ""output"": ""Language , Percentage , CountryCode""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Language , Percentage , CountryCode
  predicate: Predicate [ Language = 'Spanish' ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , MAX(Percentage) AS Max_Percentage
predicate: GroupBy [ CountryCode ]
"
5ff7298e82e25f73402caec694fb894b9528e6e8552ae504972b448f45281a6b,"Aggregate GroupBy [ CountryCode ] Output [ CountryCode , MAX(Percentage) as Max_Percentage ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'spanish' ] Output [ CountryCode , Percentage , Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""CountryCode , MAX(Percentage) as Max_Percentage"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'spanish' ]"", ""output"": ""CountryCode , Percentage , Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: CountryCode , Percentage , Language
  predicate: Predicate [ Language = 'spanish' ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: CountryCode , MAX(Percentage) as Max_Percentage
predicate: GroupBy [ CountryCode ]
"
e0f60ed999370f8735907bbe27e1dc40ae9fe4e929fb31a12cc67e9f84d28816,"Aggregate GroupBy [ CountryCode ] Output [ CountryCode , MAX(Percentage) as Max_Percentage ]
  In: Scan Table [ countrylanguage ] Predicate [ Language = 'spanish' ] Output [ CountryCode , Percentage , Language ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ CountryCode ]"", ""output"": ""CountryCode , MAX(Percentage) as Max_Percentage"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""countrylanguage"", ""predicate"": ""Predicate [ Language = 'spanish' ]"", ""output"": ""CountryCode , Percentage , Language""}]}","children:
- id: '#1'
  operation: Scan Table
  output: CountryCode , Percentage , Language
  predicate: Predicate [ Language = 'spanish' ]
  table: countrylanguage
id: '#2'
operation: Aggregate
output: CountryCode , MAX(Percentage) as Max_Percentage
predicate: GroupBy [ CountryCode ]
"
e3cddc01a42e6e4c8742e8b32c7081491e9ad65503bb886b0e38660e5c8f9e59,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ conductor ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: conductor
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
29ca0628d7688ba66867d6b2b9c69262aed688372b572e9bfb32690f4dfb508c,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ conductor ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: conductor
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
1a9e7cad0a48794e4ee18f147764337a553b0709e9a446f572b6fc855fc872d2,"Sort OrderBy [ Age ASC ] Output [ Name , Age ]
  In: Scan Table [ conductor ] Output [ Name , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age ASC ]"", ""output"": ""Name , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Name , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Age
  table: conductor
id: '#2'
operation: Sort
output: Name , Age
predicate: OrderBy [ Age ASC ]
"
023663de7188fe415732228ff855e71fab5db97f44ddd42d8472b0f437beeb7a,"Sort OrderBy [ Age ASC ] Output [ Name , Age ]
  In: Scan Table [ conductor ] Output [ Name , Age ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Age ASC ]"", ""output"": ""Name , Age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Name , Age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Age
  table: conductor
id: '#2'
operation: Sort
output: Name , Age
predicate: OrderBy [ Age ASC ]
"
e42e09df5ba3b939399271de5fec1b7bcb6fd4f75c9a0ebc3b54f0823831ff38,"Scan Table [ conductor ] Predicate [ Nationality <> 'USA' ] Output [ Name , Nationality ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""predicate"": ""Predicate [ Nationality <> 'USA' ]"", ""output"": ""Name , Nationality""}","id: '#1'
operation: Scan Table
output: Name , Nationality
predicate: Predicate [ Nationality <> 'USA' ]
table: conductor
"
d52b2fe734438314b9c3e2d3f0bd85983be6b638f7cdd57539fce25c52bfaa38,"Scan Table [ conductor ] Predicate [ Nationality <> 'USA' ] Output [ Name , Nationality ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""predicate"": ""Predicate [ Nationality <> 'USA' ]"", ""output"": ""Name , Nationality""}","id: '#1'
operation: Scan Table
output: Name , Nationality
predicate: Predicate [ Nationality <> 'USA' ]
table: conductor
"
6b65ceb9aba024837ed659880317510fa7c5a5b16560bf85c2308d4fb5e398fd,"Sort OrderBy [ Year_of_Founded DESC ] Output [ Record_Company , Year_of_Founded ]
  In: Scan Table [ orchestra ] Output [ Record_Company , Year_of_Founded ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Year_of_Founded DESC ]"", ""output"": ""Record_Company , Year_of_Founded"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Record_Company , Year_of_Founded""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Record_Company , Year_of_Founded
  table: orchestra
id: '#2'
operation: Sort
output: Record_Company , Year_of_Founded
predicate: OrderBy [ Year_of_Founded DESC ]
"
df0d5aca30e690984137713a6b519a67f62563e44b1d3e5c69ca9b4155364f3b,"Sort OrderBy [ Year_of_Founded DESC ] Output [ Record_Company , Year_of_Founded ]
  In: Scan Table [ orchestra ] Output [ Record_Company , Year_of_Founded ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Year_of_Founded DESC ]"", ""output"": ""Record_Company , Year_of_Founded"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Record_Company , Year_of_Founded""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Record_Company , Year_of_Founded
  table: orchestra
id: '#2'
operation: Sort
output: Record_Company , Year_of_Founded
predicate: OrderBy [ Year_of_Founded DESC ]
"
998f04b839afe54f9a8e1ec684ceb8a3ee1a4ad91dda2611a9867a29391d132c,"Aggregate Output [ AVG(Attendance) AS Avg_Attendance ]
  In: Scan Table [ show ] Output [ Attendance ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Attendance) AS Avg_Attendance"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""show"", ""output"": ""Attendance""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Attendance
  table: show
id: '#2'
operation: Aggregate
output: AVG(Attendance) AS Avg_Attendance
"
6bbd055316a1a875b11f3caec173eb5a08b28dcebb6f61a5fb6c67d187d5d415,"Aggregate Output [ AVG(Attendance) AS Avg_Attendance ]
  In: Scan Table [ show ] Output [ Attendance ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(Attendance) AS Avg_Attendance"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""show"", ""output"": ""Attendance""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Attendance
  table: show
id: '#2'
operation: Aggregate
output: AVG(Attendance) AS Avg_Attendance
"
185d457b4daa3628c437828ee9ad39f78143b5f76428b6d1991904e89b9b7ec4,"Aggregate Output [ MAX(Share) AS Max_Share , MIN(Share) AS Min_Share ]
  In: Scan Table [ performance ] Predicate [ Type <> 'Live final' ] Output [ Share , Type ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Share) AS Max_Share , MIN(Share) AS Min_Share"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""performance"", ""predicate"": ""Predicate [ Type <> 'Live final' ]"", ""output"": ""Share , Type""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Share , Type
  predicate: Predicate [ Type <> 'Live final' ]
  table: performance
id: '#2'
operation: Aggregate
output: MAX(Share) AS Max_Share , MIN(Share) AS Min_Share
"
bcc64c0bb22e3f9f4d8fd691b32c0951929c845558050f560d0cb8ec9d35aa9f,"Aggregate Output [ MAX(Share) AS Max_Share , MIN(Share) AS Min_Share ]
  In: Scan Table [ performance ] Predicate [ Type <> 'Live final' ] Output [ Share , Type ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(Share) AS Max_Share , MIN(Share) AS Min_Share"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""performance"", ""predicate"": ""Predicate [ Type <> 'Live final' ]"", ""output"": ""Share , Type""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Share , Type
  predicate: Predicate [ Type <> 'Live final' ]
  table: performance
id: '#2'
operation: Aggregate
output: MAX(Share) AS Max_Share , MIN(Share) AS Min_Share
"
1945cc8311cc7faaa4f993120e9e91e02ec404f2dd194708081e7ac521de00ba,"Aggregate Output [ COUNT(DISTINCT Nationality) AS Count_Dist_Nationality ]
  In: Scan Table [ conductor ] Distinct [ true ] Output [ Nationality ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Nationality) AS Count_Dist_Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Nationality""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Nationality
  predicate: Distinct [ true ]
  table: conductor
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Nationality) AS Count_Dist_Nationality
"
12ced80a38250c5c815da4230bfbddaf6b6310ee3e3c49b50a0747f812fdd80c,"Aggregate Output [ COUNT(DISTINCT Nationality) AS Count_Dist_Nationality ]
  In: Scan Table [ conductor ] Distinct [ true ] Output [ Nationality ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""COUNT(DISTINCT Nationality) AS Count_Dist_Nationality"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""predicate"": ""Distinct [ true ]"", ""output"": ""Nationality""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Nationality
  predicate: Distinct [ true ]
  table: conductor
id: '#2'
operation: Aggregate
output: COUNT(DISTINCT Nationality) AS Count_Dist_Nationality
"
f32f921b7e1bb2c2a6a65e5e2c8979d5327e1a196ff0365c2e9f2547a5766f1b,"Sort OrderBy [ Year_of_Work DESC ] Output [ Name , Year_of_Work ]
  In: Scan Table [ conductor ] Output [ Name , Year_of_Work ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Year_of_Work DESC ]"", ""output"": ""Name , Year_of_Work"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Name , Year_of_Work""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Year_of_Work
  table: conductor
id: '#2'
operation: Sort
output: Name , Year_of_Work
predicate: OrderBy [ Year_of_Work DESC ]
"
e1c968c860459137f04af68da9abc88ba0199c805ad1c700791b8e06de9d9b00,"Sort OrderBy [ Year_of_Work DESC ] Output [ Name , Year_of_Work ]
  In: Scan Table [ conductor ] Output [ Name , Year_of_Work ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Year_of_Work DESC ]"", ""output"": ""Name , Year_of_Work"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Name , Year_of_Work""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Year_of_Work
  table: conductor
id: '#2'
operation: Sort
output: Name , Year_of_Work
predicate: OrderBy [ Year_of_Work DESC ]
"
6aa937ac96aa0f82051b2f20f694460c36d303d0182fbfdc794547f31f98e84d,"TopSort Rows [ 1 ] OrderBy [ Year_of_Work DESC ] Output [ Name , Year_of_Work ]
  In: Scan Table [ conductor ] Output [ Name , Year_of_Work ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Year_of_Work DESC ]"", ""output"": ""Name , Year_of_Work"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Name , Year_of_Work""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Year_of_Work
  table: conductor
id: '#2'
operation: TopSort
output: Name , Year_of_Work
predicate: Rows [ 1 ] OrderBy [ Year_of_Work DESC ]
"
7b60704a707282ff6d06ee3878ad4f01c67cc82227ec275359829b2c1cba6515,"TopSort Rows [ 1 ] OrderBy [ Year_of_Work DESC ] Output [ Name , Year_of_Work ]
  In: Scan Table [ conductor ] Output [ Name , Year_of_Work ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Year_of_Work DESC ]"", ""output"": ""Name , Year_of_Work"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Name , Year_of_Work""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Year_of_Work
  table: conductor
id: '#2'
operation: TopSort
output: Name , Year_of_Work
predicate: Rows [ 1 ] OrderBy [ Year_of_Work DESC ]
"
47842e1ee406532450416aa3a3b74cc576643fbc9dfe9d4bffca7d9d676ecccf,"Join Predicate [ B.Conductor_ID = T.Conductor_ID ] Output [ B.Name , T.Orchestra ]
  In: Scan Table [ orchestra ] Output [ Conductor_ID , Orchestra ]
  In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Conductor_ID = #2.Conductor_ID ]"", ""output"": ""#1.Name , #2.Orchestra"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Conductor_ID , Orchestra""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Conductor_ID , Name
  table: conductor
- id: '#2'
  operation: Scan Table
  output: Conductor_ID , Orchestra
  table: orchestra
id: '#3'
operation: Join
output: '#1.Name , #2.Orchestra'
predicate: 'Predicate [ #1.Conductor_ID = #2.Conductor_ID ]'
"
ff3b230011a43e158f188c66978cc47d9dafc64bc34fcc368317639768ba0419,"Join Predicate [ B.Conductor_ID = T.Conductor_ID ] Output [ B.Name , T.Orchestra ]
  In: Scan Table [ orchestra ] Output [ Conductor_ID , Orchestra ]
  In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Conductor_ID = #2.Conductor_ID ]"", ""output"": ""#1.Name , #2.Orchestra"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Conductor_ID , Orchestra""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Conductor_ID , Name
  table: conductor
- id: '#2'
  operation: Scan Table
  output: Conductor_ID , Orchestra
  table: orchestra
id: '#3'
operation: Join
output: '#1.Name , #2.Orchestra'
predicate: 'Predicate [ #1.Conductor_ID = #2.Conductor_ID ]'
"
bd62d7dedb5bfdf4408dfe5cc9e377d5b62d7a60f33ed0609c915537c6964341,"Filter Predicate [ Count_Star > 1 ] Output [ Name ]
  In: Aggregate GroupBy [ Name, Conductor_ID ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ T.Conductor_ID = B.Conductor_ID ] Output [ B.Name , B.Conductor_ID ]
      In: Scan Table [ orchestra ] Output [ Conductor_ID ]
      In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name, Conductor_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Conductor_ID = #1.Conductor_ID ]"", ""output"": ""#1.Name , #1.Conductor_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Conductor_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Conductor_ID , Name
      table: conductor
    - id: '#2'
      operation: Scan Table
      output: Conductor_ID
      table: orchestra
    id: '#3'
    operation: Join
    output: '#1.Name , #1.Conductor_ID'
    predicate: 'Predicate [ #2.Conductor_ID = #1.Conductor_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name, Conductor_ID ]
id: '#5'
operation: Filter
output: Name
predicate: Predicate [ Count_Star > 1 ]
"
23198886c398bd787db193781c1338ba26d87ad2e4f9b63d02819e9fd757ecbc,"Filter Predicate [ Count_Star > 1 ] Output [ Name ]
  In: Aggregate GroupBy [ Name, Conductor_ID ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ T.Conductor_ID = B.Conductor_ID ] Output [ B.Name , B.Conductor_ID ]
      In: Scan Table [ orchestra ] Output [ Conductor_ID ]
      In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name, Conductor_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Conductor_ID = #1.Conductor_ID ]"", ""output"": ""#1.Name , #1.Conductor_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Conductor_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Conductor_ID , Name
      table: conductor
    - id: '#2'
      operation: Scan Table
      output: Conductor_ID
      table: orchestra
    id: '#3'
    operation: Join
    output: '#1.Name , #1.Conductor_ID'
    predicate: 'Predicate [ #2.Conductor_ID = #1.Conductor_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name, Conductor_ID ]
id: '#5'
operation: Filter
output: Name
predicate: Predicate [ Count_Star > 1 ]
"
3b3a4ebe0ad418bead19cc531246d103d023da54e666715365d14d3219b84639,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Name ]
  In: Aggregate GroupBy [ Name, Conductor_ID ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ T.Conductor_ID = B.Conductor_ID ] Output [ B.Name , B.Conductor_ID ]
      In: Scan Table [ orchestra ] Output [ Conductor_ID ]
      In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name, Conductor_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Conductor_ID = #1.Conductor_ID ]"", ""output"": ""#1.Name , #1.Conductor_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Conductor_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Conductor_ID , Name
      table: conductor
    - id: '#2'
      operation: Scan Table
      output: Conductor_ID
      table: orchestra
    id: '#3'
    operation: Join
    output: '#1.Name , #1.Conductor_ID'
    predicate: 'Predicate [ #2.Conductor_ID = #1.Conductor_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name, Conductor_ID ]
id: '#5'
operation: TopSort
output: Count_Star , Name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
029a30407cbfd44db13238d8122ed6af9d93a9a0eb4dfa9fafbdd7c07c9e6d91,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Name ]
  In: Aggregate GroupBy [ Name, Conductor_ID ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ T.Conductor_ID = B.Conductor_ID ] Output [ B.Name , B.Conductor_ID ]
      In: Scan Table [ orchestra ] Output [ Conductor_ID ]
      In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name, Conductor_ID ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Conductor_ID = #1.Conductor_ID ]"", ""output"": ""#1.Name , #1.Conductor_ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Conductor_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Conductor_ID , Name
      table: conductor
    - id: '#2'
      operation: Scan Table
      output: Conductor_ID
      table: orchestra
    id: '#3'
    operation: Join
    output: '#1.Name , #1.Conductor_ID'
    predicate: 'Predicate [ #2.Conductor_ID = #1.Conductor_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name, Conductor_ID ]
id: '#5'
operation: TopSort
output: Count_Star , Name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
f6382cc791510b0b5267aa6fe2219f8af8fa14534798187ff413f54375b1333f,"Join Predicate [ B.Conductor_ID = T.Conductor_ID ] Output [ T.Name ]
  In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]
  In: Scan Table [ orchestra ] Predicate [ Year_of_Founded > 2008.0 ] Output [ Conductor_ID , Year_of_Founded ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Conductor_ID = #2.Conductor_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Year_of_Founded > 2008.0 ]"", ""output"": ""Conductor_ID , Year_of_Founded""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Conductor_ID , Year_of_Founded
  predicate: Predicate [ Year_of_Founded > 2008.0 ]
  table: orchestra
- id: '#2'
  operation: Scan Table
  output: Conductor_ID , Name
  table: conductor
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.Conductor_ID = #2.Conductor_ID ]'
"
eb81b335df82730a2915851df1bd7d6ce9dd0e5aab61ca14535b1f22398ebb9f,"Join Predicate [ B.Conductor_ID = T.Conductor_ID ] Output [ T.Name ]
  In: Scan Table [ conductor ] Output [ Conductor_ID , Name ]
  In: Scan Table [ orchestra ] Predicate [ Year_of_Founded > 2008.0 ] Output [ Conductor_ID , Year_of_Founded ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Conductor_ID = #2.Conductor_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Year_of_Founded > 2008.0 ]"", ""output"": ""Conductor_ID , Year_of_Founded""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""conductor"", ""output"": ""Conductor_ID , Name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Conductor_ID , Year_of_Founded
  predicate: Predicate [ Year_of_Founded > 2008.0 ]
  table: orchestra
- id: '#2'
  operation: Scan Table
  output: Conductor_ID , Name
  table: conductor
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.Conductor_ID = #2.Conductor_ID ]'
"
2b498fdf0e61dd8e384e559787a60d74066bf3945e4a574b958a7e65d8676f8b,"Aggregate GroupBy [ Record_Company ] Output [ Record_Company , countstar AS Count_Star ]
  In: Scan Table [ orchestra ] Output [ Record_Company ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Record_Company ]"", ""output"": ""Record_Company , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Record_Company""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Record_Company
  table: orchestra
id: '#2'
operation: Aggregate
output: Record_Company , countstar AS Count_Star
predicate: GroupBy [ Record_Company ]
"
a580c27e04c6eaff182b09c757eac7709d4949a57857163ecf6f41adeb7e5063,"Aggregate GroupBy [ Record_Company ] Output [ Record_Company , countstar AS Count_Star ]
  In: Scan Table [ orchestra ] Output [ Record_Company ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Record_Company ]"", ""output"": ""Record_Company , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Record_Company""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Record_Company
  table: orchestra
id: '#2'
operation: Aggregate
output: Record_Company , countstar AS Count_Star
predicate: GroupBy [ Record_Company ]
"
8f5134a55bcc35aa15116970a07f380e26620ed0e44157fb4a7a5afdeea9b368,"Sort OrderBy [ Count_Star ASC ] Output [ Major_Record_Format , Count_Star ]
  In: Aggregate GroupBy [ Major_Record_Format ] Output [ Major_Record_Format , countstar AS Count_Star ]
    In: Scan Table [ orchestra ] Output [ Major_Record_Format ]","{""id"": ""#3"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Count_Star ASC ]"", ""output"": ""Major_Record_Format , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Major_Record_Format ]"", ""output"": ""Major_Record_Format , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Major_Record_Format""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Major_Record_Format
    table: orchestra
  id: '#2'
  operation: Aggregate
  output: Major_Record_Format , countstar AS Count_Star
  predicate: GroupBy [ Major_Record_Format ]
id: '#3'
operation: Sort
output: Major_Record_Format , Count_Star
predicate: OrderBy [ Count_Star ASC ]
"
7569cefc19424ebb6ee479425b4d76d5f2227a77640326c89b0d7ecc30cb1451,"Sort OrderBy [ Count_Star ASC ] Output [ Major_Record_Format , Count_Star ]
  In: Aggregate GroupBy [ Major_Record_Format ] Output [ Major_Record_Format , countstar AS Count_Star ]
    In: Scan Table [ orchestra ] Output [ Major_Record_Format ]","{""id"": ""#3"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Count_Star ASC ]"", ""output"": ""Major_Record_Format , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Major_Record_Format ]"", ""output"": ""Major_Record_Format , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Major_Record_Format""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Major_Record_Format
    table: orchestra
  id: '#2'
  operation: Aggregate
  output: Major_Record_Format , countstar AS Count_Star
  predicate: GroupBy [ Major_Record_Format ]
id: '#3'
operation: Sort
output: Major_Record_Format , Count_Star
predicate: OrderBy [ Count_Star ASC ]
"
f1cf3d5bc498895a312f9d97a3c23ed602f4cb8b41f09d88666d37f56f9a4c4b,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Record_Company , Count_Star ]
  In: Aggregate GroupBy [ Record_Company ] Output [ Record_Company , countstar AS Count_Star ]
    In: Scan Table [ orchestra ] Output [ Record_Company ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Record_Company , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Record_Company ]"", ""output"": ""Record_Company , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Record_Company""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Record_Company
    table: orchestra
  id: '#2'
  operation: Aggregate
  output: Record_Company , countstar AS Count_Star
  predicate: GroupBy [ Record_Company ]
id: '#3'
operation: TopSort
output: Record_Company , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
ca57dfe053d7730d47f8a7dec696ff0bffb0c4a5ae2eddc518636c0a9cc93899,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Record_Company , Count_Star ]
  In: Aggregate GroupBy [ Record_Company ] Output [ Record_Company , countstar AS Count_Star ]
    In: Scan Table [ orchestra ] Output [ Record_Company ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Record_Company , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Record_Company ]"", ""output"": ""Record_Company , countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Record_Company""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Record_Company
    table: orchestra
  id: '#2'
  operation: Aggregate
  output: Record_Company , countstar AS Count_Star
  predicate: GroupBy [ Record_Company ]
id: '#3'
operation: TopSort
output: Record_Company , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
a5b58ec921e463893a58faab86400b125f114b5c0469aa70c41f39267cc6731e,"Except Predicate [ T.Orchestra_ID IS NULL OR B.Orchestra_ID = T.Orchestra_ID ] Output [ B.Orchestra ]
  In: Scan Table [ performance ] Output [ Orchestra_ID ]
  In: Scan Table [ orchestra ] Output [ Orchestra_ID , Orchestra ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Orchestra_ID IS NULL OR #1.Orchestra_ID = #2.Orchestra_ID ]"", ""output"": ""#1.Orchestra"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Orchestra_ID , Orchestra""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""performance"", ""output"": ""Orchestra_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Orchestra_ID , Orchestra
  table: orchestra
- id: '#2'
  operation: Scan Table
  output: Orchestra_ID
  table: performance
id: '#3'
operation: Except
output: '#1.Orchestra'
predicate: 'Predicate [ #2.Orchestra_ID IS NULL OR #1.Orchestra_ID = #2.Orchestra_ID
  ]'
"
d7ae9ecca2a02d1ea9bab41b4eb1fb9f4020c46bb3c6f7cf3723d9032eb7b454,"Except Predicate [ T.Orchestra_ID IS NULL OR B.Orchestra_ID = T.Orchestra_ID ] Output [ B.Orchestra ]
  In: Scan Table [ performance ] Output [ Orchestra_ID ]
  In: Scan Table [ orchestra ] Output [ Orchestra_ID , Orchestra ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Orchestra_ID IS NULL OR #1.Orchestra_ID = #2.Orchestra_ID ]"", ""output"": ""#1.Orchestra"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Orchestra_ID , Orchestra""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""performance"", ""output"": ""Orchestra_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Orchestra_ID , Orchestra
  table: orchestra
- id: '#2'
  operation: Scan Table
  output: Orchestra_ID
  table: performance
id: '#3'
operation: Except
output: '#1.Orchestra'
predicate: 'Predicate [ #2.Orchestra_ID IS NULL OR #1.Orchestra_ID = #2.Orchestra_ID
  ]'
"
ee422562896a77aa11e6c9ce20da92a2899b4cc499fba146b5cdd42528824b2b,"Intersect Predicate [ B.Record_Company = T.Record_Company ] Output [ B.Record_Company ]
  In: Scan Table [ orchestra ] Predicate [ Year_of_Founded > 2003.0 ] Output [ Record_Company , Year_of_Founded ]
  In: Scan Table [ orchestra ] Predicate [ Year_of_Founded < 2003.0 ] Distinct [ true ] Output [ Record_Company , Year_of_Founded ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Record_Company = #2.Record_Company ]"", ""output"": ""#1.Record_Company"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Year_of_Founded < 2003.0 ] Distinct [ true ]"", ""output"": ""Record_Company , Year_of_Founded""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Year_of_Founded > 2003.0 ]"", ""output"": ""Record_Company , Year_of_Founded""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Record_Company , Year_of_Founded
  predicate: Predicate [ Year_of_Founded < 2003.0 ] Distinct [ true ]
  table: orchestra
- id: '#2'
  operation: Scan Table
  output: Record_Company , Year_of_Founded
  predicate: Predicate [ Year_of_Founded > 2003.0 ]
  table: orchestra
id: '#3'
operation: Intersect
output: '#1.Record_Company'
predicate: 'Predicate [ #1.Record_Company = #2.Record_Company ]'
"
8459b8d82356291d3db2f69ff1945ee3befbb954a1417532e973e93e6b13ad59,"Intersect Predicate [ B.Record_Company = T.Record_Company ] Output [ B.Record_Company ]
  In: Scan Table [ orchestra ] Predicate [ Year_of_Founded > 2003.0 ] Output [ Record_Company , Year_of_Founded ]
  In: Scan Table [ orchestra ] Predicate [ Year_of_Founded < 2003.0 ] Distinct [ true ] Output [ Record_Company , Year_of_Founded ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Record_Company = #2.Record_Company ]"", ""output"": ""#1.Record_Company"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Year_of_Founded < 2003.0 ] Distinct [ true ]"", ""output"": ""Record_Company , Year_of_Founded""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Year_of_Founded > 2003.0 ]"", ""output"": ""Record_Company , Year_of_Founded""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Record_Company , Year_of_Founded
  predicate: Predicate [ Year_of_Founded < 2003.0 ] Distinct [ true ]
  table: orchestra
- id: '#2'
  operation: Scan Table
  output: Record_Company , Year_of_Founded
  predicate: Predicate [ Year_of_Founded > 2003.0 ]
  table: orchestra
id: '#3'
operation: Intersect
output: '#1.Record_Company'
predicate: 'Predicate [ #1.Record_Company = #2.Record_Company ]'
"
d23e45e01461740b309c05a03a6520364714fb42bf3fee6b1e3eac7a4799d8ce,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ orchestra ] Predicate [ Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD' ] Output [ Major_Record_Format ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD' ]"", ""output"": ""Major_Record_Format""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Major_Record_Format
  predicate: Predicate [ Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
    ]
  table: orchestra
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
7d60a9326e8a1da50b5701c2e6673c4f854992058ca200c3a5559c18d5021645,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ orchestra ] Predicate [ Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD' ] Output [ Major_Record_Format ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""predicate"": ""Predicate [ Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD' ]"", ""output"": ""Major_Record_Format""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Major_Record_Format
  predicate: Predicate [ Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'
    ]
  table: orchestra
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
59326357caa3607e771939182ff7aba6e9ba310af53c484ee2df9ae783da60ac,"Filter Predicate [ Count_Star > 1 ] Output [ Year_of_Founded ]
  In: Aggregate GroupBy [ Year_of_Founded, Orchestra_ID ] Output [ Year_of_Founded , countstar AS Count_Star ]
    In: Join Predicate [ T.Orchestra_ID = B.Orchestra_ID ] Output [ B.Orchestra_ID , B.Year_of_Founded ]
      In: Scan Table [ performance ] Output [ Orchestra_ID ]
      In: Scan Table [ orchestra ] Output [ Year_of_Founded , Orchestra_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Year_of_Founded"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Year_of_Founded, Orchestra_ID ]"", ""output"": ""Year_of_Founded , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Orchestra_ID = #1.Orchestra_ID ]"", ""output"": ""#1.Orchestra_ID , #1.Year_of_Founded"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Year_of_Founded , Orchestra_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""performance"", ""output"": ""Orchestra_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Year_of_Founded , Orchestra_ID
      table: orchestra
    - id: '#2'
      operation: Scan Table
      output: Orchestra_ID
      table: performance
    id: '#3'
    operation: Join
    output: '#1.Orchestra_ID , #1.Year_of_Founded'
    predicate: 'Predicate [ #2.Orchestra_ID = #1.Orchestra_ID ]'
  id: '#4'
  operation: Aggregate
  output: Year_of_Founded , countstar AS Count_Star
  predicate: GroupBy [ Year_of_Founded, Orchestra_ID ]
id: '#5'
operation: Filter
output: Year_of_Founded
predicate: Predicate [ Count_Star > 1 ]
"
481adaa806fc03fa0926f62a1fe0fe0d32e3d298f98873d4b71f0ff3030c88c8,"Filter Predicate [ Count_Star > 1 ] Output [ Year_of_Founded ]
  In: Aggregate GroupBy [ Year_of_Founded, Orchestra_ID ] Output [ Year_of_Founded , countstar AS Count_Star ]
    In: Join Predicate [ T.Orchestra_ID = B.Orchestra_ID ] Output [ B.Orchestra_ID , B.Year_of_Founded ]
      In: Scan Table [ performance ] Output [ Orchestra_ID ]
      In: Scan Table [ orchestra ] Output [ Year_of_Founded , Orchestra_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Year_of_Founded"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Year_of_Founded, Orchestra_ID ]"", ""output"": ""Year_of_Founded , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.Orchestra_ID = #1.Orchestra_ID ]"", ""output"": ""#1.Orchestra_ID , #1.Year_of_Founded"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""orchestra"", ""output"": ""Year_of_Founded , Orchestra_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""performance"", ""output"": ""Orchestra_ID""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Year_of_Founded , Orchestra_ID
      table: orchestra
    - id: '#2'
      operation: Scan Table
      output: Orchestra_ID
      table: performance
    id: '#3'
    operation: Join
    output: '#1.Orchestra_ID , #1.Year_of_Founded'
    predicate: 'Predicate [ #2.Orchestra_ID = #1.Orchestra_ID ]'
  id: '#4'
  operation: Aggregate
  output: Year_of_Founded , countstar AS Count_Star
  predicate: GroupBy [ Year_of_Founded, Orchestra_ID ]
id: '#5'
operation: Filter
output: Year_of_Founded
predicate: Predicate [ Count_Star > 1 ]
"
a207ddf9057f47af297b04e7f41856ac20a50fd2ed34907fb81ce862098d865b,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Highschooler ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Highschooler
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
50c5d19b474f0dd61efdf6f2d8172cfb693e85bb6d2ee13d375870cddfb4fbac,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Highschooler ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Highschooler
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
ac7fe855633f31421a9bd706d23dfb20d80b0b538b0dc8520b1ebb91bc942e58,"Scan Table [ Highschooler ] Output [ grade , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade , name""}","id: '#1'
operation: Scan Table
output: grade , name
table: Highschooler
"
236dcef9e2b84f096ed08b1920b85a8df68af104b942aa599e0635cdb1e04178,"Scan Table [ Highschooler ] Output [ grade , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade , name""}","id: '#1'
operation: Scan Table
output: grade , name
table: Highschooler
"
e26742908088fa6b5a4a123e0c3d581e1de7fab7b51949cba4c73da7766784f9,Scan Table [ Highschooler ] Output [ grade ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}","id: '#1'
operation: Scan Table
output: grade
table: Highschooler
"
a78bd98cec62dcd2412bb4c46df0a833d83f005bae19b95ec2402f74142e86b9,Scan Table [ Highschooler ] Output [ grade ],"{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}","id: '#1'
operation: Scan Table
output: grade
table: Highschooler
"
6df74d6511b3ad4d9033a1211957b3e5a2d11dba71e49fa907fd46472495da9e,"Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ grade , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""grade , name""}","id: '#1'
operation: Scan Table
output: grade , name
predicate: Predicate [ name = 'Kyle' ]
table: Highschooler
"
83bd88f309e485989759ac4a128180397925d2a7c8d9281b6ea2185f18b060b7,"Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ grade , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""grade , name""}","id: '#1'
operation: Scan Table
output: grade , name
predicate: Predicate [ name = 'Kyle' ]
table: Highschooler
"
8a7eabc2f2afb4a40166c43715cce40cf1f8c574ace9542f0fc2f58fe4eb1b29,"Scan Table [ Highschooler ] Predicate [ grade = 10 ] Output [ grade , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ grade = 10 ]"", ""output"": ""grade , name""}","id: '#1'
operation: Scan Table
output: grade , name
predicate: Predicate [ grade = 10 ]
table: Highschooler
"
7094eb8f4f43e802578dfb2597cdb2cf41222e5ebbf4ff0686bba8aa79a0b702,"Scan Table [ Highschooler ] Predicate [ grade = 10 ] Output [ grade , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ grade = 10 ]"", ""output"": ""grade , name""}","id: '#1'
operation: Scan Table
output: grade , name
predicate: Predicate [ grade = 10 ]
table: Highschooler
"
0139e20814b0aee45d3111cbedd1d8d1b6453db970e4bf1a7b8b7202091a6f35,"Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}","id: '#1'
operation: Scan Table
output: ID , name
predicate: Predicate [ name = 'Kyle' ]
table: Highschooler
"
5cf1353ac1891a373d83fb718050a23c6c0ec5d44a08d41958a4d89149fef383,"Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}","id: '#1'
operation: Scan Table
output: ID , name
predicate: Predicate [ name = 'Kyle' ]
table: Highschooler
"
3305381ed75e65f12ec11aaaaf8facba1833f5626c1485c860de2fda47f7085d,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Highschooler ] Predicate [ grade = 9 OR grade = 10 ] Output [ grade ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ grade = 9 OR grade = 10 ]"", ""output"": ""grade""}]}","children:
- id: '#1'
  operation: Scan Table
  output: grade
  predicate: Predicate [ grade = 9 OR grade = 10 ]
  table: Highschooler
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
bd1edcbd11ce93f7ca5db25e0f6a2121942bb60f441d1551ad5bfaedcaa0bad0,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Highschooler ] Predicate [ grade = 9 OR grade = 10 ] Output [ grade ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ grade = 9 OR grade = 10 ]"", ""output"": ""grade""}]}","children:
- id: '#1'
  operation: Scan Table
  output: grade
  predicate: Predicate [ grade = 9 OR grade = 10 ]
  table: Highschooler
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2fd1f2fb8e00ca6198f226e0484c696991787954ae2f6ca11ca96be1973dd548,"Aggregate GroupBy [ grade ] Output [ countstar AS Count_Star , grade ]
  In: Scan Table [ Highschooler ] Output [ grade ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ grade ]"", ""output"": ""countstar AS Count_Star , grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}]}","children:
- id: '#1'
  operation: Scan Table
  output: grade
  table: Highschooler
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , grade
predicate: GroupBy [ grade ]
"
22ee91deb377e46643d31c252f10263c8b22928407d5e83e3dfea73e93a2912f,"Aggregate GroupBy [ grade ] Output [ countstar AS Count_Star , grade ]
  In: Scan Table [ Highschooler ] Output [ grade ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ grade ]"", ""output"": ""countstar AS Count_Star , grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}]}","children:
- id: '#1'
  operation: Scan Table
  output: grade
  table: Highschooler
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , grade
predicate: GroupBy [ grade ]
"
442a4d8280938cee442476698a6d9ec2f0f13c4983f75bd715496be8f10bb3ef,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ grade , Count_Star ]
  In: Aggregate GroupBy [ grade ] Output [ countstar AS Count_Star , grade ]
    In: Scan Table [ Highschooler ] Output [ grade ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""grade , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ grade ]"", ""output"": ""countstar AS Count_Star , grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: grade
    table: Highschooler
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , grade
  predicate: GroupBy [ grade ]
id: '#3'
operation: TopSort
output: grade , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
7e3bd780ec04ba80fb47a192efc6c0fff9a6a083d07990a499435bf06c681be3,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ grade , Count_Star ]
  In: Aggregate GroupBy [ grade ] Output [ countstar AS Count_Star , grade ]
    In: Scan Table [ Highschooler ] Output [ grade ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""grade , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ grade ]"", ""output"": ""countstar AS Count_Star , grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: grade
    table: Highschooler
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , grade
  predicate: GroupBy [ grade ]
id: '#3'
operation: TopSort
output: grade , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
23c4fe45297b48d8ee466d2d1d6ec177bcea9379322d3dc4925ed1db0e1ecdd1,"Filter Predicate [ Count_Star >= 4 ] Output [ grade ]
  In: Aggregate GroupBy [ grade ] Output [ countstar AS Count_Star , grade ]
    In: Scan Table [ Highschooler ] Output [ grade ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 4 ]"", ""output"": ""grade"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ grade ]"", ""output"": ""countstar AS Count_Star , grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: grade
    table: Highschooler
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , grade
  predicate: GroupBy [ grade ]
id: '#3'
operation: Filter
output: grade
predicate: Predicate [ Count_Star >= 4 ]
"
525bacec227d0a51200bf17117551ede5163d4d834a2d0362f0855cbea4248ee,"Filter Predicate [ Count_Star >= 4 ] Output [ grade ]
  In: Aggregate GroupBy [ grade ] Output [ countstar AS Count_Star , grade ]
    In: Scan Table [ Highschooler ] Output [ grade ]","{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 4 ]"", ""output"": ""grade"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ grade ]"", ""output"": ""countstar AS Count_Star , grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: grade
    table: Highschooler
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , grade
  predicate: GroupBy [ grade ]
id: '#3'
operation: Filter
output: grade
predicate: Predicate [ Count_Star >= 4 ]
"
75f66dc81cbf3a3f27d33d5d675fd43a1794de57f3234cbc274fa97f50765b86,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
  In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: student_id
  table: Friend
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , student_id
predicate: GroupBy [ student_id ]
"
62e0e49372c6619ec2e9e395882058f8052df231fccbd47054d60d4d0cece143,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
  In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: student_id
  table: Friend
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , student_id
predicate: GroupBy [ student_id ]
"
507830019925b62844542338e9b6778272fc8cc3a8c55222862e45e5cc10eec6,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ T.student_id , B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#2.student_id , #1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star , name
predicate: GroupBy [ student_id ]
"
7b30574d1ca66d7665e969229dd704a800f08994530b06fe62e3eb4fb57a6ab5,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ T.student_id , B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#2.student_id , #1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star , name
predicate: GroupBy [ student_id ]
"
9ac26cfb14e02c1544639c9d16255b9fe612fbbfbf90f627a8c841571f1565b1,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , name ]
  In: Join Predicate [ B.student_id = T.ID ] Output [ B.Count_Star , T.name ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
    In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
      In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.ID ]"", ""output"": ""#2.Count_Star , #3.name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.name'
  predicate: 'Predicate [ #2.student_id = #3.ID ]'
id: '#5'
operation: TopSort
output: Count_Star , name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
72a560902ad1a26b3705b36166d2d4bb791b70869b75743abfae8ace99e81301,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , name ]
  In: Join Predicate [ B.student_id = T.ID ] Output [ B.Count_Star , T.name ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
    In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
      In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.ID ]"", ""output"": ""#2.Count_Star , #3.name"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  id: '#4'
  operation: Join
  output: '#2.Count_Star , #3.name'
  predicate: 'Predicate [ #2.student_id = #3.ID ]'
id: '#5'
operation: TopSort
output: Count_Star , name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
263ffac75ab9c422dd579995c62f4fdbd85d5041d6cdb5c017af4d1158c376a7,"Filter Predicate [ Count_Star >= 3 ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ B.ID = T.student_id ] Output [ T.student_id , B.name ]
      In: Scan Table [ Friend ] Output [ student_id ]
      In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 3 ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: ID , name
      table: Highschooler
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#3'
    operation: Join
    output: '#2.student_id , #1.name'
    predicate: 'Predicate [ #1.ID = #2.student_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: Filter
output: name
predicate: Predicate [ Count_Star >= 3 ]
"
07a63f1a5bc074a87b3ef04fa8dda9f595a429c36cc22af4b69b862e7c6ec7bf,"Filter Predicate [ Count_Star >= 3 ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ B.ID = T.student_id ] Output [ T.student_id , B.name ]
      In: Scan Table [ Friend ] Output [ student_id ]
      In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 3 ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: ID , name
      table: Highschooler
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#3'
    operation: Join
    output: '#2.student_id , #1.name'
    predicate: 'Predicate [ #1.ID = #2.student_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: Filter
output: name
predicate: Predicate [ Count_Star >= 3 ]
"
76315f6ac3350f7af835b9f7f6a46ec89579cd792877b93f61a84ee2ad621932,"Join Predicate [ B.friend_id = T.ID ] Output [ T.name ]
  In: Scan Table [ Highschooler ] Output [ ID , name ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ T.friend_id ]
    In: Scan Table [ Friend ] Output [ friend_id , student_id ]
    In: Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.friend_id = #4.ID ]"", ""output"": ""#4.name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.friend_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""friend_id , student_id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    predicate: Predicate [ name = 'Kyle' ]
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: friend_id , student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#2.friend_id'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
- id: '#4'
  operation: Scan Table
  output: ID , name
  table: Highschooler
id: '#5'
operation: Join
output: '#4.name'
predicate: 'Predicate [ #3.friend_id = #4.ID ]'
"
d8eacdf8a3d6a1f89099265b0457ac988f631378f30f90fd38ada84b418b65c0,"Join Predicate [ B.friend_id = T.ID ] Output [ T.name ]
  In: Scan Table [ Highschooler ] Output [ ID , name ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ T.friend_id ]
    In: Scan Table [ Friend ] Output [ friend_id , student_id ]
    In: Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.friend_id = #4.ID ]"", ""output"": ""#4.name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.friend_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""friend_id , student_id""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    predicate: Predicate [ name = 'Kyle' ]
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: friend_id , student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#2.friend_id'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
- id: '#4'
  operation: Scan Table
  output: ID , name
  table: Highschooler
id: '#5'
operation: Join
output: '#4.name'
predicate: 'Predicate [ #3.friend_id = #4.ID ]'
"
b7b03db85ab48e278ad66f39305dfa4aa1bf37d7b21f77b565e7d380007d2127,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ B.ID , B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#1.ID , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    predicate: Predicate [ name = 'Kyle' ]
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#1.ID , #1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
aaea944f7fbfe65c0aa2473b9e9ade93b8f024fc0c932efc0b05d3c9fe2cd13f,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ B.ID , B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#1.ID , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    predicate: Predicate [ name = 'Kyle' ]
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#1.ID , #1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
2a1d61f34fe5ad0f7a58c53d75caa500a2803b2c6147c10377c44408591e4e43,"Except Predicate [ T.student_id = B.ID ] Output [ B.ID ]
  In: Aggregate GroupBy [ student_id ] Output [ student_id ]
    In: Scan Table [ Friend ] Output [ student_id ]
  In: Scan Table [ Highschooler ] Output [ ID ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.student_id = #1.ID ]"", ""output"": ""#1.ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: ID
  table: Highschooler
- children:
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Aggregate
  output: student_id
  predicate: GroupBy [ student_id ]
id: '#4'
operation: Except
output: '#1.ID'
predicate: 'Predicate [ #3.student_id = #1.ID ]'
"
329f0c5f35657ebf6607ade381231dcb736e68b0a28915213b0fd689088299d5,"Except Predicate [ T.student_id = B.ID ] Output [ B.ID ]
  In: Aggregate GroupBy [ student_id ] Output [ student_id ]
    In: Scan Table [ Friend ] Output [ student_id ]
  In: Scan Table [ Highschooler ] Output [ ID ]","{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.student_id = #1.ID ]"", ""output"": ""#1.ID"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: ID
  table: Highschooler
- children:
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Aggregate
  output: student_id
  predicate: GroupBy [ student_id ]
id: '#4'
operation: Except
output: '#1.ID'
predicate: 'Predicate [ #3.student_id = #1.ID ]'
"
bd4233682bf105762e3a9cb82f6a771c3ebd7fdecb6567ca4cce013ad6c9bbdf,"Except Predicate [ B.name = T.name ] Output [ B.name ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
  In: Scan Table [ Highschooler ] Distinct [ true ] Output [ name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.name = #4.name ]"", ""output"": ""#1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Distinct [ true ]"", ""output"": ""name""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.ID = #3.student_id ]"", ""output"": ""#2.name"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: name
  predicate: Distinct [ true ]
  table: Highschooler
- children:
  - id: '#2'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  - id: '#3'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#4'
  operation: Join
  output: '#2.name'
  predicate: 'Predicate [ #2.ID = #3.student_id ]'
id: '#5'
operation: Except
output: '#1.name'
predicate: 'Predicate [ #1.name = #4.name ]'
"
33d486052fda33a467d56045245ac5652e2c7e0abde302e86bd834c64c63b41b,"Except Predicate [ B.name = T.name ] Output [ B.name ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
  In: Scan Table [ Highschooler ] Distinct [ true ] Output [ name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.name = #4.name ]"", ""output"": ""#1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Distinct [ true ]"", ""output"": ""name""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.ID = #3.student_id ]"", ""output"": ""#2.name"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: name
  predicate: Distinct [ true ]
  table: Highschooler
- children:
  - id: '#2'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  - id: '#3'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#4'
  operation: Join
  output: '#2.name'
  predicate: 'Predicate [ #2.ID = #3.student_id ]'
id: '#5'
operation: Except
output: '#1.name'
predicate: 'Predicate [ #1.name = #4.name ]'
"
76ef862e3c511c50ec1ff363f7b90eadbad4ccac85a6b9d3d4cf4b027b49a5d1,"Intersect Predicate [ T.liked_id = B.student_id ] Output [ B.student_id ]
  In: Scan Table [ Likes ] Output [ liked_id ]
  In: Aggregate GroupBy [ student_id ] Output [ student_id ]
    In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#4"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.liked_id = #2.student_id ]"", ""output"": ""#2.student_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""liked_id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#2'
  operation: Aggregate
  output: student_id
  predicate: GroupBy [ student_id ]
- id: '#3'
  operation: Scan Table
  output: liked_id
  table: Likes
id: '#4'
operation: Intersect
output: '#2.student_id'
predicate: 'Predicate [ #3.liked_id = #2.student_id ]'
"
0b31c5a9abc4e7a1d92494ccca165c2c92d1134087b6c066d1b3ce747a13c3f7,"Intersect Predicate [ T.liked_id = B.student_id ] Output [ B.student_id ]
  In: Scan Table [ Likes ] Output [ liked_id ]
  In: Aggregate GroupBy [ student_id ] Output [ student_id ]
    In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#4"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.liked_id = #2.student_id ]"", ""output"": ""#2.student_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""liked_id""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#2'
  operation: Aggregate
  output: student_id
  predicate: GroupBy [ student_id ]
- id: '#3'
  operation: Scan Table
  output: liked_id
  table: Likes
id: '#4'
operation: Intersect
output: '#2.student_id'
predicate: 'Predicate [ #3.liked_id = #2.student_id ]'
"
56d9b7569da6cfd36c31daac378eeebeed9acb76698e67c63f49a3fce4e8d187,"Intersect Predicate [ B.name = T.name ] Output [ B.name ]
  In: Join Predicate [ B.liked_id = T.ID ] Output [ T.name ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
    In: Scan Table [ Likes ] Output [ liked_id ]
  In: Join Predicate [ B.ID = T.student_id ] Distinct [ true ] Output [ B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.name = #6.name ]"", ""output"": ""#3.name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ] Distinct [ true ]"", ""output"": ""#1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.liked_id = #5.ID ]"", ""output"": ""#5.name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""liked_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: liked_id
    table: Likes
  - id: '#5'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  id: '#6'
  operation: Join
  output: '#5.name'
  predicate: 'Predicate [ #4.liked_id = #5.ID ]'
id: '#7'
operation: Intersect
output: '#3.name'
predicate: 'Predicate [ #3.name = #6.name ]'
"
751312a14e1b895457b1e3416dd352a7abcadef9679147be4cb3252af11101a7,"Intersect Predicate [ B.name = T.name ] Output [ B.name ]
  In: Join Predicate [ B.liked_id = T.ID ] Output [ T.name ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
    In: Scan Table [ Likes ] Output [ liked_id ]
  In: Join Predicate [ B.ID = T.student_id ] Distinct [ true ] Output [ B.name ]
    In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#7"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.name = #6.name ]"", ""output"": ""#3.name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ] Distinct [ true ]"", ""output"": ""#1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.liked_id = #5.ID ]"", ""output"": ""#5.name"", ""children"": [{""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""liked_id""}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Friend
  id: '#3'
  operation: Join
  output: '#1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ] Distinct [ true ]'
- children:
  - id: '#4'
    operation: Scan Table
    output: liked_id
    table: Likes
  - id: '#5'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  id: '#6'
  operation: Join
  output: '#5.name'
  predicate: 'Predicate [ #4.liked_id = #5.ID ]'
id: '#7'
operation: Intersect
output: '#3.name'
predicate: 'Predicate [ #3.name = #6.name ]'
"
6aac79de3dfb498f14e452ccffef52b0fbffb19db5276bb259b6dd6196e2c474,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
  In: Scan Table [ Likes ] Output [ student_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: student_id
  table: Likes
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , student_id
predicate: GroupBy [ student_id ]
"
f58f82e66f2a77494424f80aa471496689fb273caf330128dc3b95ffc6d3ace7,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , student_id ]
  In: Scan Table [ Likes ] Output [ student_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: student_id
  table: Likes
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , student_id
predicate: GroupBy [ student_id ]
"
ff92bf186cb026e0855344183504608a989cfe970c6d5cc696280faa3f1ed561,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
  In: Join Predicate [ B.student_id = T.ID ] Output [ B.student_id , T.name ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
    In: Scan Table [ Likes ] Output [ student_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.student_id = #2.ID ]"", ""output"": ""#1.student_id , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: student_id
    table: Likes
  - id: '#2'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  id: '#3'
  operation: Join
  output: '#1.student_id , #2.name'
  predicate: 'Predicate [ #1.student_id = #2.ID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star , name
predicate: GroupBy [ student_id ]
"
26ba285d395198118d592f466d811b5cfb823cb3e3c6b816162f719160149536,"Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
  In: Join Predicate [ B.student_id = T.ID ] Output [ B.student_id , T.name ]
    In: Scan Table [ Highschooler ] Output [ ID , name ]
    In: Scan Table [ Likes ] Output [ student_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.student_id = #2.ID ]"", ""output"": ""#1.student_id , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: student_id
    table: Likes
  - id: '#2'
    operation: Scan Table
    output: ID , name
    table: Highschooler
  id: '#3'
  operation: Join
  output: '#1.student_id , #2.name'
  predicate: 'Predicate [ #1.student_id = #2.ID ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star , name
predicate: GroupBy [ student_id ]
"
587e9458cada672d2d3927d405dbd2f9bca706e71eb19a1a0e6d26d029033252,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] WithTies [ true ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ T.student_id = B.ID ] Output [ T.student_id , B.name ]
      In: Scan Table [ Likes ] Output [ student_id ]
      In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ] WithTies [ true ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #1.ID ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: ID , name
      table: Highschooler
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Likes
    id: '#3'
    operation: Join
    output: '#2.student_id , #1.name'
    predicate: 'Predicate [ #2.student_id = #1.ID ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: TopSort
output: name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ] WithTies [ true ]
"
92f7870d8e544dec954c41ef4da65daa4fb2cba5f0706f1d73c2442f423a6dd8,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] WithTies [ true ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ T.student_id = B.ID ] Output [ T.student_id , B.name ]
      In: Scan Table [ Likes ] Output [ student_id ]
      In: Scan Table [ Highschooler ] Output [ ID , name ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ] WithTies [ true ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #1.ID ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: ID , name
      table: Highschooler
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Likes
    id: '#3'
    operation: Join
    output: '#2.student_id , #1.name'
    predicate: 'Predicate [ #2.student_id = #1.ID ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: TopSort
output: name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ] WithTies [ true ]
"
a5718dce78aa6a1cb4b8449f5ac89c6e167966f9905923340a77326aba16ba34,"Filter Predicate [ Count_Star >= 2 ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ B.student_id = T.ID ] Output [ B.student_id , T.name ]
      In: Scan Table [ Highschooler ] Output [ ID , name ]
      In: Scan Table [ Likes ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.student_id = #2.ID ]"", ""output"": ""#1.student_id , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Likes
    - id: '#2'
      operation: Scan Table
      output: ID , name
      table: Highschooler
    id: '#3'
    operation: Join
    output: '#1.student_id , #2.name'
    predicate: 'Predicate [ #1.student_id = #2.ID ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: Filter
output: name
predicate: Predicate [ Count_Star >= 2 ]
"
5f078cf8840141aae2115e123c9cdd40f90ec682501edb26c3d06816b9a4eca2,"Filter Predicate [ Count_Star >= 2 ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ B.student_id = T.ID ] Output [ B.student_id , T.name ]
      In: Scan Table [ Highschooler ] Output [ ID , name ]
      In: Scan Table [ Likes ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.student_id = #2.ID ]"", ""output"": ""#1.student_id , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""ID , name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Likes
    - id: '#2'
      operation: Scan Table
      output: ID , name
      table: Highschooler
    id: '#3'
    operation: Join
    output: '#1.student_id , #2.name'
    predicate: 'Predicate [ #1.student_id = #2.ID ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: Filter
output: name
predicate: Predicate [ Count_Star >= 2 ]
"
664f0c6f067262d02049ca69c3f9f7726e6d086c3325b29eca9eb11398448854,"Filter Predicate [ Count_Star >= 2 ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ B.ID = T.student_id ] Output [ T.student_id , B.name ]
      In: Scan Table [ Friend ] Output [ student_id ]
      In: Scan Table [ Highschooler ] Predicate [ grade > 5 ] Output [ grade , ID , name ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ grade > 5 ]"", ""output"": ""grade , ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: grade , ID , name
      predicate: Predicate [ grade > 5 ]
      table: Highschooler
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#3'
    operation: Join
    output: '#2.student_id , #1.name'
    predicate: 'Predicate [ #1.ID = #2.student_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: Filter
output: name
predicate: Predicate [ Count_Star >= 2 ]
"
0958c0b2d43af122aef2fbe2e3aa770ae881b8f5b43febf6c3f9a3b5cf13e025,"Filter Predicate [ Count_Star >= 2 ] Output [ name ]
  In: Aggregate GroupBy [ student_id ] Output [ countstar AS Count_Star , name ]
    In: Join Predicate [ B.ID = T.student_id ] Output [ T.student_id , B.name ]
      In: Scan Table [ Friend ] Output [ student_id ]
      In: Scan Table [ Highschooler ] Predicate [ grade > 5 ] Output [ grade , ID , name ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""countstar AS Count_Star , name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#2.student_id , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ grade > 5 ]"", ""output"": ""grade , ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: grade , ID , name
      predicate: Predicate [ grade > 5 ]
      table: Highschooler
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#3'
    operation: Join
    output: '#2.student_id , #1.name'
    predicate: 'Predicate [ #1.ID = #2.student_id ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , name
  predicate: GroupBy [ student_id ]
id: '#5'
operation: Filter
output: name
predicate: Predicate [ Count_Star >= 2 ]
"
3682b3829c0ef3cdd72b77929881f34ffb80f004698e5f6de20618175c13a2b2,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ B.ID , B.name ]
    In: Scan Table [ Likes ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#1.ID , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    predicate: Predicate [ name = 'Kyle' ]
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Likes
  id: '#3'
  operation: Join
  output: '#1.ID , #1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
3124e28ac1a7fe690afecd460ac8ece90d118c90179e403c6d3922793b87a58c,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ B.ID = T.student_id ] Output [ B.ID , B.name ]
    In: Scan Table [ Likes ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Predicate [ name = 'Kyle' ] Output [ ID , name ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.ID = #2.student_id ]"", ""output"": ""#1.ID , #1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""predicate"": ""Predicate [ name = 'Kyle' ]"", ""output"": ""ID , name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Likes"", ""output"": ""student_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: ID , name
    predicate: Predicate [ name = 'Kyle' ]
    table: Highschooler
  - id: '#2'
    operation: Scan Table
    output: student_id
    table: Likes
  id: '#3'
  operation: Join
  output: '#1.ID , #1.name'
  predicate: 'Predicate [ #1.ID = #2.student_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
e60783a38fbe587fae22b5119c426af2faa291ec352b32ee73bd46e4d75c0c43,"Aggregate Output [ AVG(grade) AS Avg_grade ]
  In: Join Predicate [ B.student_id = T.ID ] Output [ T.grade ]
    In: Scan Table [ Highschooler ] Output [ grade , ID ]
    In: Aggregate GroupBy [ student_id ] Output [ student_id ]
      In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""AVG(grade) AS Avg_grade"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.ID ]"", ""output"": ""#3.grade"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade , ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#2'
    operation: Aggregate
    output: student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: grade , ID
    table: Highschooler
  id: '#4'
  operation: Join
  output: '#3.grade'
  predicate: 'Predicate [ #2.student_id = #3.ID ]'
id: '#5'
operation: Aggregate
output: AVG(grade) AS Avg_grade
"
e2e869b34513e5bed08d8f4fbbc0bbf12e76f971c72c6a06fd9e413fda048afc,"Aggregate Output [ AVG(grade) AS Avg_grade ]
  In: Join Predicate [ B.student_id = T.ID ] Output [ T.grade ]
    In: Scan Table [ Highschooler ] Output [ grade , ID ]
    In: Aggregate GroupBy [ student_id ] Output [ student_id ]
      In: Scan Table [ Friend ] Output [ student_id ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""AVG(grade) AS Avg_grade"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.student_id = #3.ID ]"", ""output"": ""#3.grade"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade , ID""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#2'
    operation: Aggregate
    output: student_id
    predicate: GroupBy [ student_id ]
  - id: '#3'
    operation: Scan Table
    output: grade , ID
    table: Highschooler
  id: '#4'
  operation: Join
  output: '#3.grade'
  predicate: 'Predicate [ #2.student_id = #3.ID ]'
id: '#5'
operation: Aggregate
output: AVG(grade) AS Avg_grade
"
bf6b1d29e11ed83843dd7359807c686a7503effa62469509bf03de3a88b35b89,"Aggregate Output [ MIN(grade) AS Min_grade ]
  In: Except Predicate [ T.student_id = B.ID ] Output [ B.grade ]
    In: Aggregate GroupBy [ student_id ] Output [ student_id ]
      In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ grade , ID ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""MIN(grade) AS Min_grade"", ""children"": [{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.student_id = #1.ID ]"", ""output"": ""#1.grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade , ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: grade , ID
    table: Highschooler
  - children:
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#3'
    operation: Aggregate
    output: student_id
    predicate: GroupBy [ student_id ]
  id: '#4'
  operation: Except
  output: '#1.grade'
  predicate: 'Predicate [ #3.student_id = #1.ID ]'
id: '#5'
operation: Aggregate
output: MIN(grade) AS Min_grade
"
ba2f6f7ee2f6c495a1a659ea8490d0ed8808d5ae72b806c1fc73d1ca4972d780,"Aggregate Output [ MIN(grade) AS Min_grade ]
  In: Except Predicate [ T.student_id = B.ID ] Output [ B.grade ]
    In: Aggregate GroupBy [ student_id ] Output [ student_id ]
      In: Scan Table [ Friend ] Output [ student_id ]
    In: Scan Table [ Highschooler ] Output [ grade , ID ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""MIN(grade) AS Min_grade"", ""children"": [{""id"": ""#4"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #3.student_id = #1.ID ]"", ""output"": ""#1.grade"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Highschooler"", ""output"": ""grade , ID""}, {""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ student_id ]"", ""output"": ""student_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Friend"", ""output"": ""student_id""}]}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: grade , ID
    table: Highschooler
  - children:
    - id: '#2'
      operation: Scan Table
      output: student_id
      table: Friend
    id: '#3'
    operation: Aggregate
    output: student_id
    predicate: GroupBy [ student_id ]
  id: '#4'
  operation: Except
  output: '#1.grade'
  predicate: 'Predicate [ #3.student_id = #1.ID ]'
id: '#5'
operation: Aggregate
output: MIN(grade) AS Min_grade
"
f626b9a2929fc139061b844dbf890d7ba521f6aa73d94c8973a3d0c6049a9e93,"Intersect Predicate [ B.state = T.state ] Output [ B.state ]
  In: Scan Table [ Professionals ] Output [ state ]
  In: Scan Table [ Owners ] Distinct [ true ] Output [ state ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.state = #2.state ]"", ""output"": ""#1.state"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""predicate"": ""Distinct [ true ]"", ""output"": ""state""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""state""}]}","children:
- id: '#1'
  operation: Scan Table
  output: state
  predicate: Distinct [ true ]
  table: Owners
- id: '#2'
  operation: Scan Table
  output: state
  table: Professionals
id: '#3'
operation: Intersect
output: '#1.state'
predicate: 'Predicate [ #1.state = #2.state ]'
"
9fb99b3230c59f8e93e31e9f3330ec2ef766cee0661a5362446bccfa564a4dc5,"Intersect Predicate [ B.state = T.state ] Output [ B.state ]
  In: Scan Table [ Professionals ] Output [ state ]
  In: Scan Table [ Owners ] Distinct [ true ] Output [ state ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.state = #2.state ]"", ""output"": ""#1.state"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""predicate"": ""Distinct [ true ]"", ""output"": ""state""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""state""}]}","children:
- id: '#1'
  operation: Scan Table
  output: state
  predicate: Distinct [ true ]
  table: Owners
- id: '#2'
  operation: Scan Table
  output: state
  table: Professionals
id: '#3'
operation: Intersect
output: '#1.state'
predicate: 'Predicate [ #1.state = #2.state ]'
"
decfc871b13ceaffd983db7df7c5c5dd6962b493f507d45cc62e8e2e3a87588a,"Aggregate Output [ AVG(age) AS Avg_age ]
  In: Intersect Predicate [ T.dog_id = B.dog_id ] Output [ B.age ]
    In: Scan Table [ Treatments ] Output [ dog_id ]
    In: Scan Table [ Dogs ] Output [ age , dog_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(age) AS Avg_age"", ""children"": [{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #2.dog_id = #1.dog_id ]"", ""output"": ""#1.age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age , dog_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: age , dog_id
    table: Dogs
  - id: '#2'
    operation: Scan Table
    output: dog_id
    table: Treatments
  id: '#3'
  operation: Intersect
  output: '#1.age'
  predicate: 'Predicate [ #2.dog_id = #1.dog_id ]'
id: '#4'
operation: Aggregate
output: AVG(age) AS Avg_age
"
157adfc6e10475a6903221bfc25168a40ae9a2ef7302d6de45ef016f64c3a329,"Aggregate Output [ AVG(age) AS Avg_age ]
  In: Intersect Predicate [ T.dog_id = B.dog_id ] Output [ B.age ]
    In: Scan Table [ Treatments ] Output [ dog_id ]
    In: Scan Table [ Dogs ] Output [ age , dog_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""AVG(age) AS Avg_age"", ""children"": [{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #2.dog_id = #1.dog_id ]"", ""output"": ""#1.age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age , dog_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: age , dog_id
    table: Dogs
  - id: '#2'
    operation: Scan Table
    output: dog_id
    table: Treatments
  id: '#3'
  operation: Intersect
  output: '#1.age'
  predicate: 'Predicate [ #2.dog_id = #1.dog_id ]'
id: '#4'
operation: Aggregate
output: AVG(age) AS Avg_age
"
2d5aaf3ed4a87a7bfd3f47e80b31b63bc9cb52e1d5ab8aadfb5e21f80c15d4f4,"Union Output [ B.last_name , B.cell_number , B.professional_id ]
  In: Filter Predicate [ Count_Star > 2 ] Output [ cell_number , last_name , professional_id ]
    In: Aggregate GroupBy [ professional_id ] Output [ countstar AS Count_Star , cell_number , last_name , professional_id ]
      In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.last_name , T.professional_id , T.cell_number ]
        In: Scan Table [ Professionals ] Output [ cell_number , last_name , professional_id ]
        In: Scan Table [ Treatments ] Output [ professional_id ]
  In: Scan Table [ Professionals ] Predicate [ state = 'Indiana' ] Output [ cell_number , last_name , professional_id , state ]","{""id"": ""#7"", ""operation"": ""Union"", ""output"": ""#1.last_name , #1.cell_number , #1.professional_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""predicate"": ""Predicate [ state = 'Indiana' ]"", ""output"": ""cell_number , last_name , professional_id , state""}, {""id"": ""#6"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""cell_number , last_name , professional_id"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ professional_id ]"", ""output"": ""countstar AS Count_Star , cell_number , last_name , professional_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.last_name , #3.professional_id , #3.cell_number"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""cell_number , last_name , professional_id""}]}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: cell_number , last_name , professional_id , state
  predicate: Predicate [ state = 'Indiana' ]
  table: Professionals
- children:
  - children:
    - children:
      - id: '#2'
        operation: Scan Table
        output: professional_id
        table: Treatments
      - id: '#3'
        operation: Scan Table
        output: cell_number , last_name , professional_id
        table: Professionals
      id: '#4'
      operation: Join
      output: '#3.last_name , #3.professional_id , #3.cell_number'
      predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
    id: '#5'
    operation: Aggregate
    output: countstar AS Count_Star , cell_number , last_name , professional_id
    predicate: GroupBy [ professional_id ]
  id: '#6'
  operation: Filter
  output: cell_number , last_name , professional_id
  predicate: Predicate [ Count_Star > 2 ]
id: '#7'
operation: Union
output: '#1.last_name , #1.cell_number , #1.professional_id'
"
8b33d8ebee3c820fd9c6f45fa6f76eeda92b42b72cc32487f29cfa4b79175f7b,"Union Output [ B.last_name , B.cell_number , B.professional_id ]
  In: Filter Predicate [ Count_Star > 2 ] Output [ cell_number , last_name , professional_id ]
    In: Aggregate GroupBy [ professional_id ] Output [ countstar AS Count_Star , cell_number , last_name , professional_id ]
      In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.last_name , T.professional_id , T.cell_number ]
        In: Scan Table [ Professionals ] Output [ cell_number , last_name , professional_id ]
        In: Scan Table [ Treatments ] Output [ professional_id ]
  In: Scan Table [ Professionals ] Predicate [ state = 'Indiana' ] Output [ cell_number , last_name , professional_id , state ]","{""id"": ""#7"", ""operation"": ""Union"", ""output"": ""#1.last_name , #1.cell_number , #1.professional_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""predicate"": ""Predicate [ state = 'Indiana' ]"", ""output"": ""cell_number , last_name , professional_id , state""}, {""id"": ""#6"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 2 ]"", ""output"": ""cell_number , last_name , professional_id"", ""children"": [{""id"": ""#5"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ professional_id ]"", ""output"": ""countstar AS Count_Star , cell_number , last_name , professional_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.last_name , #3.professional_id , #3.cell_number"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""cell_number , last_name , professional_id""}]}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: cell_number , last_name , professional_id , state
  predicate: Predicate [ state = 'Indiana' ]
  table: Professionals
- children:
  - children:
    - children:
      - id: '#2'
        operation: Scan Table
        output: professional_id
        table: Treatments
      - id: '#3'
        operation: Scan Table
        output: cell_number , last_name , professional_id
        table: Professionals
      id: '#4'
      operation: Join
      output: '#3.last_name , #3.professional_id , #3.cell_number'
      predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
    id: '#5'
    operation: Aggregate
    output: countstar AS Count_Star , cell_number , last_name , professional_id
    predicate: GroupBy [ professional_id ]
  id: '#6'
  operation: Filter
  output: cell_number , last_name , professional_id
  predicate: Predicate [ Count_Star > 2 ]
id: '#7'
operation: Union
output: '#1.last_name , #1.cell_number , #1.professional_id'
"
8ff76f894695250cc3219a3776484c51d536e913fbbfae05da57575988b3aaeb,"Except Predicate [ T.dog_id = B.dog_id ] Output [ B.name ]
  In: Filter Predicate [ Sum_cost_of_treatment > 1000.0 ] Output [ dog_id ]
    In: Aggregate GroupBy [ dog_id ] Output [ SUM(cost_of_treatment) AS Sum_cost_of_treatment , dog_id ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment , dog_id ]
  In: Scan Table [ Dogs ] Output [ dog_id , name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #4.dog_id = #1.dog_id ]"", ""output"": ""#1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""dog_id , name""}, {""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Sum_cost_of_treatment > 1000.0 ]"", ""output"": ""dog_id"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ dog_id ]"", ""output"": ""SUM(cost_of_treatment) AS Sum_cost_of_treatment , dog_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , dog_id""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: dog_id , name
  table: Dogs
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: cost_of_treatment , dog_id
      table: Treatments
    id: '#3'
    operation: Aggregate
    output: SUM(cost_of_treatment) AS Sum_cost_of_treatment , dog_id
    predicate: GroupBy [ dog_id ]
  id: '#4'
  operation: Filter
  output: dog_id
  predicate: Predicate [ Sum_cost_of_treatment > 1000.0 ]
id: '#5'
operation: Except
output: '#1.name'
predicate: 'Predicate [ #4.dog_id = #1.dog_id ]'
"
2e6a21ea522f1a50f525947926f0f042d7a8194f313d7a60aa58fe70c5062144,"Except Predicate [ T.dog_id = B.dog_id ] Output [ B.name ]
  In: Filter Predicate [ Sum_cost_of_treatment > 1000.0 ] Output [ dog_id ]
    In: Aggregate GroupBy [ dog_id ] Output [ SUM(cost_of_treatment) AS Sum_cost_of_treatment , dog_id ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment , dog_id ]
  In: Scan Table [ Dogs ] Output [ dog_id , name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #4.dog_id = #1.dog_id ]"", ""output"": ""#1.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""dog_id , name""}, {""id"": ""#4"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Sum_cost_of_treatment > 1000.0 ]"", ""output"": ""dog_id"", ""children"": [{""id"": ""#3"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ dog_id ]"", ""output"": ""SUM(cost_of_treatment) AS Sum_cost_of_treatment , dog_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , dog_id""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: dog_id , name
  table: Dogs
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: cost_of_treatment , dog_id
      table: Treatments
    id: '#3'
    operation: Aggregate
    output: SUM(cost_of_treatment) AS Sum_cost_of_treatment , dog_id
    predicate: GroupBy [ dog_id ]
  id: '#4'
  operation: Filter
  output: dog_id
  predicate: Predicate [ Sum_cost_of_treatment > 1000.0 ]
id: '#5'
operation: Except
output: '#1.name'
predicate: 'Predicate [ #4.dog_id = #1.dog_id ]'
"
1f6246464b62f765bf1b1cd4fb9ab00f47b5ee2aa8b7ba1ac9112ecf774c5483,"Except Predicate [ T.name = B.first_name ] Output [ B.first_name ]
  In: Scan Table [ Dogs ] Output [ name ]
  In: Union Output [ B.first_name ]
    In: Scan Table [ Owners ] Output [ first_name ]
    In: Scan Table [ Professionals ] Output [ first_name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #4.name = #3.first_name ]"", ""output"": ""#3.first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Union"", ""output"": ""#1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: first_name
    table: Professionals
  - id: '#2'
    operation: Scan Table
    output: first_name
    table: Owners
  id: '#3'
  operation: Union
  output: '#1.first_name'
- id: '#4'
  operation: Scan Table
  output: name
  table: Dogs
id: '#5'
operation: Except
output: '#3.first_name'
predicate: 'Predicate [ #4.name = #3.first_name ]'
"
79cef8a73b2fd8b66f165d4c4c9e563cfeea07472ea739d817c32c35983b8c2f,"Except Predicate [ T.name = B.first_name ] Output [ B.first_name ]
  In: Scan Table [ Dogs ] Output [ name ]
  In: Union Output [ B.first_name ]
    In: Scan Table [ Owners ] Output [ first_name ]
    In: Scan Table [ Professionals ] Output [ first_name ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #4.name = #3.first_name ]"", ""output"": ""#3.first_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Union"", ""output"": ""#1.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name""}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""name""}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: first_name
    table: Professionals
  - id: '#2'
    operation: Scan Table
    output: first_name
    table: Owners
  id: '#3'
  operation: Union
  output: '#1.first_name'
- id: '#4'
  operation: Scan Table
  output: name
  table: Dogs
id: '#5'
operation: Except
output: '#3.first_name'
predicate: 'Predicate [ #4.name = #3.first_name ]'
"
8fc7a2ee5a2eb6023b8e472bb2464ab3199f614879d09a2882a8e5e7053c079b,"Except Predicate [ B.professional_id = T.professional_id ] Output [ B.email_address , B.professional_id , B.role_code ]
  In: Intersect Predicate [ T.professional_id = B.professional_id ] Output [ B.professional_id , B.email_address , B.role_code ]
    In: Scan Table [ Treatments ] Output [ professional_id ]
    In: Scan Table [ Professionals ] Output [ professional_id , role_code , email_address ]
  In: Scan Table [ Professionals ] Output [ professional_id , role_code , email_address ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.professional_id = #4.professional_id ]"", ""output"": ""#1.email_address , #1.professional_id , #1.role_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""professional_id , role_code , email_address""}, {""id"": ""#4"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.professional_id = #2.professional_id ]"", ""output"": ""#2.professional_id , #2.email_address , #2.role_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""professional_id , role_code , email_address""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: professional_id , role_code , email_address
  table: Professionals
- children:
  - id: '#2'
    operation: Scan Table
    output: professional_id , role_code , email_address
    table: Professionals
  - id: '#3'
    operation: Scan Table
    output: professional_id
    table: Treatments
  id: '#4'
  operation: Intersect
  output: '#2.professional_id , #2.email_address , #2.role_code'
  predicate: 'Predicate [ #3.professional_id = #2.professional_id ]'
id: '#5'
operation: Except
output: '#1.email_address , #1.professional_id , #1.role_code'
predicate: 'Predicate [ #1.professional_id = #4.professional_id ]'
"
36adc0f401efd9e40060af9ac99b36de507b24338108ea1174f7e522094865df,"Except Predicate [ B.professional_id = T.professional_id ] Output [ B.email_address , B.professional_id , B.role_code ]
  In: Intersect Predicate [ T.professional_id = B.professional_id ] Output [ B.professional_id , B.email_address , B.role_code ]
    In: Scan Table [ Treatments ] Output [ professional_id ]
    In: Scan Table [ Professionals ] Output [ professional_id , role_code , email_address ]
  In: Scan Table [ Professionals ] Output [ professional_id , role_code , email_address ]","{""id"": ""#5"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.professional_id = #4.professional_id ]"", ""output"": ""#1.email_address , #1.professional_id , #1.role_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""professional_id , role_code , email_address""}, {""id"": ""#4"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #3.professional_id = #2.professional_id ]"", ""output"": ""#2.professional_id , #2.email_address , #2.role_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""professional_id , role_code , email_address""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: professional_id , role_code , email_address
  table: Professionals
- children:
  - id: '#2'
    operation: Scan Table
    output: professional_id , role_code , email_address
    table: Professionals
  - id: '#3'
    operation: Scan Table
    output: professional_id
    table: Treatments
  id: '#4'
  operation: Intersect
  output: '#2.professional_id , #2.email_address , #2.role_code'
  predicate: 'Predicate [ #3.professional_id = #2.professional_id ]'
id: '#5'
operation: Except
output: '#1.email_address , #1.professional_id , #1.role_code'
predicate: 'Predicate [ #1.professional_id = #4.professional_id ]'
"
4c7d617842ecf4c2c442a7865d9226b92d5fc0b85e7dbe47701a24899111864b,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ first_name , last_name , owner_id , Count_Star ]
  In: Join Predicate [ B.owner_id = T.owner_id ] Output [ T.last_name , T.first_name , B.Count_Star , B.owner_id ]
    In: Scan Table [ Owners ] Output [ first_name , last_name , owner_id ]
    In: Aggregate GroupBy [ owner_id ] Output [ countstar AS Count_Star , owner_id ]
      In: Scan Table [ Dogs ] Output [ owner_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""first_name , last_name , owner_id , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.owner_id = #3.owner_id ]"", ""output"": ""#3.last_name , #3.first_name , #2.Count_Star , #2.owner_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ owner_id ]"", ""output"": ""countstar AS Count_Star , owner_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name , last_name , owner_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: owner_id
      table: Dogs
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , owner_id
    predicate: GroupBy [ owner_id ]
  - id: '#3'
    operation: Scan Table
    output: first_name , last_name , owner_id
    table: Owners
  id: '#4'
  operation: Join
  output: '#3.last_name , #3.first_name , #2.Count_Star , #2.owner_id'
  predicate: 'Predicate [ #2.owner_id = #3.owner_id ]'
id: '#5'
operation: TopSort
output: first_name , last_name , owner_id , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
66ca5dbbeaf6330e1e4962deede1ffbb618a38a3ed59cf7c08d11c553f1497cb,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ first_name , last_name , owner_id , Count_Star ]
  In: Join Predicate [ B.owner_id = T.owner_id ] Output [ T.last_name , T.first_name , B.Count_Star , B.owner_id ]
    In: Scan Table [ Owners ] Output [ first_name , last_name , owner_id ]
    In: Aggregate GroupBy [ owner_id ] Output [ countstar AS Count_Star , owner_id ]
      In: Scan Table [ Dogs ] Output [ owner_id ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""first_name , last_name , owner_id , Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.owner_id = #3.owner_id ]"", ""output"": ""#3.last_name , #3.first_name , #2.Count_Star , #2.owner_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ owner_id ]"", ""output"": ""countstar AS Count_Star , owner_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name , last_name , owner_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: owner_id
      table: Dogs
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , owner_id
    predicate: GroupBy [ owner_id ]
  - id: '#3'
    operation: Scan Table
    output: first_name , last_name , owner_id
    table: Owners
  id: '#4'
  operation: Join
  output: '#3.last_name , #3.first_name , #2.Count_Star , #2.owner_id'
  predicate: 'Predicate [ #2.owner_id = #3.owner_id ]'
id: '#5'
operation: TopSort
output: first_name , last_name , owner_id , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
846e09f26beeee5ebb3abf7a28810861967194e38262b68ea53c0d47e8b2709e,"Filter Predicate [ Count_Star >= 2 ] Output [ first_name , professional_id , role_code ]
  In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.first_name , T.professional_id , B.Count_Star , T.role_code ]
    In: Scan Table [ Professionals ] Output [ first_name , professional_id , role_code ]
    In: Aggregate GroupBy [ professional_id ] Output [ countstar AS Count_Star , professional_id ]
      In: Scan Table [ Treatments ] Output [ professional_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""first_name , professional_id , role_code"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.first_name , #3.professional_id , #2.Count_Star , #3.role_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ professional_id ]"", ""output"": ""countstar AS Count_Star , professional_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , professional_id , role_code""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: professional_id
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , professional_id
    predicate: GroupBy [ professional_id ]
  - id: '#3'
    operation: Scan Table
    output: first_name , professional_id , role_code
    table: Professionals
  id: '#4'
  operation: Join
  output: '#3.first_name , #3.professional_id , #2.Count_Star , #3.role_code'
  predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
id: '#5'
operation: Filter
output: first_name , professional_id , role_code
predicate: Predicate [ Count_Star >= 2 ]
"
ef4c1b5e130aa488efbf131f5a392c01c95c1e9be40ff4af6960a1d9f3e744a0,"Filter Predicate [ Count_Star >= 2 ] Output [ first_name , professional_id , role_code ]
  In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.first_name , T.professional_id , B.Count_Star , T.role_code ]
    In: Scan Table [ Professionals ] Output [ first_name , professional_id , role_code ]
    In: Aggregate GroupBy [ professional_id ] Output [ countstar AS Count_Star , professional_id ]
      In: Scan Table [ Treatments ] Output [ professional_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""first_name , professional_id , role_code"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.first_name , #3.professional_id , #2.Count_Star , #3.role_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ professional_id ]"", ""output"": ""countstar AS Count_Star , professional_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , professional_id , role_code""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: professional_id
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , professional_id
    predicate: GroupBy [ professional_id ]
  - id: '#3'
    operation: Scan Table
    output: first_name , professional_id , role_code
    table: Professionals
  id: '#4'
  operation: Join
  output: '#3.first_name , #3.professional_id , #2.Count_Star , #3.role_code'
  predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
id: '#5'
operation: Filter
output: first_name , professional_id , role_code
predicate: Predicate [ Count_Star >= 2 ]
"
ad9d991e1f140de0bcbb72b639b2b2c55ef989561d953b6b65c0c60098413bba,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , breed_name ]
  In: Aggregate GroupBy [ breed_name ] Output [ countstar AS Count_Star , breed_name ]
    In: Join Predicate [ B.breed_code = T.breed_code ] Output [ B.breed_name ]
      In: Scan Table [ Dogs ] Output [ breed_code ]
      In: Scan Table [ Breeds ] Output [ breed_code , breed_name ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , breed_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ breed_name ]"", ""output"": ""countstar AS Count_Star , breed_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.breed_code = #2.breed_code ]"", ""output"": ""#1.breed_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Breeds"", ""output"": ""breed_code , breed_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""breed_code""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: breed_code , breed_name
      table: Breeds
    - id: '#2'
      operation: Scan Table
      output: breed_code
      table: Dogs
    id: '#3'
    operation: Join
    output: '#1.breed_name'
    predicate: 'Predicate [ #1.breed_code = #2.breed_code ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , breed_name
  predicate: GroupBy [ breed_name ]
id: '#5'
operation: TopSort
output: Count_Star , breed_name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
6940b25b51becbeb25e648b50fc48812060854804e93b48086f08f8e01bd3638,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , breed_name ]
  In: Aggregate GroupBy [ breed_name ] Output [ countstar AS Count_Star , breed_name ]
    In: Join Predicate [ B.breed_code = T.breed_code ] Output [ B.breed_name ]
      In: Scan Table [ Dogs ] Output [ breed_code ]
      In: Scan Table [ Breeds ] Output [ breed_code , breed_name ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , breed_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ breed_name ]"", ""output"": ""countstar AS Count_Star , breed_name"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.breed_code = #2.breed_code ]"", ""output"": ""#1.breed_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Breeds"", ""output"": ""breed_code , breed_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""breed_code""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: breed_code , breed_name
      table: Breeds
    - id: '#2'
      operation: Scan Table
      output: breed_code
      table: Dogs
    id: '#3'
    operation: Join
    output: '#1.breed_name'
    predicate: 'Predicate [ #1.breed_code = #2.breed_code ]'
  id: '#4'
  operation: Aggregate
  output: countstar AS Count_Star , breed_name
  predicate: GroupBy [ breed_name ]
id: '#5'
operation: TopSort
output: Count_Star , breed_name
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
661ea27e7e8bc59503dbef3470b98ed3b9d917be0339f18d8dcb7f4268ed669f,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ last_name , owner_id , Count_Star ]
  In: Aggregate GroupBy [ owner_id ] Output [ countstar AS Count_Star , last_name , owner_id ]
    In: Join Predicate [ B.dog_id = T.dog_id ] Output [ T.owner_id , T.last_name ]
      In: Join Predicate [ B.owner_id = T.owner_id ] Output [ T.last_name , T.owner_id , B.dog_id ]
        In: Scan Table [ Owners ] Output [ last_name , owner_id ]
        In: Scan Table [ Dogs ] Output [ owner_id , dog_id ]
      In: Scan Table [ Treatments ] Output [ dog_id ]","{""id"": ""#7"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""last_name , owner_id , Count_Star"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ owner_id ]"", ""output"": ""countstar AS Count_Star , last_name , owner_id"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.dog_id = #4.dog_id ]"", ""output"": ""#4.owner_id , #4.last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.owner_id = #3.owner_id ]"", ""output"": ""#3.last_name , #3.owner_id , #2.dog_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , dog_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""last_name , owner_id""}]}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: dog_id
      table: Treatments
    - children:
      - id: '#2'
        operation: Scan Table
        output: owner_id , dog_id
        table: Dogs
      - id: '#3'
        operation: Scan Table
        output: last_name , owner_id
        table: Owners
      id: '#4'
      operation: Join
      output: '#3.last_name , #3.owner_id , #2.dog_id'
      predicate: 'Predicate [ #2.owner_id = #3.owner_id ]'
    id: '#5'
    operation: Join
    output: '#4.owner_id , #4.last_name'
    predicate: 'Predicate [ #1.dog_id = #4.dog_id ]'
  id: '#6'
  operation: Aggregate
  output: countstar AS Count_Star , last_name , owner_id
  predicate: GroupBy [ owner_id ]
id: '#7'
operation: TopSort
output: last_name , owner_id , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
e8547401e95957bca35ed38ffb63b21c97fd2a30d03f18821da27f7671f398df,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ last_name , owner_id , Count_Star ]
  In: Aggregate GroupBy [ owner_id ] Output [ countstar AS Count_Star , last_name , owner_id ]
    In: Join Predicate [ B.dog_id = T.dog_id ] Output [ T.owner_id , T.last_name ]
      In: Join Predicate [ B.owner_id = T.owner_id ] Output [ T.last_name , T.owner_id , B.dog_id ]
        In: Scan Table [ Owners ] Output [ last_name , owner_id ]
        In: Scan Table [ Dogs ] Output [ owner_id , dog_id ]
      In: Scan Table [ Treatments ] Output [ dog_id ]","{""id"": ""#7"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""last_name , owner_id , Count_Star"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ owner_id ]"", ""output"": ""countstar AS Count_Star , last_name , owner_id"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.dog_id = #4.dog_id ]"", ""output"": ""#4.owner_id , #4.last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.owner_id = #3.owner_id ]"", ""output"": ""#3.last_name , #3.owner_id , #2.dog_id"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , dog_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""last_name , owner_id""}]}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: dog_id
      table: Treatments
    - children:
      - id: '#2'
        operation: Scan Table
        output: owner_id , dog_id
        table: Dogs
      - id: '#3'
        operation: Scan Table
        output: last_name , owner_id
        table: Owners
      id: '#4'
      operation: Join
      output: '#3.last_name , #3.owner_id , #2.dog_id'
      predicate: 'Predicate [ #2.owner_id = #3.owner_id ]'
    id: '#5'
    operation: Join
    output: '#4.owner_id , #4.last_name'
    predicate: 'Predicate [ #1.dog_id = #4.dog_id ]'
  id: '#6'
  operation: Aggregate
  output: countstar AS Count_Star , last_name , owner_id
  predicate: GroupBy [ owner_id ]
id: '#7'
operation: TopSort
output: last_name , owner_id , Count_Star
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
769c4f1348155baa4d093eb503db38362725a9c83d68fe615b476ac3e3c2d803,"TopSort Rows [ 1 ] OrderBy [ Sum_cost_of_treatment ASC ] Output [ Sum_cost_of_treatment , treatment_type_description ]
  In: Join Predicate [ B.treatment_type_code = T.treatment_type_code ] Output [ T.treatment_type_description , B.Sum_cost_of_treatment ]
    In: Scan Table [ Treatment_Types ] Output [ treatment_type_code , treatment_type_description ]
    In: Aggregate GroupBy [ treatment_type_code ] Output [ treatment_type_code , SUM(cost_of_treatment) AS Sum_cost_of_treatment ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment , treatment_type_code ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Sum_cost_of_treatment ASC ]"", ""output"": ""Sum_cost_of_treatment , treatment_type_description"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.treatment_type_code = #3.treatment_type_code ]"", ""output"": ""#3.treatment_type_description , #2.Sum_cost_of_treatment"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ treatment_type_code ]"", ""output"": ""treatment_type_code , SUM(cost_of_treatment) AS Sum_cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , treatment_type_code""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Treatment_Types"", ""output"": ""treatment_type_code , treatment_type_description""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: cost_of_treatment , treatment_type_code
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: treatment_type_code , SUM(cost_of_treatment) AS Sum_cost_of_treatment
    predicate: GroupBy [ treatment_type_code ]
  - id: '#3'
    operation: Scan Table
    output: treatment_type_code , treatment_type_description
    table: Treatment_Types
  id: '#4'
  operation: Join
  output: '#3.treatment_type_description , #2.Sum_cost_of_treatment'
  predicate: 'Predicate [ #2.treatment_type_code = #3.treatment_type_code ]'
id: '#5'
operation: TopSort
output: Sum_cost_of_treatment , treatment_type_description
predicate: Rows [ 1 ] OrderBy [ Sum_cost_of_treatment ASC ]
"
8712f813e382b9eadb483db8adea6999189ff315c912822cb725e49f6fb06f95,"TopSort Rows [ 1 ] OrderBy [ Sum_cost_of_treatment ASC ] Output [ Sum_cost_of_treatment , treatment_type_description ]
  In: Join Predicate [ B.treatment_type_code = T.treatment_type_code ] Output [ T.treatment_type_description , B.Sum_cost_of_treatment ]
    In: Scan Table [ Treatment_Types ] Output [ treatment_type_code , treatment_type_description ]
    In: Aggregate GroupBy [ treatment_type_code ] Output [ treatment_type_code , SUM(cost_of_treatment) AS Sum_cost_of_treatment ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment , treatment_type_code ]","{""id"": ""#5"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Sum_cost_of_treatment ASC ]"", ""output"": ""Sum_cost_of_treatment , treatment_type_description"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.treatment_type_code = #3.treatment_type_code ]"", ""output"": ""#3.treatment_type_description , #2.Sum_cost_of_treatment"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ treatment_type_code ]"", ""output"": ""treatment_type_code , SUM(cost_of_treatment) AS Sum_cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , treatment_type_code""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Treatment_Types"", ""output"": ""treatment_type_code , treatment_type_description""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: cost_of_treatment , treatment_type_code
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: treatment_type_code , SUM(cost_of_treatment) AS Sum_cost_of_treatment
    predicate: GroupBy [ treatment_type_code ]
  - id: '#3'
    operation: Scan Table
    output: treatment_type_code , treatment_type_description
    table: Treatment_Types
  id: '#4'
  operation: Join
  output: '#3.treatment_type_description , #2.Sum_cost_of_treatment'
  predicate: 'Predicate [ #2.treatment_type_code = #3.treatment_type_code ]'
id: '#5'
operation: TopSort
output: Sum_cost_of_treatment , treatment_type_description
predicate: Rows [ 1 ] OrderBy [ Sum_cost_of_treatment ASC ]
"
d4c083cb95db6dcb9ca733446fc4c7c4a43e2b085ee182b10d387d7b8d4694d6,"TopSort Rows [ 1 ] OrderBy [ Sum_cost_of_treatment DESC ] Output [ Sum_cost_of_treatment , zip_code , owner_id ]
  In: Aggregate GroupBy [ owner_id ] Output [ SUM(cost_of_treatment) AS Sum_cost_of_treatment , zip_code , owner_id ]
    In: Join Predicate [ B.dog_id = T.dog_id ] Output [ T.owner_id , T.zip_code , B.cost_of_treatment ]
      In: Join Predicate [ B.owner_id = T.owner_id ] Output [ B.dog_id , T.owner_id , T.zip_code ]
        In: Scan Table [ Owners ] Output [ zip_code , owner_id ]
        In: Scan Table [ Dogs ] Output [ owner_id , dog_id ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment , dog_id ]","{""id"": ""#7"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Sum_cost_of_treatment DESC ]"", ""output"": ""Sum_cost_of_treatment , zip_code , owner_id"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ owner_id ]"", ""output"": ""SUM(cost_of_treatment) AS Sum_cost_of_treatment , zip_code , owner_id"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.dog_id = #4.dog_id ]"", ""output"": ""#4.owner_id , #4.zip_code , #1.cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , dog_id""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.owner_id = #3.owner_id ]"", ""output"": ""#2.dog_id , #3.owner_id , #3.zip_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , dog_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""zip_code , owner_id""}]}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: cost_of_treatment , dog_id
      table: Treatments
    - children:
      - id: '#2'
        operation: Scan Table
        output: owner_id , dog_id
        table: Dogs
      - id: '#3'
        operation: Scan Table
        output: zip_code , owner_id
        table: Owners
      id: '#4'
      operation: Join
      output: '#2.dog_id , #3.owner_id , #3.zip_code'
      predicate: 'Predicate [ #2.owner_id = #3.owner_id ]'
    id: '#5'
    operation: Join
    output: '#4.owner_id , #4.zip_code , #1.cost_of_treatment'
    predicate: 'Predicate [ #1.dog_id = #4.dog_id ]'
  id: '#6'
  operation: Aggregate
  output: SUM(cost_of_treatment) AS Sum_cost_of_treatment , zip_code , owner_id
  predicate: GroupBy [ owner_id ]
id: '#7'
operation: TopSort
output: Sum_cost_of_treatment , zip_code , owner_id
predicate: Rows [ 1 ] OrderBy [ Sum_cost_of_treatment DESC ]
"
78201a51f6489492d9712ea0074012d00b05eae33689bd9392a73b71b99c588a,"TopSort Rows [ 1 ] OrderBy [ Sum_cost_of_treatment DESC ] Output [ Sum_cost_of_treatment , zip_code , owner_id ]
  In: Aggregate GroupBy [ owner_id ] Output [ SUM(cost_of_treatment) AS Sum_cost_of_treatment , zip_code , owner_id ]
    In: Join Predicate [ B.dog_id = T.dog_id ] Output [ T.owner_id , T.zip_code , B.cost_of_treatment ]
      In: Join Predicate [ B.owner_id = T.owner_id ] Output [ B.dog_id , T.owner_id , T.zip_code ]
        In: Scan Table [ Owners ] Output [ zip_code , owner_id ]
        In: Scan Table [ Dogs ] Output [ owner_id , dog_id ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment , dog_id ]","{""id"": ""#7"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Sum_cost_of_treatment DESC ]"", ""output"": ""Sum_cost_of_treatment , zip_code , owner_id"", ""children"": [{""id"": ""#6"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ owner_id ]"", ""output"": ""SUM(cost_of_treatment) AS Sum_cost_of_treatment , zip_code , owner_id"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.dog_id = #4.dog_id ]"", ""output"": ""#4.owner_id , #4.zip_code , #1.cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , dog_id""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.owner_id = #3.owner_id ]"", ""output"": ""#2.dog_id , #3.owner_id , #3.zip_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , dog_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""zip_code , owner_id""}]}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: cost_of_treatment , dog_id
      table: Treatments
    - children:
      - id: '#2'
        operation: Scan Table
        output: owner_id , dog_id
        table: Dogs
      - id: '#3'
        operation: Scan Table
        output: zip_code , owner_id
        table: Owners
      id: '#4'
      operation: Join
      output: '#2.dog_id , #3.owner_id , #3.zip_code'
      predicate: 'Predicate [ #2.owner_id = #3.owner_id ]'
    id: '#5'
    operation: Join
    output: '#4.owner_id , #4.zip_code , #1.cost_of_treatment'
    predicate: 'Predicate [ #1.dog_id = #4.dog_id ]'
  id: '#6'
  operation: Aggregate
  output: SUM(cost_of_treatment) AS Sum_cost_of_treatment , zip_code , owner_id
  predicate: GroupBy [ owner_id ]
id: '#7'
operation: TopSort
output: Sum_cost_of_treatment , zip_code , owner_id
predicate: Rows [ 1 ] OrderBy [ Sum_cost_of_treatment DESC ]
"
a7ac46f6fac1b59f3e7af600f51d43c2cb3e999a65bed7a25b53c188b5ea89d5,"Filter Predicate [ Count_Star >= 2 ] Output [ cell_number , professional_id ]
  In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.professional_id , B.Count_Star , T.cell_number ]
    In: Scan Table [ Professionals ] Output [ cell_number , professional_id ]
    In: Aggregate GroupBy [ professional_id ] Output [ countstar AS Count_Star , professional_id ]
      In: Scan Table [ Treatments ] Output [ professional_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""cell_number , professional_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.professional_id , #2.Count_Star , #3.cell_number"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ professional_id ]"", ""output"": ""countstar AS Count_Star , professional_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""cell_number , professional_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: professional_id
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , professional_id
    predicate: GroupBy [ professional_id ]
  - id: '#3'
    operation: Scan Table
    output: cell_number , professional_id
    table: Professionals
  id: '#4'
  operation: Join
  output: '#3.professional_id , #2.Count_Star , #3.cell_number'
  predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
id: '#5'
operation: Filter
output: cell_number , professional_id
predicate: Predicate [ Count_Star >= 2 ]
"
a72bc94122c8335bb8ef116a28ae80c1bcafdbcf89ef8fca8233fe7a04a89520,"Filter Predicate [ Count_Star >= 2 ] Output [ cell_number , professional_id ]
  In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.professional_id , B.Count_Star , T.cell_number ]
    In: Scan Table [ Professionals ] Output [ cell_number , professional_id ]
    In: Aggregate GroupBy [ professional_id ] Output [ countstar AS Count_Star , professional_id ]
      In: Scan Table [ Treatments ] Output [ professional_id ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star >= 2 ]"", ""output"": ""cell_number , professional_id"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.professional_id , #2.Count_Star , #3.cell_number"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ professional_id ]"", ""output"": ""countstar AS Count_Star , professional_id"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""cell_number , professional_id""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: professional_id
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: countstar AS Count_Star , professional_id
    predicate: GroupBy [ professional_id ]
  - id: '#3'
    operation: Scan Table
    output: cell_number , professional_id
    table: Professionals
  id: '#4'
  operation: Join
  output: '#3.professional_id , #2.Count_Star , #3.cell_number'
  predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
id: '#5'
operation: Filter
output: cell_number , professional_id
predicate: Predicate [ Count_Star >= 2 ]
"
74853798510bb1be5881fc985b194c00060b2fa3fafaf8b2d0658e70f2d759f0,"Join Distinct [ true ] Output [ T.last_name , T.first_name ]
  In: Scan Table [ Professionals ] Output [ first_name , last_name ]
  In: Join Predicate [ T.cost_of_treatment < B.Avg_cost_of_treatment ] Output [ T.cost_of_treatment ]
    In: Scan Table [ Treatments ] Output [ cost_of_treatment ]
    In: Aggregate Output [ AVG(cost_of_treatment) AS Avg_cost_of_treatment ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Distinct [ true ]"", ""output"": ""#5.last_name , #5.first_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.cost_of_treatment < #2.Avg_cost_of_treatment ]"", ""output"": ""#3.cost_of_treatment"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(cost_of_treatment) AS Avg_cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , last_name""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: cost_of_treatment
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: AVG(cost_of_treatment) AS Avg_cost_of_treatment
  - id: '#3'
    operation: Scan Table
    output: cost_of_treatment
    table: Treatments
  id: '#4'
  operation: Join
  output: '#3.cost_of_treatment'
  predicate: 'Predicate [ #3.cost_of_treatment < #2.Avg_cost_of_treatment ]'
- id: '#5'
  operation: Scan Table
  output: first_name , last_name
  table: Professionals
id: '#6'
operation: Join
output: '#5.last_name , #5.first_name'
predicate: Distinct [ true ]
"
c8a261b56b3fd317715e20ae964633fe39d27e415421d119333cd698a3f48fb7,"Join Distinct [ true ] Output [ T.last_name , T.first_name ]
  In: Scan Table [ Professionals ] Output [ first_name , last_name ]
  In: Join Predicate [ T.cost_of_treatment < B.Avg_cost_of_treatment ] Output [ T.cost_of_treatment ]
    In: Scan Table [ Treatments ] Output [ cost_of_treatment ]
    In: Aggregate Output [ AVG(cost_of_treatment) AS Avg_cost_of_treatment ]
      In: Scan Table [ Treatments ] Output [ cost_of_treatment ]","{""id"": ""#6"", ""operation"": ""Join"", ""predicate"": ""Distinct [ true ]"", ""output"": ""#5.last_name , #5.first_name"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.cost_of_treatment < #2.Avg_cost_of_treatment ]"", ""output"": ""#3.cost_of_treatment"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(cost_of_treatment) AS Avg_cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment""}]}, {""id"": ""#5"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , last_name""}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: cost_of_treatment
      table: Treatments
    id: '#2'
    operation: Aggregate
    output: AVG(cost_of_treatment) AS Avg_cost_of_treatment
  - id: '#3'
    operation: Scan Table
    output: cost_of_treatment
    table: Treatments
  id: '#4'
  operation: Join
  output: '#3.cost_of_treatment'
  predicate: 'Predicate [ #3.cost_of_treatment < #2.Avg_cost_of_treatment ]'
- id: '#5'
  operation: Scan Table
  output: first_name , last_name
  table: Professionals
id: '#6'
operation: Join
output: '#5.last_name , #5.first_name'
predicate: Distinct [ true ]
"
6b6e1c6478e1e38f5482e86be34aee7b06e9b39a193ea87dfdd42bee7e5d3092,"Join Predicate [ B.professional_id = T.professional_id ] Output [ B.date_of_treatment , T.first_name ]
  In: Scan Table [ Professionals ] Output [ first_name , professional_id ]
  In: Scan Table [ Treatments ] Output [ date_of_treatment , professional_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.professional_id = #2.professional_id ]"", ""output"": ""#1.date_of_treatment , #2.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""date_of_treatment , professional_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , professional_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: date_of_treatment , professional_id
  table: Treatments
- id: '#2'
  operation: Scan Table
  output: first_name , professional_id
  table: Professionals
id: '#3'
operation: Join
output: '#1.date_of_treatment , #2.first_name'
predicate: 'Predicate [ #1.professional_id = #2.professional_id ]'
"
5cce379b4051e866afaec01797e5a9818e966ef70d3e2d375c35ce632f044540,"Join Predicate [ B.professional_id = T.professional_id ] Output [ B.date_of_treatment , T.first_name ]
  In: Scan Table [ Professionals ] Output [ first_name , professional_id ]
  In: Scan Table [ Treatments ] Output [ date_of_treatment , professional_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.professional_id = #2.professional_id ]"", ""output"": ""#1.date_of_treatment , #2.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""date_of_treatment , professional_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , professional_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: date_of_treatment , professional_id
  table: Treatments
- id: '#2'
  operation: Scan Table
  output: first_name , professional_id
  table: Professionals
id: '#3'
operation: Join
output: '#1.date_of_treatment , #2.first_name'
predicate: 'Predicate [ #1.professional_id = #2.professional_id ]'
"
a2a172d7d2a542d70069554cde5ff036f577151c427f34994ab64326401a47dc,"Join Predicate [ B.treatment_type_code = T.treatment_type_code ] Output [ T.cost_of_treatment , B.treatment_type_description ]
  In: Scan Table [ Treatments ] Output [ cost_of_treatment , treatment_type_code ]
  In: Scan Table [ Treatment_Types ] Output [ treatment_type_code , treatment_type_description ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.treatment_type_code = #2.treatment_type_code ]"", ""output"": ""#2.cost_of_treatment , #1.treatment_type_description"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatment_Types"", ""output"": ""treatment_type_code , treatment_type_description""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , treatment_type_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: treatment_type_code , treatment_type_description
  table: Treatment_Types
- id: '#2'
  operation: Scan Table
  output: cost_of_treatment , treatment_type_code
  table: Treatments
id: '#3'
operation: Join
output: '#2.cost_of_treatment , #1.treatment_type_description'
predicate: 'Predicate [ #1.treatment_type_code = #2.treatment_type_code ]'
"
95b58705014ea9cafe1d2b2967eceea55b90e10025390a1d8c79348f47380569,"Join Predicate [ B.treatment_type_code = T.treatment_type_code ] Output [ T.cost_of_treatment , B.treatment_type_description ]
  In: Scan Table [ Treatments ] Output [ cost_of_treatment , treatment_type_code ]
  In: Scan Table [ Treatment_Types ] Output [ treatment_type_code , treatment_type_description ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.treatment_type_code = #2.treatment_type_code ]"", ""output"": ""#2.cost_of_treatment , #1.treatment_type_description"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatment_Types"", ""output"": ""treatment_type_code , treatment_type_description""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""cost_of_treatment , treatment_type_code""}]}","children:
- id: '#1'
  operation: Scan Table
  output: treatment_type_code , treatment_type_description
  table: Treatment_Types
- id: '#2'
  operation: Scan Table
  output: cost_of_treatment , treatment_type_code
  table: Treatments
id: '#3'
operation: Join
output: '#2.cost_of_treatment , #1.treatment_type_description'
predicate: 'Predicate [ #1.treatment_type_code = #2.treatment_type_code ]'
"
fc8eb2a4b3514db63e9649bd5c29860d9397dcfdb5806eefd7e7f601c363bf28,"Join Predicate [ B.owner_id = T.owner_id ] Output [ T.last_name , T.first_name , B.size_code ]
  In: Scan Table [ Owners ] Output [ first_name , last_name , owner_id ]
  In: Scan Table [ Dogs ] Output [ owner_id , size_code ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""#2.last_name , #2.first_name , #1.size_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , size_code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name , last_name , owner_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: owner_id , size_code
  table: Dogs
- id: '#2'
  operation: Scan Table
  output: first_name , last_name , owner_id
  table: Owners
id: '#3'
operation: Join
output: '#2.last_name , #2.first_name , #1.size_code'
predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
"
09a03a898de94d379933b176c750be6d83e799a2d7d31e03de82e63888e69ed1,"Join Predicate [ B.owner_id = T.owner_id ] Output [ T.last_name , T.first_name , B.size_code ]
  In: Scan Table [ Owners ] Output [ first_name , last_name , owner_id ]
  In: Scan Table [ Dogs ] Output [ owner_id , size_code ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""#2.last_name , #2.first_name , #1.size_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , size_code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name , last_name , owner_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: owner_id , size_code
  table: Dogs
- id: '#2'
  operation: Scan Table
  output: first_name , last_name , owner_id
  table: Owners
id: '#3'
operation: Join
output: '#2.last_name , #2.first_name , #1.size_code'
predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
"
eded0e3c6d25bb3895cd6104eb9495428d4b8d1a9186de3ce6786eedecc9a792,"Join Predicate [ B.owner_id = T.owner_id ] Output [ B.first_name , T.name ]
  In: Scan Table [ Dogs ] Output [ owner_id , name ]
  In: Scan Table [ Owners ] Output [ first_name , owner_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""#1.first_name , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name , owner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: first_name , owner_id
  table: Owners
- id: '#2'
  operation: Scan Table
  output: owner_id , name
  table: Dogs
id: '#3'
operation: Join
output: '#1.first_name , #2.name'
predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
"
a18b1ec289665e858ed449e97f2baf04c419f3a8ecbc84d40b899776cc8686ec,"Join Predicate [ B.owner_id = T.owner_id ] Output [ B.first_name , T.name ]
  In: Scan Table [ Dogs ] Output [ owner_id , name ]
  In: Scan Table [ Owners ] Output [ first_name , owner_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""#1.first_name , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""first_name , owner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: first_name , owner_id
  table: Owners
- id: '#2'
  operation: Scan Table
  output: owner_id , name
  table: Dogs
id: '#3'
operation: Join
output: '#1.first_name , #2.name'
predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
"
17831c8c47493e469a43da0b31f0b95d91ce356b726429b57d3929c4aa04974e,"Join Predicate [ B.dog_id = T.dog_id ] Output [ T.date_of_treatment , B.name ]
  In: Scan Table [ Treatments ] Output [ date_of_treatment , dog_id ]
  In: Join Predicate [ B.breed_code = T.breed_code ] Output [ T.dog_id , T.name ]
    In: Scan Table [ Dogs ] Output [ breed_code , dog_id , name ]
    In: TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ breed_code , Count_Star ]
      In: Aggregate GroupBy [ breed_code ] Output [ countstar AS Count_Star , breed_code ]
        In: Scan Table [ Dogs ] Output [ breed_code ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.dog_id = #6.dog_id ]"", ""output"": ""#6.date_of_treatment , #5.name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.breed_code = #4.breed_code ]"", ""output"": ""#4.dog_id , #4.name"", ""children"": [{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""breed_code , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ breed_code ]"", ""output"": ""countstar AS Count_Star , breed_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""breed_code""}]}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""breed_code , dog_id , name""}]}, {""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""date_of_treatment , dog_id""}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: breed_code
        table: Dogs
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , breed_code
      predicate: GroupBy [ breed_code ]
    id: '#3'
    operation: TopSort
    output: breed_code , Count_Star
    predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
  - id: '#4'
    operation: Scan Table
    output: breed_code , dog_id , name
    table: Dogs
  id: '#5'
  operation: Join
  output: '#4.dog_id , #4.name'
  predicate: 'Predicate [ #3.breed_code = #4.breed_code ]'
- id: '#6'
  operation: Scan Table
  output: date_of_treatment , dog_id
  table: Treatments
id: '#7'
operation: Join
output: '#6.date_of_treatment , #5.name'
predicate: 'Predicate [ #5.dog_id = #6.dog_id ]'
"
55985502904668903fc70726bab09acf27f4a63cb38da420aac63d72edfcc8ac,"Join Predicate [ B.dog_id = T.dog_id ] Output [ T.date_of_treatment , B.name ]
  In: Scan Table [ Treatments ] Output [ date_of_treatment , dog_id ]
  In: Join Predicate [ B.breed_code = T.breed_code ] Output [ T.dog_id , T.name ]
    In: Scan Table [ Dogs ] Output [ breed_code , dog_id , name ]
    In: TopSort Rows [ 1 ] OrderBy [ Count_Star ASC ] Output [ breed_code , Count_Star ]
      In: Aggregate GroupBy [ breed_code ] Output [ countstar AS Count_Star , breed_code ]
        In: Scan Table [ Dogs ] Output [ breed_code ]","{""id"": ""#7"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #5.dog_id = #6.dog_id ]"", ""output"": ""#6.date_of_treatment , #5.name"", ""children"": [{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.breed_code = #4.breed_code ]"", ""output"": ""#4.dog_id , #4.name"", ""children"": [{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star ASC ]"", ""output"": ""breed_code , Count_Star"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ breed_code ]"", ""output"": ""countstar AS Count_Star , breed_code"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""breed_code""}]}]}, {""id"": ""#4"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""breed_code , dog_id , name""}]}, {""id"": ""#6"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""date_of_treatment , dog_id""}]}","children:
- children:
  - children:
    - children:
      - id: '#1'
        operation: Scan Table
        output: breed_code
        table: Dogs
      id: '#2'
      operation: Aggregate
      output: countstar AS Count_Star , breed_code
      predicate: GroupBy [ breed_code ]
    id: '#3'
    operation: TopSort
    output: breed_code , Count_Star
    predicate: Rows [ 1 ] OrderBy [ Count_Star ASC ]
  - id: '#4'
    operation: Scan Table
    output: breed_code , dog_id , name
    table: Dogs
  id: '#5'
  operation: Join
  output: '#4.dog_id , #4.name'
  predicate: 'Predicate [ #3.breed_code = #4.breed_code ]'
- id: '#6'
  operation: Scan Table
  output: date_of_treatment , dog_id
  table: Treatments
id: '#7'
operation: Join
output: '#6.date_of_treatment , #5.name'
predicate: 'Predicate [ #5.dog_id = #6.dog_id ]'
"
01d36d186ac9bd072310196a084016e2239ab53dc2afc337552b1b90e333e482,"Join Predicate [ B.owner_id = T.owner_id ] Output [ B.first_name , T.name ]
  In: Scan Table [ Dogs ] Output [ owner_id , name ]
  In: Scan Table [ Owners ] Predicate [ state = 'Virginia' ] Output [ state , first_name , owner_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""#1.first_name , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""predicate"": ""Predicate [ state = 'Virginia' ]"", ""output"": ""state , first_name , owner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: state , first_name , owner_id
  predicate: Predicate [ state = 'Virginia' ]
  table: Owners
- id: '#2'
  operation: Scan Table
  output: owner_id , name
  table: Dogs
id: '#3'
operation: Join
output: '#1.first_name , #2.name'
predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
"
3def30b1ac991f058d5d2835e68edd88f98f0b397ec317e4db5c6ad6cacb91fb,"Join Predicate [ B.owner_id = T.owner_id ] Output [ B.first_name , T.name ]
  In: Scan Table [ Dogs ] Output [ owner_id , name ]
  In: Scan Table [ Owners ] Predicate [ state = 'Virginia' ] Output [ state , first_name , owner_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""#1.first_name , #2.name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""predicate"": ""Predicate [ state = 'Virginia' ]"", ""output"": ""state , first_name , owner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: state , first_name , owner_id
  predicate: Predicate [ state = 'Virginia' ]
  table: Owners
- id: '#2'
  operation: Scan Table
  output: owner_id , name
  table: Dogs
id: '#3'
operation: Join
output: '#1.first_name , #2.name'
predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
"
96ecc85b71033293fa2c714428724abb820b7d37ef95d0c06006e19e54d286a8,"Join Predicate [ B.dog_id = T.dog_id ] Distinct [ true ] Output [ T.date_departed , T.date_arrived ]
  In: Scan Table [ Dogs ] Output [ date_arrived , date_departed , dog_id ]
  In: Scan Table [ Treatments ] Output [ dog_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.dog_id = #2.dog_id ] Distinct [ true ]"", ""output"": ""#2.date_departed , #2.date_arrived"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""date_arrived , date_departed , dog_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: dog_id
  table: Treatments
- id: '#2'
  operation: Scan Table
  output: date_arrived , date_departed , dog_id
  table: Dogs
id: '#3'
operation: Join
output: '#2.date_departed , #2.date_arrived'
predicate: 'Predicate [ #1.dog_id = #2.dog_id ] Distinct [ true ]'
"
52e8fb837195616b49756027ccc6ca0ce0a8345e015fb0650c436258d6d84414,"Join Predicate [ B.dog_id = T.dog_id ] Distinct [ true ] Output [ T.date_departed , T.date_arrived ]
  In: Scan Table [ Dogs ] Output [ date_arrived , date_departed , dog_id ]
  In: Scan Table [ Treatments ] Output [ dog_id ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.dog_id = #2.dog_id ] Distinct [ true ]"", ""output"": ""#2.date_departed , #2.date_arrived"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""date_arrived , date_departed , dog_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: dog_id
  table: Treatments
- id: '#2'
  operation: Scan Table
  output: date_arrived , date_departed , dog_id
  table: Dogs
id: '#3'
operation: Join
output: '#2.date_departed , #2.date_arrived'
predicate: 'Predicate [ #1.dog_id = #2.dog_id ] Distinct [ true ]'
"
cb384f0755ee64aadab7999c2dfdc55442be5549699fa4be5be6b2bc0a111457,"Join Predicate [ T.owner_id = B.owner_id ] Output [ B.last_name ]
  In: TopSort Rows [ 1 ] OrderBy [ age DESC ] WithTies [ True ] Output [ age, owner_id ]
    In: Filter Predicate [ age IS NOT NULL ] Output [ owner_id , age ]
      In: Scan Table [ dogs ] Output [ owner_id , age ]
  In: Scan Table [ owners ] Output [ owner_id , last_name ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.owner_id = #1.owner_id ]"", ""output"": ""#1.last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""owners"", ""output"": ""owner_id , last_name""}, {""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ age DESC ] WithTies [ True ]"", ""output"": ""age, owner_id"", ""children"": [{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ age IS NOT NULL ]"", ""output"": ""owner_id , age"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""dogs"", ""output"": ""owner_id , age""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: owner_id , last_name
  table: owners
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: owner_id , age
      table: dogs
    id: '#3'
    operation: Filter
    output: owner_id , age
    predicate: Predicate [ age IS NOT NULL ]
  id: '#4'
  operation: TopSort
  output: age, owner_id
  predicate: Rows [ 1 ] OrderBy [ age DESC ] WithTies [ True ]
id: '#5'
operation: Join
output: '#1.last_name'
predicate: 'Predicate [ #4.owner_id = #1.owner_id ]'
"
bb647a855ae3fa4248d333184af9d583778c8243f925a40ea45b59085a0376b2,"Join Predicate [ T.owner_id = B.owner_id ] Output [ B.last_name ]
  In: TopSort Rows [ 1 ] OrderBy [ age DESC ] WithTies [ true ] Output [ owner_id ]
    In: Filter Predicate [ age IS NOT NULL ] Output [ owner_id , age ]
      In: Scan Table [ Dogs ] Output [ owner_id , age ]
  In: Scan Table [ Owners ] Output [ owner_id , last_name ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #4.owner_id = #1.owner_id ]"", ""output"": ""#1.last_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""owner_id , last_name""}, {""id"": ""#4"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ age DESC ] WithTies [ true ]"", ""output"": ""owner_id"", ""children"": [{""id"": ""#3"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ age IS NOT NULL ]"", ""output"": ""owner_id , age"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id , age""}]}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: owner_id , last_name
  table: Owners
- children:
  - children:
    - id: '#2'
      operation: Scan Table
      output: owner_id , age
      table: Dogs
    id: '#3'
    operation: Filter
    output: owner_id , age
    predicate: Predicate [ age IS NOT NULL ]
  id: '#4'
  operation: TopSort
  output: owner_id
  predicate: Rows [ 1 ] OrderBy [ age DESC ] WithTies [ true ]
id: '#5'
operation: Join
output: '#1.last_name'
predicate: 'Predicate [ #4.owner_id = #1.owner_id ]'
"
92e6a8f3680fa91a51338547b40a58e01a2044a47b181bc2301d2f71ed3a9817,"Scan Table [ Professionals ] Predicate [ state = 'Hawaii' OR state = 'Wisconsin' ] Output [ state , email_address ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""predicate"": ""Predicate [ state = 'Hawaii' OR state = 'Wisconsin' ]"", ""output"": ""state , email_address""}","id: '#1'
operation: Scan Table
output: state , email_address
predicate: Predicate [ state = 'Hawaii' OR state = 'Wisconsin' ]
table: Professionals
"
2cf656ceb1eb210f1f81d421ee219bde550d715a32a6c7677ff2fa5526174d2f,"Scan Table [ Professionals ] Predicate [ state = 'Hawaii' OR state = 'Wisconsin' ] Output [ state , email_address ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""predicate"": ""Predicate [ state = 'Hawaii' OR state = 'Wisconsin' ]"", ""output"": ""state , email_address""}","id: '#1'
operation: Scan Table
output: state , email_address
predicate: Predicate [ state = 'Hawaii' OR state = 'Wisconsin' ]
table: Professionals
"
73901c0e2644fd7bcca864ab987842eae3371572f3f1c7c7323bba227247e5a3,"Scan Table [ Dogs ] Output [ date_arrived , date_departed ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""date_arrived , date_departed""}","id: '#1'
operation: Scan Table
output: date_arrived , date_departed
table: Dogs
"
179ac3c6aa019713305f70d101ac1fc9a2c0fb2b8dafbb0ee2a5290079d80fc0,"Scan Table [ Dogs ] Output [ date_arrived , date_departed ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""date_arrived , date_departed""}","id: '#1'
operation: Scan Table
output: date_arrived , date_departed
table: Dogs
"
64fc77b18d68161ef02cddfa0391c902fd60785ca67c788616dce5eff2d8ec7c,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Treatments ] Distinct [ true ] Output [ dog_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""predicate"": ""Distinct [ true ]"", ""output"": ""dog_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: dog_id
  predicate: Distinct [ true ]
  table: Treatments
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
fe44aae95327f765fe37a47604e56e4242c7f5a1ebc738c17d59cda92f4e9cc5,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Treatments ] Distinct [ true ] Output [ dog_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""predicate"": ""Distinct [ true ]"", ""output"": ""dog_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: dog_id
  predicate: Distinct [ true ]
  table: Treatments
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
cdc8145fd792a6edaffb1bd812a01f52de104c77fbc0a642f538ef1ea0887887,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Treatments ] Distinct [ true ] Output [ professional_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""predicate"": ""Distinct [ true ]"", ""output"": ""professional_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: professional_id
  predicate: Distinct [ true ]
  table: Treatments
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
064cdc0cdd3190421bd5ff7a37e51119776ea589c73a6415f867acf56fce848d,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Treatments ] Distinct [ true ] Output [ professional_id ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""predicate"": ""Distinct [ true ]"", ""output"": ""professional_id""}]}","children:
- id: '#1'
  operation: Scan Table
  output: professional_id
  predicate: Distinct [ true ]
  table: Treatments
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
5c621a2c9379a00f609d9e0aa243a240affd345c59eac074076072a0019e1f3e,"Scan Table [ Professionals ] Predicate [ city like '%West%' ] Output [ state , city , role_code , street ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""predicate"": ""Predicate [ city like '%West%' ]"", ""output"": ""state , city , role_code , street""}","id: '#1'
operation: Scan Table
output: state , city , role_code , street
predicate: Predicate [ city like '%West%' ]
table: Professionals
"
967c3c6ebe4369045d9dde46ef6cc5d3dad46a05783e44a3d183ee2c1b3b1d59,"Scan Table [ Professionals ] Predicate [ city like '%West%' ] Output [ state , city , role_code , street ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""predicate"": ""Predicate [ city like '%West%' ]"", ""output"": ""state , city , role_code , street""}","id: '#1'
operation: Scan Table
output: state , city , role_code , street
predicate: Predicate [ city like '%West%' ]
table: Professionals
"
dfeb5c39fcfaa04fbe29e401a052a5057e480adbb6384afdcf777c02c5a13a38,"Scan Table [ Owners ] Predicate [ state like '%North%' ] Output [ first_name , last_name , state , email_address ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""predicate"": ""Predicate [ state like '%North%' ]"", ""output"": ""first_name , last_name , state , email_address""}","id: '#1'
operation: Scan Table
output: first_name , last_name , state , email_address
predicate: Predicate [ state like '%North%' ]
table: Owners
"
02ee31443afa5b62019b5b08c0de715d262a4191a0e90dd4451a9d5d1a293efc,"Scan Table [ Owners ] Predicate [ state like '%North%' ] Output [ first_name , last_name , state , email_address ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""predicate"": ""Predicate [ state like '%North%' ]"", ""output"": ""first_name , last_name , state , email_address""}","id: '#1'
operation: Scan Table
output: first_name , last_name , state , email_address
predicate: Predicate [ state like '%North%' ]
table: Owners
"
5e6dcd4f1c2e3953b79fdcda1cbd89c2bb9db999951cce84429b3be188edd3ba,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ T.age < B.Avg_age ] Output [ 1 AS One ]
    In: Scan Table [ Dogs ] Output [ age ]
    In: Aggregate Output [ AVG(age) AS Avg_age ]
      In: Scan Table [ Dogs ] Output [ age ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.age < #2.Avg_age ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(age) AS Avg_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: age
      table: Dogs
    id: '#2'
    operation: Aggregate
    output: AVG(age) AS Avg_age
  - id: '#3'
    operation: Scan Table
    output: age
    table: Dogs
  id: '#4'
  operation: Join
  output: 1 AS One
  predicate: 'Predicate [ #3.age < #2.Avg_age ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
d99c040d6524f2a05b4ba4f4ffe1aebca0489bba1ed41e3d2f14264a23dcaab2,"Aggregate Output [ countstar AS Count_Star ]
  In: Join Predicate [ T.age < B.Avg_age ] Output [ 1 AS One ]
    In: Scan Table [ Dogs ] Output [ age ]
    In: Aggregate Output [ AVG(age) AS Avg_age ]
      In: Scan Table [ Dogs ] Output [ age ]","{""id"": ""#5"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #3.age < #2.Avg_age ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(age) AS Avg_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: age
      table: Dogs
    id: '#2'
    operation: Aggregate
    output: AVG(age) AS Avg_age
  - id: '#3'
    operation: Scan Table
    output: age
    table: Dogs
  id: '#4'
  operation: Join
  output: 1 AS One
  predicate: 'Predicate [ #3.age < #2.Avg_age ]'
id: '#5'
operation: Aggregate
output: countstar AS Count_Star
"
433878795dbaeb06e20ccdf8f7b8f57b4490fc5649d2e72bce7e7585deacbf03,"TopSort Rows [ 1 ] OrderBy [ date_of_treatment DESC ] Output [ date_of_treatment , cost_of_treatment ]
  In: Scan Table [ Treatments ] Output [ date_of_treatment , cost_of_treatment ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ date_of_treatment DESC ]"", ""output"": ""date_of_treatment , cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""date_of_treatment , cost_of_treatment""}]}","children:
- id: '#1'
  operation: Scan Table
  output: date_of_treatment , cost_of_treatment
  table: Treatments
id: '#2'
operation: TopSort
output: date_of_treatment , cost_of_treatment
predicate: Rows [ 1 ] OrderBy [ date_of_treatment DESC ]
"
261b8f31c3472cd304eb89de390eab8847db8e7264ae2f27808562dbb6c75d24,"TopSort Rows [ 1 ] OrderBy [ date_of_treatment DESC ] Output [ date_of_treatment , cost_of_treatment ]
  In: Scan Table [ Treatments ] Output [ date_of_treatment , cost_of_treatment ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ date_of_treatment DESC ]"", ""output"": ""date_of_treatment , cost_of_treatment"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""date_of_treatment , cost_of_treatment""}]}","children:
- id: '#1'
  operation: Scan Table
  output: date_of_treatment , cost_of_treatment
  table: Treatments
id: '#2'
operation: TopSort
output: date_of_treatment , cost_of_treatment
predicate: Rows [ 1 ] OrderBy [ date_of_treatment DESC ]
"
78dcba3c4a0a01a2b294e2d6c29257905932d8253d58e95ad5b2a863957910ae,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ B.dog_id = T.dog_id ] Output [ 1 AS One ]
    In: Scan Table [ Treatments ] Output [ dog_id ]
    In: Scan Table [ Dogs ] Output [ dog_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.dog_id = #2.dog_id ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""dog_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: dog_id
    table: Dogs
  - id: '#2'
    operation: Scan Table
    output: dog_id
    table: Treatments
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #1.dog_id = #2.dog_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
2a8ea35ad7f723889d27b267bef72d3992a72b5dba5bd3d7c127682db1db41aa,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ B.dog_id = T.dog_id ] Output [ 1 AS One ]
    In: Scan Table [ Treatments ] Output [ dog_id ]
    In: Scan Table [ Dogs ] Output [ dog_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.dog_id = #2.dog_id ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""dog_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""dog_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: dog_id
    table: Dogs
  - id: '#2'
    operation: Scan Table
    output: dog_id
    table: Treatments
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #1.dog_id = #2.dog_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
c77304be5a473c9034ca40868437e0b9f90523b4106fb5e2fa4db8724e5109b5,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ B.owner_id = T.owner_id ] Output [ 1 AS One ]
    In: Scan Table [ Dogs ] Output [ owner_id ]
    In: Scan Table [ Owners ] Output [ owner_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""owner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: owner_id
    table: Owners
  - id: '#2'
    operation: Scan Table
    output: owner_id
    table: Dogs
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
767f67bdff974cd007a4ef44b18713af81def3a6d3999f59653e9508ab25c234,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ B.owner_id = T.owner_id ] Output [ 1 AS One ]
    In: Scan Table [ Dogs ] Output [ owner_id ]
    In: Scan Table [ Owners ] Output [ owner_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.owner_id = #2.owner_id ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Owners"", ""output"": ""owner_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""owner_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: owner_id
    table: Owners
  - id: '#2'
    operation: Scan Table
    output: owner_id
    table: Dogs
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #1.owner_id = #2.owner_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
6606a29dd2b7f2d93ea8e171a867970cf5da5496ddb77658dc04d73678da4f44,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ B.professional_id = T.professional_id ] Output [ 1 AS One ]
    In: Scan Table [ Treatments ] Output [ professional_id ]
    In: Scan Table [ Professionals ] Output [ professional_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.professional_id = #2.professional_id ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""professional_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: professional_id
    table: Professionals
  - id: '#2'
    operation: Scan Table
    output: professional_id
    table: Treatments
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #1.professional_id = #2.professional_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
ea3eaa087a14e4f6fc7c7c334cff9088ec99f3d6c4c5e9da66d1ce24146ede11,"Aggregate Output [ countstar AS Count_Star ]
  In: Except Predicate [ B.professional_id = T.professional_id ] Output [ 1 AS One ]
    In: Scan Table [ Treatments ] Output [ professional_id ]
    In: Scan Table [ Professionals ] Output [ professional_id ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #1.professional_id = #2.professional_id ]"", ""output"": ""1 AS One"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""professional_id""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""professional_id""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: professional_id
    table: Professionals
  - id: '#2'
    operation: Scan Table
    output: professional_id
    table: Treatments
  id: '#3'
  operation: Except
  output: 1 AS One
  predicate: 'Predicate [ #1.professional_id = #2.professional_id ]'
id: '#4'
operation: Aggregate
output: countstar AS Count_Star
"
11757dbf072cf94f23cb22210fb8ca4455a8343fc40e151645d31758e9de045d,"Scan Table [ Dogs ] Predicate [ abandoned_yn = 1 ] Output [ abandoned_yn , weight , age , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""predicate"": ""Predicate [ abandoned_yn = 1 ]"", ""output"": ""abandoned_yn , weight , age , name""}","id: '#1'
operation: Scan Table
output: abandoned_yn , weight , age , name
predicate: Predicate [ abandoned_yn = 1 ]
table: Dogs
"
32ff77c2b84d8fdfca0153500392286944ab8a6286191e53738a1bbf35ae9632,"Scan Table [ Dogs ] Predicate [ abandoned_yn = 1 ] Output [ abandoned_yn , weight , age , name ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""predicate"": ""Predicate [ abandoned_yn = 1 ]"", ""output"": ""abandoned_yn , weight , age , name""}","id: '#1'
operation: Scan Table
output: abandoned_yn , weight , age , name
predicate: Predicate [ abandoned_yn = 1 ]
table: Dogs
"
b5a4050650d175c17ca4a9ec4d0c3a55e0950b773d6cd0d07c3d7f1204ea44e5,"Aggregate Output [ AVG(age) AS Avg_age ]
  In: Scan Table [ Dogs ] Output [ age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(age) AS Avg_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: age
  table: Dogs
id: '#2'
operation: Aggregate
output: AVG(age) AS Avg_age
"
753b0e7cd97e2a2870fcc6afa6c4512421986fad6e8ffc72c01b48e16e203d9d,"Aggregate Output [ AVG(age) AS Avg_age ]
  In: Scan Table [ Dogs ] Output [ age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""AVG(age) AS Avg_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: age
  table: Dogs
id: '#2'
operation: Aggregate
output: AVG(age) AS Avg_age
"
508534bf0da2fdfac341224de99be1122d48ac8789e1c28ff1cb466571264236,"Aggregate Output [ MAX(age) AS Max_age ]
  In: Scan Table [ Dogs ] Output [ age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(age) AS Max_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: age
  table: Dogs
id: '#2'
operation: Aggregate
output: MAX(age) AS Max_age
"
0fafa609fb687bd11e39aafb14e0ffb70a27929a9b591f3c196cc875ede3ebf9,"Aggregate Output [ MAX(age) AS Max_age ]
  In: Scan Table [ Dogs ] Output [ age ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(age) AS Max_age"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""output"": ""age""}]}","children:
- id: '#1'
  operation: Scan Table
  output: age
  table: Dogs
id: '#2'
operation: Aggregate
output: MAX(age) AS Max_age
"
71de702627518d63a910bbd9bb7f366eddb8c5bd2464b78e4637839084874c71,"Scan Table [ Charges ] Output [ charge_amount , charge_type ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Charges"", ""output"": ""charge_amount , charge_type""}","id: '#1'
operation: Scan Table
output: charge_amount , charge_type
table: Charges
"
5f2da74090ff46835a02f0b81d6fba00e4efcc8ddf7d14a503595b0354bdb3b6,"Scan Table [ Charges ] Output [ charge_amount , charge_type ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Charges"", ""output"": ""charge_amount , charge_type""}","id: '#1'
operation: Scan Table
output: charge_amount , charge_type
table: Charges
"
0b041ebce208085bea5e35531b4a6cdbde7156f9c58a9b2bd26415a0ebd102b1,"Aggregate Output [ MAX(charge_amount) AS Max_charge_amount ]
  In: Scan Table [ Charges ] Output [ charge_amount ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(charge_amount) AS Max_charge_amount"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Charges"", ""output"": ""charge_amount""}]}","children:
- id: '#1'
  operation: Scan Table
  output: charge_amount
  table: Charges
id: '#2'
operation: Aggregate
output: MAX(charge_amount) AS Max_charge_amount
"
fc656750ad557e7b823554bc96113a1f7f9ecc12fbb70e851c875598e29ecd85,"Aggregate Output [ MAX(charge_amount) AS Max_charge_amount ]
  In: Scan Table [ Charges ] Output [ charge_amount ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""MAX(charge_amount) AS Max_charge_amount"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Charges"", ""output"": ""charge_amount""}]}","children:
- id: '#1'
  operation: Scan Table
  output: charge_amount
  table: Charges
id: '#2'
operation: Aggregate
output: MAX(charge_amount) AS Max_charge_amount
"
09c9bbb573dcab0c927cbe7d112f91c8834c15a2eb31f230e5f325df5793bdf6,"Scan Table [ Professionals ] Output [ cell_number , home_phone , email_address ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""cell_number , home_phone , email_address""}","id: '#1'
operation: Scan Table
output: cell_number , home_phone , email_address
table: Professionals
"
e2aacdecf6d3b52d1802827572ef278aa2c5f3d76b5c6d26fcae103c47a8f0f2,"Scan Table [ Professionals ] Output [ cell_number , home_phone , email_address ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""cell_number , home_phone , email_address""}","id: '#1'
operation: Scan Table
output: cell_number , home_phone , email_address
table: Professionals
"
4b2ac205277d7c5884472a73b7c2e9091542447d1c927af072dc0edc0bac2b1e,"Scan Table [ Dogs ] Distinct [ true ] Output [ breed_code , size_code ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""predicate"": ""Distinct [ true ]"", ""output"": ""breed_code , size_code""}","id: '#1'
operation: Scan Table
output: breed_code , size_code
predicate: Distinct [ true ]
table: Dogs
"
4776864cae0889340c0a3b3d4cf577b53714a560aac3a5e0b584b2fad0fede8f,"Scan Table [ Dogs ] Distinct [ true ] Output [ breed_code , size_code ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Dogs"", ""predicate"": ""Distinct [ true ]"", ""output"": ""breed_code , size_code""}","id: '#1'
operation: Scan Table
output: breed_code , size_code
predicate: Distinct [ true ]
table: Dogs
"
9468ef5d219c1fc8111244fca69f0d535063a6e7bc3bb6219ce500e89256e5d0,"Join Predicate [ B.treatment_type_code = T.treatment_type_code ] Distinct [ true ] Output [ B.treatment_type_description , T.first_name ]
  In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.first_name , B.treatment_type_code ]
    In: Scan Table [ Professionals ] Output [ first_name , professional_id ]
    In: Scan Table [ Treatments ] Output [ treatment_type_code , professional_id ]
  In: Scan Table [ Treatment_Types ] Output [ treatment_type_code , treatment_type_description ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.treatment_type_code = #4.treatment_type_code ] Distinct [ true ]"", ""output"": ""#1.treatment_type_description , #4.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatment_Types"", ""output"": ""treatment_type_code , treatment_type_description""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.first_name , #2.treatment_type_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""treatment_type_code , professional_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , professional_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: treatment_type_code , treatment_type_description
  table: Treatment_Types
- children:
  - id: '#2'
    operation: Scan Table
    output: treatment_type_code , professional_id
    table: Treatments
  - id: '#3'
    operation: Scan Table
    output: first_name , professional_id
    table: Professionals
  id: '#4'
  operation: Join
  output: '#3.first_name , #2.treatment_type_code'
  predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
id: '#5'
operation: Join
output: '#1.treatment_type_description , #4.first_name'
predicate: 'Predicate [ #1.treatment_type_code = #4.treatment_type_code ] Distinct
  [ true ]'
"
af31c2dbac0d1ab65d2339c0d55235dc257c160e670af45309e001bba3098cdd,"Join Predicate [ B.treatment_type_code = T.treatment_type_code ] Distinct [ true ] Output [ B.treatment_type_description , T.first_name ]
  In: Join Predicate [ B.professional_id = T.professional_id ] Output [ T.first_name , B.treatment_type_code ]
    In: Scan Table [ Professionals ] Output [ first_name , professional_id ]
    In: Scan Table [ Treatments ] Output [ treatment_type_code , professional_id ]
  In: Scan Table [ Treatment_Types ] Output [ treatment_type_code , treatment_type_description ]","{""id"": ""#5"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.treatment_type_code = #4.treatment_type_code ] Distinct [ true ]"", ""output"": ""#1.treatment_type_description , #4.first_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Treatment_Types"", ""output"": ""treatment_type_code , treatment_type_description""}, {""id"": ""#4"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #2.professional_id = #3.professional_id ]"", ""output"": ""#3.first_name , #2.treatment_type_code"", ""children"": [{""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Treatments"", ""output"": ""treatment_type_code , professional_id""}, {""id"": ""#3"", ""operation"": ""Scan Table"", ""table"": ""Professionals"", ""output"": ""first_name , professional_id""}]}]}","children:
- id: '#1'
  operation: Scan Table
  output: treatment_type_code , treatment_type_description
  table: Treatment_Types
- children:
  - id: '#2'
    operation: Scan Table
    output: treatment_type_code , professional_id
    table: Treatments
  - id: '#3'
    operation: Scan Table
    output: first_name , professional_id
    table: Professionals
  id: '#4'
  operation: Join
  output: '#3.first_name , #2.treatment_type_code'
  predicate: 'Predicate [ #2.professional_id = #3.professional_id ]'
id: '#5'
operation: Join
output: '#1.treatment_type_description , #4.first_name'
predicate: 'Predicate [ #1.treatment_type_code = #4.treatment_type_code ] Distinct
  [ true ]'
"
8c12cf9b50cade1629258a9e8344630d0a188e5a5d2f19b038075767850b934f,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ singer ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
804c8e18ba30e708d50724b2884ec025fcc5e03cf2f010b2e756c50555cf7bb3,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ singer ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
b9ea969d4c1a883ed38c19942e7eb9b608a8f06861c97fdde9839c049fa21c88,"Sort OrderBy [ Net_Worth_Millions ASC ] Output [ Name , Net_Worth_Millions ]
  In: Scan Table [ singer ] Output [ Name , Net_Worth_Millions ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Net_Worth_Millions ASC ]"", ""output"": ""Name , Net_Worth_Millions"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Name , Net_Worth_Millions""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Net_Worth_Millions
  table: singer
id: '#2'
operation: Sort
output: Name , Net_Worth_Millions
predicate: OrderBy [ Net_Worth_Millions ASC ]
"
011a772567169c804c61ebdecf6dcc9f19f77788577f9b41c55d6f917bd638fc,"Sort OrderBy [ Net_Worth_Millions ASC ] Output [ Name , Net_Worth_Millions ]
  In: Scan Table [ singer ] Output [ Name , Net_Worth_Millions ]","{""id"": ""#2"", ""operation"": ""Sort"", ""predicate"": ""OrderBy [ Net_Worth_Millions ASC ]"", ""output"": ""Name , Net_Worth_Millions"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Name , Net_Worth_Millions""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Net_Worth_Millions
  table: singer
id: '#2'
operation: Sort
output: Name , Net_Worth_Millions
predicate: OrderBy [ Net_Worth_Millions ASC ]
"
c9a7efa3930c9f7e3a10444caceb7e50835b86408bdd65b9a89aebbd3db71302,"Scan Table [ singer ] Output [ Birth_Year , Citizenship ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Birth_Year , Citizenship""}","id: '#1'
operation: Scan Table
output: Birth_Year , Citizenship
table: singer
"
b949490e009a7f50dfe5876c63c8f31a252c1e327bee7cf800057e949a391ee3,"Scan Table [ singer ] Output [ Birth_Year , Citizenship ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Birth_Year , Citizenship""}","id: '#1'
operation: Scan Table
output: Birth_Year , Citizenship
table: singer
"
8c8870ec05f32246c5b7955c28f5c81d57e9115f47091d631a393c7bd79a4581,"Scan Table [ singer ] Predicate [ Citizenship <> 'France' ] Output [ Name , Citizenship ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Citizenship <> 'France' ]"", ""output"": ""Name , Citizenship""}","id: '#1'
operation: Scan Table
output: Name , Citizenship
predicate: Predicate [ Citizenship <> 'France' ]
table: singer
"
550e5e82df704280579aec36cce4557a6a0a38b91cf057b63a589c368210022a,"Scan Table [ singer ] Predicate [ Citizenship <> 'France' ] Output [ Name , Citizenship ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Citizenship <> 'France' ]"", ""output"": ""Name , Citizenship""}","id: '#1'
operation: Scan Table
output: Name , Citizenship
predicate: Predicate [ Citizenship <> 'France' ]
table: singer
"
d98f8fe8157483e3c7d8cfc11da276a7efd8100150eb4e6e7170ed40aa5b1e4f,"Scan Table [ singer ] Predicate [ Birth_Year = 1948.0 OR Birth_Year = 1949.0 ] Output [ Name , Birth_Year ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Birth_Year = 1948.0 OR Birth_Year = 1949.0 ]"", ""output"": ""Name , Birth_Year""}","id: '#1'
operation: Scan Table
output: Name , Birth_Year
predicate: Predicate [ Birth_Year = 1948.0 OR Birth_Year = 1949.0 ]
table: singer
"
5b29113c5ab990f62b686fbdc871914d99e8e268ea27a89a31141d06be57b7a9,"Scan Table [ singer ] Predicate [ Birth_Year = 1948.0 OR Birth_Year = 1949.0 ] Output [ Name , Birth_Year ]","{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Birth_Year = 1948.0 OR Birth_Year = 1949.0 ]"", ""output"": ""Name , Birth_Year""}","id: '#1'
operation: Scan Table
output: Name , Birth_Year
predicate: Predicate [ Birth_Year = 1948.0 OR Birth_Year = 1949.0 ]
table: singer
"
58c46fcc34a7383d2e710c843d03f5bf99d9592aa7e497a33a507a2e6058fe5f,"TopSort Rows [ 1 ] OrderBy [ Net_Worth_Millions DESC ] Output [ Name , Net_Worth_Millions ]
  In: Scan Table [ singer ] Output [ Name , Net_Worth_Millions ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Net_Worth_Millions DESC ]"", ""output"": ""Name , Net_Worth_Millions"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Name , Net_Worth_Millions""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Net_Worth_Millions
  table: singer
id: '#2'
operation: TopSort
output: Name , Net_Worth_Millions
predicate: Rows [ 1 ] OrderBy [ Net_Worth_Millions DESC ]
"
73af14f9e8271c97b343c331de6a984ba197bd3ba69a66b4418187b22f316392,"TopSort Rows [ 1 ] OrderBy [ Net_Worth_Millions DESC ] Output [ Name , Net_Worth_Millions ]
  In: Scan Table [ singer ] Output [ Name , Net_Worth_Millions ]","{""id"": ""#2"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Net_Worth_Millions DESC ]"", ""output"": ""Name , Net_Worth_Millions"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Name , Net_Worth_Millions""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Name , Net_Worth_Millions
  table: singer
id: '#2'
operation: TopSort
output: Name , Net_Worth_Millions
predicate: Rows [ 1 ] OrderBy [ Net_Worth_Millions DESC ]
"
4f42fde37cbd059904929409566173c2576d719495a3d5923a4e396355823e91,"Aggregate GroupBy [ Citizenship ] Output [ countstar AS Count_Star , Citizenship ]
  In: Scan Table [ singer ] Output [ Citizenship ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Citizenship ]"", ""output"": ""countstar AS Count_Star , Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Citizenship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Citizenship
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Citizenship
predicate: GroupBy [ Citizenship ]
"
99d01cadde9a3a585cfb95149c86e586e956c4807f67adea88f25cac11d941cf,"Aggregate GroupBy [ Citizenship ] Output [ countstar AS Count_Star , Citizenship ]
  In: Scan Table [ singer ] Output [ Citizenship ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Citizenship ]"", ""output"": ""countstar AS Count_Star , Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Citizenship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Citizenship
  table: singer
id: '#2'
operation: Aggregate
output: countstar AS Count_Star , Citizenship
predicate: GroupBy [ Citizenship ]
"
87a3b0989ee1dc1513ab72ca2965ce5304ba36e5ef0d89b458a1814f7fbcdb6c,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Citizenship ]
  In: Aggregate GroupBy [ Citizenship ] Output [ countstar AS Count_Star , Citizenship ]
    In: Scan Table [ singer ] Output [ Citizenship ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Citizenship"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Citizenship ]"", ""output"": ""countstar AS Count_Star , Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Citizenship""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Citizenship
    table: singer
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Citizenship
  predicate: GroupBy [ Citizenship ]
id: '#3'
operation: TopSort
output: Count_Star , Citizenship
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
7c9e7a7be63f400ff33df576791e0fd53332a3d954a89aa0cb953b4eb70b1682,"TopSort Rows [ 1 ] OrderBy [ Count_Star DESC ] Output [ Count_Star , Citizenship ]
  In: Aggregate GroupBy [ Citizenship ] Output [ countstar AS Count_Star , Citizenship ]
    In: Scan Table [ singer ] Output [ Citizenship ]","{""id"": ""#3"", ""operation"": ""TopSort"", ""predicate"": ""Rows [ 1 ] OrderBy [ Count_Star DESC ]"", ""output"": ""Count_Star , Citizenship"", ""children"": [{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Citizenship ]"", ""output"": ""countstar AS Count_Star , Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Citizenship""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Citizenship
    table: singer
  id: '#2'
  operation: Aggregate
  output: countstar AS Count_Star , Citizenship
  predicate: GroupBy [ Citizenship ]
id: '#3'
operation: TopSort
output: Count_Star , Citizenship
predicate: Rows [ 1 ] OrderBy [ Count_Star DESC ]
"
9561b97b13a187930d20fc2c295e7c02162337366bbcd10dbbf6095d1bfd95ce,"Aggregate GroupBy [ Citizenship ] Output [ MAX(Net_Worth_Millions) AS Max_Net_Worth_Millions , Citizenship ]
  In: Scan Table [ singer ] Output [ Net_Worth_Millions , Citizenship ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Citizenship ]"", ""output"": ""MAX(Net_Worth_Millions) AS Max_Net_Worth_Millions , Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Net_Worth_Millions , Citizenship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Net_Worth_Millions , Citizenship
  table: singer
id: '#2'
operation: Aggregate
output: MAX(Net_Worth_Millions) AS Max_Net_Worth_Millions , Citizenship
predicate: GroupBy [ Citizenship ]
"
697dfd5ef5b2393132d9a7c62561764004455e1c985cc95ce70a0ccc10fa9cd6,"Aggregate GroupBy [ Citizenship ] Output [ MAX(Net_Worth_Millions) AS Max_Net_Worth_Millions , Citizenship ]
  In: Scan Table [ singer ] Output [ Net_Worth_Millions , Citizenship ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Citizenship ]"", ""output"": ""MAX(Net_Worth_Millions) AS Max_Net_Worth_Millions , Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Net_Worth_Millions , Citizenship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Net_Worth_Millions , Citizenship
  table: singer
id: '#2'
operation: Aggregate
output: MAX(Net_Worth_Millions) AS Max_Net_Worth_Millions , Citizenship
predicate: GroupBy [ Citizenship ]
"
e75d3a7f87b0a33d06fce6ca17196f4c588fc1be645276004b8fc026e5de12d8,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ B.Name , T.Title ]
  In: Scan Table [ song ] Output [ Singer_ID , Title ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#1.Name , #2.Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID , Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
- id: '#2'
  operation: Scan Table
  output: Singer_ID , Title
  table: song
id: '#3'
operation: Join
output: '#1.Name , #2.Title'
predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ]'
"
95b11b7b6da3a1a61a86398786d17ce1182a1250691e9475819940d233798069,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ B.Name , T.Title ]
  In: Scan Table [ song ] Output [ Singer_ID , Title ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#1.Name , #2.Title"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID , Title""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
- id: '#2'
  operation: Scan Table
  output: Singer_ID , Title
  table: song
id: '#3'
operation: Join
output: '#1.Name , #2.Title'
predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ]'
"
6526137048ae8dec7f67b1d156501fe03e65412e05ce2362239d91b62eb64ae3,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Distinct [ true ] Output [ T.Name ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]
  In: Scan Table [ song ] Predicate [ Sales > 300000.0 ] Output [ Singer_ID , Sales ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ] Distinct [ true ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""song"", ""predicate"": ""Predicate [ Sales > 300000.0 ]"", ""output"": ""Singer_ID , Sales""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Singer_ID , Sales
  predicate: Predicate [ Sales > 300000.0 ]
  table: song
- id: '#2'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ] Distinct [ true ]'
"
993f7da6bf9f3c08f1e566829f9baa9a8e5d5f1ec7f62cd1cc76d32e74fc924a,"Join Predicate [ B.Singer_ID = T.Singer_ID ] Distinct [ true ] Output [ T.Name ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]
  In: Scan Table [ song ] Predicate [ Sales > 300000.0 ] Output [ Singer_ID , Sales ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ] Distinct [ true ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""song"", ""predicate"": ""Predicate [ Sales > 300000.0 ]"", ""output"": ""Singer_ID , Sales""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Singer_ID , Sales
  predicate: Predicate [ Sales > 300000.0 ]
  table: song
- id: '#2'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
id: '#3'
operation: Join
output: '#2.Name'
predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ] Distinct [ true ]'
"
0185d5551797ce6214ec07f1a2a8d2791d103019f6b83bb6fe52fc6322a0807b,"Filter Predicate [ Count_Star > 1 ] Output [ Name ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ T.Name ]
      In: Scan Table [ singer ] Output [ Singer_ID , Name ]
      In: Scan Table [ song ] Output [ Singer_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Singer_ID
      table: song
    - id: '#2'
      operation: Scan Table
      output: Singer_ID , Name
      table: singer
    id: '#3'
    operation: Join
    output: '#2.Name'
    predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: Filter
output: Name
predicate: Predicate [ Count_Star > 1 ]
"
3b3211d0463e7b65bdc40f6c3989d1bfeb949e049510419df985111529653097,"Filter Predicate [ Count_Star > 1 ] Output [ Name ]
  In: Aggregate GroupBy [ Name ] Output [ Name , countstar AS Count_Star ]
    In: Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ T.Name ]
      In: Scan Table [ singer ] Output [ Singer_ID , Name ]
      In: Scan Table [ song ] Output [ Singer_ID ]","{""id"": ""#5"", ""operation"": ""Filter"", ""predicate"": ""Predicate [ Count_Star > 1 ]"", ""output"": ""Name"", ""children"": [{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , countstar AS Count_Star"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}]}]}","children:
- children:
  - children:
    - id: '#1'
      operation: Scan Table
      output: Singer_ID
      table: song
    - id: '#2'
      operation: Scan Table
      output: Singer_ID , Name
      table: singer
    id: '#3'
    operation: Join
    output: '#2.Name'
    predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ]'
  id: '#4'
  operation: Aggregate
  output: Name , countstar AS Count_Star
  predicate: GroupBy [ Name ]
id: '#5'
operation: Filter
output: Name
predicate: Predicate [ Count_Star > 1 ]
"
979d85d193f3882cf9f01bfff9c1151c9ab871fd99ba917b143d4970cf33cc05,"Aggregate GroupBy [ Name ] Output [ Name , SUM(Sales) AS Sum_Sales ]
  In: Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ B.Sales , T.Name ]
    In: Scan Table [ singer ] Output [ Singer_ID , Name ]
    In: Scan Table [ song ] Output [ Singer_ID , Sales ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , SUM(Sales) AS Sum_Sales"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#1.Sales , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID , Sales""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Singer_ID , Sales
    table: song
  - id: '#2'
    operation: Scan Table
    output: Singer_ID , Name
    table: singer
  id: '#3'
  operation: Join
  output: '#1.Sales , #2.Name'
  predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ]'
id: '#4'
operation: Aggregate
output: Name , SUM(Sales) AS Sum_Sales
predicate: GroupBy [ Name ]
"
8ddb7c07d3458e79a1b0ab40bec542aa9573847464da7037e2e78d99b362b74d,"Aggregate GroupBy [ Name ] Output [ Name , SUM(Sales) AS Sum_Sales ]
  In: Join Predicate [ B.Singer_ID = T.Singer_ID ] Output [ B.Sales , T.Name ]
    In: Scan Table [ singer ] Output [ Singer_ID , Name ]
    In: Scan Table [ song ] Output [ Singer_ID , Sales ]","{""id"": ""#4"", ""operation"": ""Aggregate"", ""predicate"": ""GroupBy [ Name ]"", ""output"": ""Name , SUM(Sales) AS Sum_Sales"", ""children"": [{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#1.Sales , #2.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID , Sales""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}]}]}","children:
- children:
  - id: '#1'
    operation: Scan Table
    output: Singer_ID , Sales
    table: song
  - id: '#2'
    operation: Scan Table
    output: Singer_ID , Name
    table: singer
  id: '#3'
  operation: Join
  output: '#1.Sales , #2.Name'
  predicate: 'Predicate [ #1.Singer_ID = #2.Singer_ID ]'
id: '#4'
operation: Aggregate
output: Name , SUM(Sales) AS Sum_Sales
predicate: GroupBy [ Name ]
"
1285a88105c026db53a8c6bc8a43ea895a25c3eef88da5796b307750abd1692f,"Except Predicate [ T.Singer_ID IS NULL OR B.Singer_ID = T.Singer_ID ] Output [ B.Name ]
  In: Scan Table [ song ] Output [ Singer_ID ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Singer_ID IS NULL OR #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
- id: '#2'
  operation: Scan Table
  output: Singer_ID
  table: song
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Singer_ID IS NULL OR #1.Singer_ID = #2.Singer_ID ]'
"
32e1d3180f2d4a1423db0aafca0f239d324b1efe137c80c4c83049c8a3525e55,"Except Predicate [ T.Singer_ID IS NULL OR B.Singer_ID = T.Singer_ID ] Output [ B.Name ]
  In: Scan Table [ song ] Output [ Singer_ID ]
  In: Scan Table [ singer ] Output [ Singer_ID , Name ]","{""id"": ""#3"", ""operation"": ""Except"", ""predicate"": ""Predicate [ #2.Singer_ID IS NULL OR #1.Singer_ID = #2.Singer_ID ]"", ""output"": ""#1.Name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""output"": ""Singer_ID , Name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""song"", ""output"": ""Singer_ID""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Singer_ID , Name
  table: singer
- id: '#2'
  operation: Scan Table
  output: Singer_ID
  table: song
id: '#3'
operation: Except
output: '#1.Name'
predicate: 'Predicate [ #2.Singer_ID IS NULL OR #1.Singer_ID = #2.Singer_ID ]'
"
28a57a5b75f7a8f40eec87da513ebdcad210610f006d483f39f4de5e4d14f7a7,"Intersect Predicate [ B.Citizenship = T.Citizenship ] Output [ B.Citizenship ]
  In: Scan Table [ singer ] Predicate [ Birth_Year > 1955.0 ] Output [ Birth_Year , Citizenship ]
  In: Scan Table [ singer ] Predicate [ Birth_Year < 1945.0 ] Distinct [ true ] Output [ Birth_Year , Citizenship ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Citizenship = #2.Citizenship ]"", ""output"": ""#1.Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Birth_Year < 1945.0 ] Distinct [ true ]"", ""output"": ""Birth_Year , Citizenship""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Birth_Year > 1955.0 ]"", ""output"": ""Birth_Year , Citizenship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Birth_Year , Citizenship
  predicate: Predicate [ Birth_Year < 1945.0 ] Distinct [ true ]
  table: singer
- id: '#2'
  operation: Scan Table
  output: Birth_Year , Citizenship
  predicate: Predicate [ Birth_Year > 1955.0 ]
  table: singer
id: '#3'
operation: Intersect
output: '#1.Citizenship'
predicate: 'Predicate [ #1.Citizenship = #2.Citizenship ]'
"
341f8b90b4223634d3f86dfbdbdb6e798b7ae3bffe8641e55dafa4f3b7536d88,"Intersect Predicate [ B.Citizenship = T.Citizenship ] Output [ B.Citizenship ]
  In: Scan Table [ singer ] Predicate [ Birth_Year > 1955.0 ] Output [ Birth_Year , Citizenship ]
  In: Scan Table [ singer ] Predicate [ Birth_Year < 1945.0 ] Distinct [ true ] Output [ Birth_Year , Citizenship ]","{""id"": ""#3"", ""operation"": ""Intersect"", ""predicate"": ""Predicate [ #1.Citizenship = #2.Citizenship ]"", ""output"": ""#1.Citizenship"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Birth_Year < 1945.0 ] Distinct [ true ]"", ""output"": ""Birth_Year , Citizenship""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""singer"", ""predicate"": ""Predicate [ Birth_Year > 1955.0 ]"", ""output"": ""Birth_Year , Citizenship""}]}","children:
- id: '#1'
  operation: Scan Table
  output: Birth_Year , Citizenship
  predicate: Predicate [ Birth_Year < 1945.0 ] Distinct [ true ]
  table: singer
- id: '#2'
  operation: Scan Table
  output: Birth_Year , Citizenship
  predicate: Predicate [ Birth_Year > 1955.0 ]
  table: singer
id: '#3'
operation: Intersect
output: '#1.Citizenship'
predicate: 'Predicate [ #1.Citizenship = #2.Citizenship ]'
"
b3221e9c112854ef99fba5d334b12427914fef6cde224429b25a501e64e6c4ae,"Aggregate Output [ countstar AS Count_Star ]
  In: Scan Table [ Other_Available_Features ] Output [ 1 AS One ]","{""id"": ""#2"", ""operation"": ""Aggregate"", ""output"": ""countstar AS Count_Star"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Other_Available_Features"", ""output"": ""1 AS One""}]}","children:
- id: '#1'
  operation: Scan Table
  output: 1 AS One
  table: Other_Available_Features
id: '#2'
operation: Aggregate
output: countstar AS Count_Star
"
2eae79665e670663f892b02b5ab203781851af06ec08b956ad48104a9ff70be6,"Join Predicate [ B.feature_type_code = T.feature_type_code ] Output [ T.feature_type_name ]
  In: Scan Table [ Ref_Feature_Types ] Output [ feature_type_code , feature_type_name ]
  In: Scan Table [ Other_Available_Features ] Predicate [ feature_name = 'AirCon' ] Output [ feature_type_code , feature_name ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.feature_type_code = #2.feature_type_code ]"", ""output"": ""#2.feature_type_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Other_Available_Features"", ""predicate"": ""Predicate [ feature_name = 'AirCon' ]"", ""output"": ""feature_type_code , feature_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Ref_Feature_Types"", ""output"": ""feature_type_code , feature_type_name""}]}","children:
- id: '#1'
  operation: Scan Table
  output: feature_type_code , feature_name
  predicate: Predicate [ feature_name = 'AirCon' ]
  table: Other_Available_Features
- id: '#2'
  operation: Scan Table
  output: feature_type_code , feature_type_name
  table: Ref_Feature_Types
id: '#3'
operation: Join
output: '#2.feature_type_name'
predicate: 'Predicate [ #1.feature_type_code = #2.feature_type_code ]'
"
767d8f34f1b268c7832d789fbb1f662604e9db7d49975fb7b642cb8ca235ce34,"Join Predicate [ B.property_type_code = T.property_type_code ] Output [ T.property_type_description ]
  In: Scan Table [ Ref_Property_Types ] Output [ property_type_code , property_type_description ]
  In: Scan Table [ Properties ] Distinct [ true ] Output [ property_type_code ]","{""id"": ""#3"", ""operation"": ""Join"", ""predicate"": ""Predicate [ #1.property_type_code = #2.property_type_code ]"", ""output"": ""#2.property_type_description"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Properties"", ""predicate"": ""Distinct [ true ]"", ""output"": ""property_type_code""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Ref_Property_Types"", ""output"": ""property_type_code , property_type_description""}]}","children:
- id: '#1'
  operation: Scan Table
  output: property_type_code
  predicate: Distinct [ true ]
  table: Properties
- id: '#2'
  operation: Scan Table
  output: property_type_code , property_type_description
  table: Ref_Property_Types
id: '#3'
operation: Join
output: '#2.property_type_description'
predicate: 'Predicate [ #1.property_type_code = #2.property_type_code ]'
"
226cd9a74a1b2e51610774012d114c254e10c37065ac9d0b0e0f451343dcc72e,"Union Output [ B.property_name ]
  In: Scan Table [ Properties ] Predicate [ room_count > 1 AND property_type_code = 'Apartment' ] Output [ property_type_code , property_name , room_count ]
  In: Scan Table [ Properties ] Predicate [ property_type_code = 'House' ] Output [ property_type_code , property_name ]","{""id"": ""#3"", ""operation"": ""Union"", ""output"": ""#1.property_name"", ""children"": [{""id"": ""#1"", ""operation"": ""Scan Table"", ""table"": ""Properties"", ""predicate"": ""Predicate [ property_type_code = 'House' ]"", ""output"": ""property_type_code , property_name""}, {""id"": ""#2"", ""operation"": ""Scan Table"", ""table"": ""Properties"", ""predicate"": ""Predicate [ room_count > 1 AND property_type_code = 'Apartment' ]"", ""output"": ""property_type_code , property_name , room_count""}]}","children:
- id: '#1'
  operation: Scan Table
  output: property_type_code , property_name
  predicate: Predicate [ property_type_code = 'House' ]
  table: Properties
- id: '#2'
  operation: Scan Table
  output: property_type_code , property_name , room_count
  predicate: Predicate [ room_count > 1 AND property_type_code = 'Apartment' ]
  table: Properties
id: '#3'
operation: Union
output: '#1.property_name'
"
